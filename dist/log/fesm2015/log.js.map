{"version":3,"file":"log.js","sources":["../../../projects/log/src/lib/log.service.ts","../../../projects/log/src/lib/log.component.ts","../../../projects/log/src/lib/log.module.ts","../../../projects/log/src/public-api.ts","../../../projects/log/src/log.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { scan, shareReplay, take } from 'rxjs/operators';\nexport enum LogLevel {\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport interface LogMessage {\n  name: string;\n  timestamp: number;\n  level: LogLevel;\n  message: string;\n  args: any[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  constructor(\n    @Optional()\n    @Inject('log-name')\n    public name: string = 'app'\n  ) {\n    this.name = this.name || 'app';\n    // LogService.out$.subscribe((p) => console.log(p.message, ...p.args));\n    LogService.buffer$.subscribe((buffered) => {});\n  }\n\n  private static _out$ = new Subject<LogMessage>();\n  static out$ = LogService._out$.pipe(\n    shareReplay(1)\n\n    // scan((acc, val) => {\n    //   acc.push(val as never);\n    //   return acc;\n    // }, []),\n    // shareReplay(1)\n  );\n\n  private static readonly outSub = LogService.out$.subscribe((p) =>\n    console.log(\n      `${new Date(p.timestamp).toISOString()} ${p.name} [${p.level}] ${\n        p.message\n      }`,\n      ...p.args\n    )\n  );\n\n  static buffer$ = LogService.out$.pipe(\n    scan((acc, val) => {\n      acc.push(val as never);\n      if (acc.length > 1000) {\n        acc.shift();\n      }\n      return acc;\n    }, []),\n    shareReplay(1)\n  );\n  level: LogLevel = LogLevel.INFO;\n\n  private supplementals = new Map<string, LogService>();\n\n  log(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.INFO, message, args);\n    LogService._out$.next(packed);\n  }\n\n  warn(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.WARN, message, args);\n    LogService._out$.next(packed);\n  }\n\n  error(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.ERROR, message, args);\n    LogService._out$.next(packed);\n  }\n\n  supplemental(name: string): LogService {\n    if (!this.supplementals.has(name)) {\n      this.supplementals.set(name, new LogService(name));\n    }\n    return this.supplementals.get(name) as LogService;\n  }\n\n  private buildMessage(\n    level: LogLevel,\n    message: string,\n    args: any[]\n  ): LogMessage {\n    return {\n      level,\n      message,\n      args,\n      timestamp: Date.now(),\n      name: this.name,\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-log',\n  template: `\n    <p>\n      log works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class LogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n})\nexport class LogModule {}\n","/*\n * Public API Surface of log\n */\n\nexport * from './lib/log.service';\nexport * from './lib/log.component';\nexport * from './lib/log.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}