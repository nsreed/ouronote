{"version":3,"sources":["./projects/demo/src/app/login/login.component.ts","./projects/demo/src/app/login/login.component.html","./projects/demo/src/app/components/certificate-form/certificate-form.component.ts","./projects/demo/src/app/components/certificate-form/certificate-form.component.html","./projects/demo/src/app/welcome/welcome.component.ts","./projects/demo/src/app/welcome/welcome.component.html","./projects/demo/src/app/user/user.service.ts","./projects/ng-gun/src/lib/soul.pipe.ts","./projects/ng-gun/src/lib/functions/gun-utils.ts","./projects/demo/src/app/app.module.ts","./projects/demo/src/app/certificates/certificates/certificates.component.ts","./projects/demo/src/app/certificates/certificates/certificates.component.html","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/app.component.html","./projects/ng-gun/src/lib/chain.directive.ts","./projects/demo/src/app/certificates/certificates.module.ts","/home/nsreed/repos/gun/browser.js","./projects/ng-gun/src/lib/verify.pipe.ts","./projects/demo/src/app/certificates/create-certificate/create-certificate.component.ts","./projects/demo/src/app/certificates/create-certificate/create-certificate.component.html","./projects/demo/src/app/components/confirm/confirm.component.ts","./projects/demo/src/app/components/confirm/confirm.component.html","./projects/demo/src/app/app-routing.module.ts","./projects/demo/src/environments/environment.ts","./projects/ng-gun/src/lib/ng-gun.service.ts","./projects/ng-gun/src/lib/gun-auth.guard.ts","./projects/demo/src/app/components/alias-autocomplete/alias-autocomplete.component.ts","./projects/demo/src/app/components/alias-autocomplete/alias-autocomplete.component.html","./projects/ng-gun/src/lib/alias.pipe.ts","/home/nsreed/repos/gun sync","./projects/ng-gun/src/lib/ng-gun.component.ts","/home/nsreed/repos/gun/gun.js","./projects/ng-gun/src/lib/ng-sea.service.ts","./projects/demo/src/app/session-info/session-info.component.html","./projects/demo/src/app/session-info/session-info.component.ts","./projects/demo/src/app/gun-peers/gun-peers.component.html","./projects/demo/src/app/gun-peers/gun-peers.component.ts","./projects/demo/src/main.ts","./projects/ng-gun/src/lib/classes/GunChain.ts","./projects/demo/src/app/forms-ui/forms-ui.module.ts","./projects/ng-gun/src/lib/ng-gun.module.ts","./projects/ng-gun/src/lib/updated.pipe.ts","./$_lazy_route_resource lazy namespace object","./projects/demo/src/app/components/certificates/certificates.component.ts","./projects/demo/src/app/components/certificates/certificates.component.html"],"names":[],"mappings":"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AACA;AACA;AACA;AACA,KAAK,IAA6B,EAAE;AACpC;;AAEA,EAAE;AACF;AACA;AACA,0BAA0B,iBAAiB;AAC3C,aAAa,iBAAiB;AAC9B,aAAa,gBAAgB;AAC7B,cAAc,gBAAgB;AAC9B,eAAe,gBAAgB;AAC/B;AACA,uBAAuB;AACvB,mCAAmC;AACnC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,gBAAgB,qDAAqD;AACrE;AACA;AACA,mCAAmC;AACnC,6BAA6B;AAC7B,4BAA4B,MAAM,OAAO;AACzC;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA,4CAA4C;AAC5C,oBAAoB;AACpB;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA,kCAAkC;AAClC,6BAA6B;AAC7B;AACA,mBAAmB;AACnB,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,+BAA+B;AAC/B;AACA,iBAAiB,WAAW,UAAU;AACtC,cAAc,YAAY,eAAe;AACzC,UAAU;AACV;AACA;AACA,oCAAoC;AACpC,sBAAsB;AACtB,cAAc,gBAAgB;AAC9B,mCAAmC,cAAc;AACjD,gCAAgC;AAChC;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE;AACA,iBAAiB;AACjB,OAAO;AACP,IAAI,SAAS;AACb;AACA;AACA,GAAG,YAAY;AACf;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,8BAA8B;AAC9B,gDAAgD;AAChD;AACA,GAAG;AACH,uBAAuB;AACvB,uDAAuD;AACvD,gBAAgB;AAChB;AACA;AACA,WAAW;AACX,4BAA4B,IAAI;AAChC;AACA,GAAG;AACH,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C,+BAA+B,KAAK;AAChF;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA,mBAAmB;AACnB,OAAO;AACP,kCAAkC,YAAY;AAC9C,mCAAmC,wBAAwB;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,OAAO;AACP,+BAA+B,WAAW;AAC1C,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA,YAAY,SAAS,SAAS;AAC9B,2CAA2C;AAC3C,qBAAqB;AACrB,wBAAwB;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA,gBAAgB,YAAY,SAAS;AACrC,qBAAqB;AACrB,kBAAkB,+BAA+B;AACjD;AACA,+BAA+B;AAC/B,iCAAiC;AACjC;AACA,IAAI;AACJ,GAAG;AACH;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA,YAAY,kBAAkB;;AAE9B;AACA;AACA,YAAY,gCAAgC;;AAE5C;AACA;AACA;AACA;AACA,uCAAuC;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,aAAa;AACb;AACA,qCAAqC;AACrC,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA,uBAAuB;AACvB,eAAe;AACf,kBAAkB,cAAc;AAChC,sBAAsB,eAAe;AACrC;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA,kCAAkC;AAClC;AACA,wBAAwB;AACxB,GAAG;AACH,6BAA6B,oFAAoF;AACjH,0CAA0C;AAC1C;AACA;AACA,cAAc;AACd,kBAAkB;AAClB;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB,cAAc;AACpC,aAAa,sBAAsB;AACnC,gCAAgC;AAChC,cAAc;AACd,KAAK;AACL,yBAAyB;AACzB;AACA;AACA,GAAG;AACH,6BAA6B,kBAAkB,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA,cAAc;AACd,6BAA6B,uCAAuC;AACpE,iCAAiC;AACjC,iCAAiC,QAAQ;AACzC,eAAe;AACf,mBAAmB;AACnB,sDAAsD;AACtD;AACA;AACA;AACA,GAAG;AACH,iCAAiC,OAAO;AACxC,mBAAmB,eAAe;AAClC,yBAAyB;AACzB,8BAA8B,oBAAoB;AAClD;AACA,iBAAiB;AACjB;AACA,sBAAsB;AACtB,qBAAqB,SAAS;AAC9B,mBAAmB,cAAc;AACjC,gBAAgB,8CAA8C;AAC9D;AACA,GAAG;AACH,GAAG;AACH,mCAAmC;AACnC,WAAW,OAAO;AAClB,mCAAmC,MAAM,QAAQ;AACjD,oCAAoC,MAAM,OAAO;AACjD,cAAc,6CAA6C;AAC3D,0CAA0C;AAC1C,wBAAwB,UAAU;AAClC;AACA,kBAAkB;AAClB;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA,MAAM;AACN,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,YAAY;AACZ;AACA;AACA,yBAAyB;AACzB,yCAAyC;AACzC,oBAAoB;AACpB,cAAc;AACd;AACA;AACA,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA,6BAA6B;AAC7B,oCAAoC;AACpC,eAAe,WAAW;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH,sCAAsC;AACtC,yCAAyC,eAAe;AACxD,6BAA6B,kBAAkB,EAAE;AACjD;AACA,sBAAsB;AACtB,kEAAkE,cAAc;AAChF,iBAAiB;AACjB,aAAa,iBAAiB;AAC9B;AACA;AACA,mBAAmB;AACnB,WAAW,2BAA2B;AACtC;AACA,GAAG;AACH,GAAG;AACH;AACA,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA,YAAY;AACZ,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qCAAqC;AACrC;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,qBAAqB,gCAAgC;AACrD,kBAAkB;AAClB,oBAAoB,IAAI;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB,kBAAkB;AAClB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa;AACb,oBAAoB;AACpB;AACA,GAAG;AACH;AACA,eAAe;AACf;AACA,kBAAkB;AAClB,+BAA+B,gCAAgC;AAC/D;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,mBAAmB;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa,sCAAsC;AACnD;AACA,IAAI,eAAe;AACnB;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA,cAAc,KAAK;AACnB,iBAAiB,4BAA4B;AAC7C;AACA,eAAe;AACf;AACA;AACA;AACA,iCAAiC;AACjC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;;AAEF;AACA,wBAAwB,mBAAmB,QAAQ;AACnD,8BAA8B;AAC9B,+BAA+B,gBAAgB;AAC/C;;AAEA,uBAAuB;;AAEvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6BAA6B,mBAAmB;AAChD;AACA;AACA,uBAAuB,SAAS;AAChC,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA,iBAAiB;AACjB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,6BAA6B,qBAAqB,SAAS;AAC3D;AACA;AACA,KAAK,EAAE;AACP;AACA,eAAe;AACf;AACA;AACA,yBAAyB;AACzB;AACA,eAAe,gCAAgC;AAC/C,yBAAyB,gCAAgC;AACzD,6BAA6B,sCAAsC;AACnE,iCAAiC,iCAAiC;AAClE,0BAA0B;AAC1B,wBAAwB;AACxB;AACA,sBAAsB,+CAA+C;AACrE,uBAAuB,gEAAgE;AACvF;AACA;AACA,aAAa;AACb;AACA;AACA,qBAAqB,uCAAuC;AAC5D,sBAAsB,gBAAgB,2BAA2B,EAAE;AACnE,0BAA0B,YAAY;AACtC,+BAA+B,gBAAgB,gBAAgB,GAAG;AAClE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,kBAAkB,gBAAgB,uBAAuB,GAAG,YAAY;AACxE;AACA;AACA,cAAc;AACd,mBAAmB,SAAS;AAC5B;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B,sBAAsB;AACtB,oBAAoB,oCAAoC,0CAA0C,SAAS;AAC3G;AACA;AACA,YAAY,2BAA2B,oBAAoB;AAC3D;AACA,gEAAgE;AAChE,sEAAsE;AACtE;AACA,6DAA6D;AAC7D;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,oEAAoE;AACpE,mCAAmC;AACnC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C,uCAAuC;AACvC,sBAAsB;AACtB,mBAAmB,+BAA+B;AAClD,sBAAsB;AACtB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,GAAG;;AAEH,GAAG;AACH;AACA,2BAA2B,gCAAgC,SAAS,WAAW;AAC/E,yCAAyC,SAAS;AAClD,kDAAkD;AAClD,gBAAgB,qBAAqB,sCAAsC;AAC3E;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B;AACA,kBAAkB;AAClB,8BAA8B,cAAc;AAC5C;AACA,yCAAyC;AACzC;AACA,eAAe;AACf;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;AACA,gBAAgB;AAChB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB,+BAA+B,SAAS;AACxC,+BAA+B;AAC/B,+BAA+B;AAC/B,wCAAwC,OAAO,WAAW,EAAE,GAAG,SAAS;AACxE,gBAAgB,SAAS,WAAW;AACpC;AACA,iCAAiC;AACjC,MAAM;AACN;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,8BAA8B;AAC9B;AACA,yBAAyB;AACzB;AACA,6BAA6B,+BAA+B,cAAc,EAAE;;AAE5E;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL,kDAAkD,2JAA2J,4CAA4C;AACzP;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;AACA;AACA;AACA,GAAG;;AAEH,GAAG;AACH;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,wBAAwB;AACxB,qBAAqB;AACrB;AACA;AACA,aAAa,oBAAoB;AACjC,MAAM;AACN,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE,sDAAsD;AACtD;AACA,KAAK;AACL;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,GAAG;AACH,8BAA8B,0BAA0B,iBAAiB,+DAA+D,aAAa,EAAE;;AAEvJ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,uBAAuB;AACvB,iCAAiC;;AAEjC,oCAAoC;AACpC,MAAM,mCAAmC,uBAAuB,EAAE;AAClE;;AAEA,0DAA0D;AAC1D,sCAAsC;;AAEtC,GAAG;AACH;AACA,EAAE;;AAEF,EAAE;AACF;AACA,oCAAoC;AACpC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,gCAAgC,SAAS,WAAW;AACpD;AACA,MAAM;AACN,gCAAgC;AAChC;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP,cAAc;AACd,MAAM;AACN;AACA,kBAAkB,sBAAsB;AACxC;AACA,mCAAmC;AACnC;AACA,OAAO;AACP;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA;AACA,6CAA6C;AAC7C,8BAA8B;AAC9B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C,aAAa;AACzE;AACA;AACA,aAAa,MAAM,YAAY;AAC/B,qCAAqC,WAAW;AAChD,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,+BAA+B;AAC/B,+BAA+B,+BAA+B;AAC9D,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,uCAAuC;AACvC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mBAAmB;AACnB,eAAe,UAAU;AACzB,gCAAgC;AAChC,2CAA2C;AAC3C;AACA;AACA,0CAA0C,kCAAkC,SAAS;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,oBAAoB,UAAU;AAC9C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0BAA0B;AAC1B;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,4CAA4C,SAAS;AACrD;AACA,4BAA4B;AAC5B;AACA,IAAI;AACJ;AACA;AACA,kCAAkC;AAClC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,kBAAkB;AAClB,mBAAmB,SAAS;AAC5B,gBAAgB,SAAS;AACzB;AACA,gBAAgB;AAChB;AACA,6BAA6B,iBAAiB;AAC9C,oBAAoB,SAAS;AAC7B,IAAI;AACJ,0BAA0B;AAC1B;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB;AACzB,iBAAiB,qEAAqE;AACtF;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,uBAAuB;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,oDAAoD;AACpD;AACA;AACA,IAAI;AACJ,iCAAiC,2CAA2C;AAC5E,WAAW;AACX;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,eAAe;AACf;AACA;AACA,gHAAgH;AAChH;AACA;AACA;AACA,yCAAyC;AACzC,kBAAkB,gBAAgB;AAClC,qBAAqB,6BAA6B,eAAe;AACjE,yBAAyB;AACzB,wBAAwB;AACxB;AACA,KAAK;AACL,IAAI,GAAG,MAAM,MAAM,WAAW;AAC9B;AACA;AACA;AACA,wFAAwF,SAAS;AACjG,+CAA+C;AAC/C,8BAA8B;AAC9B,8CAA8C;AAC9C,uCAAuC,SAAS;AAChD,iEAAiE;AACjE,gFAAgF,SAAS;;;AAGzF;AACA,kEAAkE,mBAAmB,SAAS;AAC9F,4CAA4C;AAC5C,2BAA2B,gBAAgB,SAAS,uBAAuB,EAAE;AAC7E;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,iCAAiC;AACjC;AACA,gBAAgB;AAChB,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mDAAmD;AACnD;AACA,qDAAqD;AACrD,gDAAgD,QAAQ;AACxD;AACA;AACA,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uIAAuI;AAC9K,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iDAAiD;AACjD,cAAc,sBAAsB;AACpC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA,GAAG;;AAEH;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,wCAAwC;AACxC,mCAAmC,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,aAAa;AAC9C,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB,EAAE,yBAAyB;AACpD,IAAI;AACJ,cAAc;AACd,GAAG,kBAAkB,OAAO,cAAc;;AAE1C,0BAA0B;AAC1B;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA,WAAW;AACX,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yBAAyB,KAAK,kCAAkC;AAChE,IAAI,GAAG,eAAe;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA,yEAAyE;AACzE;AACA,2CAA2C;AAC3C;AACA,IAAI;AACJ;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,IAAI,IAAI;AACR,WAAW;AACX,WAAW;AACX,8CAA8C;AAC9C,aAAa,sBAAsB;AACnC;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,SAAS;AACnC,eAAe;AACf;AACA;AACA;AACA,sDAAsD;AACtD,mCAAmC;AACnC,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA,2DAA2D;AAC3D;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,gBAAgB,sBAAsB,SAAS;AAC/C;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B,MAAM;AACN,mBAAmB;AACnB;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iDAAiD;AACjD,cAAc,sBAAsB,sBAAsB;AAC1D;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB,yBAAyB;AACjE;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA,uBAAuB;AACvB,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe;AACf,kBAAkB,QAAQ;AAC1B,qBAAqB;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,iHAAiH;AACjH;AACA;AACA,wBAAwB;AACxB,eAAe,OAAO;AACtB,KAAK;AACL;AACA;AACA,sDAAsD,uBAAuB;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,sBAAsB;AACtB,qBAAqB;AACrB,sBAAsB,oBAAoB;AAC1C,IAAI;AACJ;AACA;AACA;AACA,uCAAuC;AACvC,mBAAmB,aAAa;AAChC,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,8DAA8D,SAAS;AACvE,+CAA+C;AAC/C;AACA,gDAAgD,WAAW,sBAAsB;AACjF,EAAE;;AAEF,EAAE;AACF;AACA;AACA;AACA;AACA,mBAAmB;AACnB,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,6BAA6B,6BAA6B,YAAY,yBAAyB,EAAE;AACjG,cAAc,sBAAsB,kEAAkE;AACtG,0BAA0B;AAC1B,IAAI;AACJ;AACA;AACA,kBAAkB;AAClB,EAAE;;AAEF,EAAE;AACF,iCAAiC,SAAS;;AAE1C,+BAA+B;AAC/B,MAAM,wCAAwC;AAC9C;AACA;AACA,YAAY,uBAAuB,UAAU,0BAA0B,eAAe,uBAAuB;AAC7G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA,qBAAqB,8BAA8B;AACnD,KAAK;AACL;;AAEA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,IAAI;AACJ;;AAEA,qBAAqB;AACrB,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,QAAQ;AACR,KAAK,SAAS;AACd;AACA,GAAG;;AAEH;AACA;AACA;AACA,iBAAiB;AACjB,kCAAkC;AAClC;AACA,oCAAoC;AACpC;AACA,wBAAwB;AACxB,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,kBAAkB,+CAA+C,sBAAsB,EAAE;AACzF;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,mCAAmC;AACnC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD,mBAAmB,+CAA+C,EAAE,aAAa;AACjF;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ;AACR,KAAK;AACL;AACA,oCAAoC,sDAAsD;AAC1F;AACA,0CAA0C,SAAS;AACnD;AACA;AACA,mBAAmB,gBAAgB;AACnC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA,GAAG;AACH,EAAE;;AAEF,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF,4BAA4B;AAC5B;;AAEA;;AAEA;AACA,aAAa;AACb,+BAA+B,kBAAkB,kCAAkC;AACnF;AACA,sBAAsB,0BAA0B,WAAW;AAC3D;AACA,SAAS,sBAAsB,SAAS;AACxC;AACA,cAAc;AACd;AACA;AACA;AACA;AA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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form = this.fb.group({\n    alias: [null, Validators.required],\n    password: [null, Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private ngGun: NgGunService,\n    router: Router\n  ) {\n    ngGun.auth().auth$.subscribe((data) => {\n      // console.log('auth data', data);\n      router.navigateByUrl('/user');\n    });\n  }\n\n  ngOnInit(): void {\n    this.form.updateValueAndValidity();\n  }\n\n  create() {\n    if (this.form.invalid) {\n      return;\n    }\n    // console.log('create', this.form.value);\n    this.ngGun\n      .auth()\n      .create(this.form.value.alias, this.form.value.password)\n      .subscribe((data) => {\n        // console.log('create result', data)\n      });\n  }\n\n  login() {\n    if (!this.form.valid) {\n      return;\n    }\n    // console.log('login', this.form.value);\n    this.ngGun\n      .auth()\n      .login(this.form.value.alias, this.form.value.password)\n      .subscribe((data) => {\n        // console.log('login result', data);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <mat-form-field>\n    <input matInput formControlName=\"alias\">\n    <mat-label>alias</mat-label>\n  </mat-form-field>\n  <mat-form-field>\n    <input type=\"password\" matInput formControlName=\"password\">\n    <mat-label>password</mat-label>\n  </mat-form-field>\n  <button mat-button color=\"primary\" (click)=\"login()\" [disabled]=\"form.invalid\">Log In</button>\n  <button mat-button color=\"primary\" (click)=\"create()\" [disabled]=\"form.invalid\">Create</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-certificate-form',\n  templateUrl: './certificate-form.component.html',\n  styleUrls: ['./certificate-form.component.scss'],\n})\nexport class CertificateFormComponent implements OnInit {\n  form = this.fb.group({\n    multi: false,\n    people: this.fb.array([]),\n    policies: this.fb.array([]),\n    expires: [null, Validators.min(new Date().getTime())],\n  });\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Certificate</h1>\n<form mat-dialog-content [formGroup]=\"form\">\n  <mat-radio-group formControlName=\"multi\">\n    <mat-radio-button [value]=\"true\">Everyone</mat-radio-button>\n    <mat-radio-button [value]=\"false\">Specific People:</mat-radio-button>\n  </mat-radio-group>\n\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Search</mat-label>\n  </mat-form-field>\n\n  <h2>Policies</h2>\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Path</mat-label>\n  </mat-form-field>\n  <mat-checkbox>Require Public Key in path</mat-checkbox>\n\n  <h2>Expires</h2>\n  <mat-form-field>\n    <input matInput [matDatepicker]=\"expire\">\n    <mat-label>Select an expiration date</mat-label>\n    <mat-datepicker #expire></mat-datepicker>\n    <mat-datepicker-toggle [for]=\"expire\" matSuffix></mat-datepicker-toggle>\n  </mat-form-field>\n\n  <h2>Blacklist</h2>\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Specify a blacklist path</mat-label>\n  </mat-form-field>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a mat-button routerLink=\"/login\">Log In</a>\n","import { Injectable } from '@angular/core';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { User } from './model';\n// import { User } from ;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  user = this.ngGun.auth();\n  constructor(private ngGun: NgGunService<User>) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'soul',\n})\nexport class SoulPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return Gun.node.is(value) ? Gun.node.soul(value) : undefined;\n  }\n}\n","import * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunCertificate } from '../classes/Certificate';\nexport const gunUpdateTime = (value: any) => {\n  const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n  if (!updates) {\n    return 0;\n  }\n  return Object.values(updates).reduce((latest: any, time: any) =>\n    time > latest ? time : latest\n  ) as number;\n};\nexport const gunChainArray = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  do {\n    if (c._.get) {\n      path.push(c);\n    } else {\n      break;\n    }\n    c = c.back();\n  } while (c.back() !== c);\n\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport const gunCertificateChain = (value: IGunChainReference) =>\n  gunChainArray(value).map((c) => c.get('certs'));\n\n/**\n * Returns an array of keys representing the path of the given chain\n * @param value the chain to pathify\n */\nexport const gunPath = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport function parseCertificate(cert: string) {\n  const RE_SEA_CERT = /^SEA/;\n  if (!RE_SEA_CERT.test(cert)) {\n    throw new Error('could not parse certificate, incorrect prefix');\n  }\n  const scrubbed = cert.replace(RE_SEA_CERT, '');\n  return JSON.parse(scrubbed) as IGunCertificate;\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CertificateFormComponent } from './components/certificate-form/certificate-form.component';\nimport { CertificatesComponent } from './components/certificates/certificates.component';\nimport { ConfirmComponent } from './components/confirm/confirm.component';\nimport { FormsUiModule } from './forms-ui/forms-ui.module';\nimport { GunPeersComponent } from './gun-peers/gun-peers.component';\nimport { LoginComponent } from './login/login.component';\nimport { SessionInfoComponent } from './session-info/session-info.component';\nimport { AliasAutocompleteComponent } from './components/alias-autocomplete/alias-autocomplete.component';\nimport { CertificatesModule } from './certificates/certificates.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n@NgModule({\n  declarations: [\n    GunPeersComponent,\n    AppComponent,\n    LoginComponent,\n    SessionInfoComponent,\n    ConfirmComponent,\n    CertificatesComponent,\n    CertificateFormComponent,\n    AliasAutocompleteComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsUiModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollingModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatToolbarModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    CertificatesModule,\n    MatSidenavModule,\n  ],\n  providers: [\n    {\n      provide: 'gun-options',\n      useValue: {\n        localStorage: false,\n        peers: [\n          location.origin + '/gun',\n          'https://resistance-tower.herokuapp.com/gun',\n        ],\n      },\n    },\n  ],\n  exports: [CertificatesComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { filter, map, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport { UserService } from '../../user/user.service';\nimport * as Gun from 'gun';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss'],\n})\nexport class CertificatesComponent implements OnInit {\n  pub$ = this.chainDirective.chain$.pipe(\n    map((chain) => chain.recordPub.replace('~', ''))\n  );\n  certs$ = this.chainDirective.chain$.pipe(\n    switchMap((chain) => chain.get('certs').open())\n  );\n  owners$ = this.chainDirective.chain$.pipe(\n    switchMap((chain) => chain.get('owner').open())\n  );\n  owner$ = this.chainDirective.chain$.pipe(\n    mergeMap((node) =>\n      node.get('owner').map({ includeKeys: true }).on({ includeKeys: true })\n    ),\n    filter(\n      (ownerTuple: any) =>\n        ownerTuple[0] &&\n        ownerTuple[1] === this.userService.user.is.pub.replace('~', '')\n    ),\n    map((ownerTuple) => ownerTuple[0])\n  );\n  constructor(\n    private chainDirective: ChainDirective,\n    private userService: UserService,\n    private ngGun: NgGunService\n  ) {\n    this.certs$.subscribe((c) => {});\n    this.owners$.subscribe();\n    // this.ngGun\n    //   .findAlias(userService.user.is.pub)\n    //   .subscribe((v) => console.log('alias', v));\n  }\n\n  ngOnInit(): void {}\n}\n","<h1>\n  <mat-icon>security</mat-icon>\n  Certificates\n</h1>\n<p>Showing certificates for {{pub$|async}}</p>\n<div gdColumns=\"max-content repeat(3, max-content)\" gdGap=\"1em\">\n  <span></span>\n  <span>Path</span>\n  <span>User</span>\n  <span>Permissions</span>\n  <ng-container *ngFor=\"let certPath of (certs$|async)|keyvalue\">\n    <ng-container *ngFor=\"let certUser of certPath.value|keyvalue\">\n      <mat-checkbox></mat-checkbox>\n      <code>{{certPath.key}}</code>\n      <span>{{certUser.key|alias|async}}</span>\n      <code>{{(certUser.value|verify|async)?.w | json}}</code>\n    </ng-container>\n  </ng-container>\n</div>\n\n<app-create-certificate *ngIf=\"owner$|async\"></app-create-certificate>\n","import { Component } from '@angular/core';\nimport { NgGunService } from '../../../ng-gun/src/lib/ng-gun.service';\nimport { User } from './user/model';\nimport {\n  Router,\n  ActivatedRoute,\n  ChildActivationEnd,\n  NavigationEnd,\n} from '@angular/router';\nimport { filter, takeLast } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  user: any;\n  constructor(\n    public ngGun: NgGunService<User>,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.user = this.ngGun.auth();\n    console.log('!! ROUTE SNAPSHOT', route.snapshot);\n\n    let lastActivated: ChildActivationEnd;\n    router.events\n      .pipe(filter((e) => e instanceof ChildActivationEnd))\n      .subscribe((e) => (lastActivated = e as any));\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((e) => {\n        console.log('last activated at navigation end', lastActivated);\n      });\n    // router.events.subscribe((e) => console.log('router event', e));\n  }\n\n  logout() {\n    this.ngGun.auth().logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","<mat-sidenav-container fxFlexFill>\n  <mat-sidenav #nav [mode]=\"'side'\" [opened]=\"true\">\n    <!-- <mat-toolbar>\n      <button mat-icon-button (click)=\"nav.toggle()\">\n        <mat-icon>chevron_left</mat-icon>\n      </button>\n    </mat-toolbar> -->\n    <mat-action-list *ngIf=\"user.is\">\n      <mat-list-item routerLinkActive=\"active\" routerLink=\"/user/vectors\" matTooltip=\"Vectors\">\n        <mat-icon mat-list-icon>note</mat-icon>\n      </mat-list-item>\n      <mat-list-item [matMenuTriggerFor]=\"sessionMenu\">\n        <mat-icon mat-list-icon>person</mat-icon>\n      </mat-list-item>\n      <mat-menu #sessionMenu>\n        <button mat-menu-item (click)=\"logout()\">Log Out</button>\n      </mat-menu>\n    </mat-action-list>\n    <!-- <ng-template #pubMenu>\n      <mat-action-list>\n        <mat-list-item routerLink=\"/login\">Log In</mat-list-item>\n      </mat-action-list>\n    </ng-template> -->\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Directive, Input, EventEmitter } from '@angular/core';\nimport { GunChain } from './classes/GunChain';\nimport { NgGunService } from './ng-gun.service';\nimport { shareReplay } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[gunChain]',\n  exportAs: 'gunChain',\n})\nexport class ChainDirective {\n  private _chain?: GunChain | undefined;\n  public get chain(): GunChain | undefined {\n    return this._chain;\n  }\n  @Input('gunChain')\n  public set chain(value: GunChain | undefined) {\n    if (value !== this._chain) {\n      this._chain = value;\n      this._chain$.emit(value);\n    }\n  }\n\n  private _chain$ = new EventEmitter<GunChain>();\n  chain$ = this._chain$.pipe(shareReplay(1));\n\n  constructor(private ngGun: NgGunService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CertificatesComponent } from './certificates/certificates.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { CreateCertificateComponent } from './create-certificate/create-certificate.component';\nimport { MatListModule } from '@angular/material/list';\nimport { NgGunModule } from '../../../../ng-gun/src/lib/ng-gun.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  declarations: [CertificatesComponent, CreateCertificateComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatInputModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatStepperModule,\n\n    MatListModule,\n    NgGunModule,\n  ],\n  exports: [CertificatesComponent],\n})\nexport class CertificatesModule {}\n","module.exports = require('./gun.js')","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Optional,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { map, take, pluck, tap } from 'rxjs/operators';\nimport { NgSeaService } from './ng-sea.service';\nimport { ChainDirective } from './chain.directive';\nimport { SEA } from 'gun';\nimport { of, from } from 'rxjs';\nimport { NgGunService } from './ng-gun.service';\n\n@Pipe({\n  name: 'verify',\n})\nexport class VerifyPipe extends AsyncPipe implements PipeTransform {\n  constructor(\n    private ngGun: NgGunService,\n    private sea: NgSeaService,\n    private ref: ChangeDetectorRef,\n    @Optional()\n    private chain: ChainDirective\n  ) {\n    super(ref);\n  }\n  transform(value: any, ...args: any[]) {\n    if (!this.chain.chain) {\n      return null;\n    }\n    return from(\n      SEA.verify(value, this.chain.chain?.recordPub.replace('~', ''))\n    ).pipe(\n      // tap((v) => console.log('verified', v)),\n      tap((v) => this.ref.detectChanges())\n    ) as any;\n    // ) as any;\n  }\n}\n","import { Component, OnInit, NgZone, Inject } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { NgSeaService } from '../../../../../ng-gun/src/lib/ng-sea.service';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { from } from 'rxjs';\nimport { SEA } from 'gun';\n\n@Component({\n  selector: 'app-create-certificate',\n  templateUrl: './create-certificate.component.html',\n  styleUrls: ['./create-certificate.component.scss'],\n})\nexport class CreateCertificateComponent implements OnInit {\n  form = this.fb.group({\n    paths: this.fb.array(['layers']),\n    public: true,\n    people: this.fb.array([]),\n    protected: false,\n    options: this.fb.group({\n      blacklist: ['blacklist', Validators.required],\n      expires: null,\n    }),\n  });\n\n  userCtl = this.fb.control(null);\n\n  userResults: any[] = [];\n\n  pathCtl = this.fb.control(null);\n  constructor(\n    private fb: FormBuilder,\n    private ngGun: NgGunService,\n    private sea: NgSeaService,\n    private chain: ChainDirective,\n    private ngZone: NgZone,\n    @Inject('gun-options')\n    private gunOpts: any\n  ) {\n    console.log(this.form.value);\n    this.form.statusChanges.subscribe((sc) => console.log('status', sc));\n    this.userCtl.valueChanges\n      .pipe(filter((alias) => alias !== null))\n      .subscribe((alias: string) => {\n        if (alias.startsWith('~')) {\n          return;\n        }\n        console.log('searching', alias);\n        this.ngGun.findAlias(alias).subscribe((found: any) => {\n          console.log('found', found);\n          if (found === undefined || found === null) {\n            this.userResults = [];\n            return;\n          }\n          // FIXME aliases are not guaranteed to be unique, and this may give a false match to the user\n          // FIXME warn the user that they should verify that the public key matches the expected public key for whomever they're inviting\n          const foundPub = Object.keys(found).find((k) => k !== '_');\n          this.userResults = [\n            {\n              alias,\n              pub: foundPub,\n            },\n          ];\n        });\n      });\n  }\n\n  ngOnInit(): void {}\n\n  addPath(path: any) {\n    const n = this.form.controls.paths.value;\n    n.push(path);\n    this.pathCtl.patchValue(null);\n  }\n  removePath(path: any) {\n    const p = this.form.controls.paths.value as string[];\n    const idx = p.indexOf(path);\n    if (idx >= 0) {\n      p.splice(idx, 1);\n    }\n  }\n\n  onSelectUser(event: MatAutocompleteSelectedEvent) {\n    const selectedValue = event.option.value;\n    console.log('selected', selectedValue);\n    this.userCtl.reset();\n    this.form.controls.people.value.push(selectedValue.replace('~', ''));\n  }\n\n  addUser() {}\n\n  removeUser(user: any) {\n    const p = this.form.controls.people.value as string[];\n    const idx = p.indexOf(user);\n    if (idx >= 0) {\n      p.splice(idx, 1);\n    }\n  }\n\n  create() {\n    console.log('creating certificate store');\n    const value = this.form.value;\n    const certificants = value.public ? ['*'] : value.people;\n    const isProtected = value.protected;\n    const blacklist = value.options.blacklist;\n    const expires = value.options.expires;\n    const opts = {\n      blacklist,\n      expires,\n    };\n    const r = this.chain.chain;\n    if (!r) {\n      return;\n    }\n    // FIXME if we aren't the owner, fail gracefully\n    r.get('owner')\n      .get(this.ngGun.auth().is.pub)\n      .once()\n      .pipe(\n        mergeMap((encPair) => from(SEA.decrypt(encPair, this.ngGun.auth().is)))\n      )\n      .subscribe((recordPair: any) => {\n        console.log('owns', recordPair.pub);\n        from(\n          // FIXME options not accounted for\n          // TODO improve this process\n          this.sea.getCertStore(\n            certificants,\n            value.paths,\n            recordPair,\n            isProtected,\n            opts\n          )\n        ).subscribe((certStores: any) => {\n          const detachedGun = new NgGunService(this.gunOpts, this.ngZone);\n          (detachedGun.gun.user() as any).auth(recordPair, async () => {\n            const v = detachedGun.gun.user();\n            const certs = v.get('certs');\n            certStores.forEach((store: any) => {\n              console.log('create store', store);\n              Object.keys(store).forEach((k) => {\n                const certPath = certs.get(k);\n                const certNew = store[k];\n                Object.keys(certNew).forEach((pub) => {\n                  console.log('insert cert at', k, pub, certNew[pub]);\n                  certPath.get(pub).put(certNew[pub] as never);\n                });\n                // console.log('create store key', k);\n                // certs.get(k).put(store[k] as never);\n              });\n              // certs.put(store as never);\n            });\n            // v.put(vector);\n            // this.vectorService.vectors.set(v as never);\n          });\n        });\n      });\n  }\n}\n","<mat-vertical-stepper>\n  <mat-step [label]=\"'Paths - ' + form.controls.paths.value.join(', ')\" [stepControl]=\"form.controls.paths\">\n    <mat-list>\n      <mat-list-item *ngFor=\"let path of form.controls.paths.value\">\n        <code>{{path}}</code>\n        <button mat-icon-button color=\"warn\" (click)=\"removePath(path)\">\n          <mat-icon>remove</mat-icon>\n        </button>\n      </mat-list-item>\n    </mat-list>\n    <div>\n      <mat-form-field>\n        <input matInput #pathName [formControl]=\"pathCtl\">\n        <mat-label>Path</mat-label>\n      </mat-form-field>\n      <button mat-icon-button matTooltip=\"Add a path\" (click)=\"addPath(pathName.value)\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n  </mat-step>\n\n  <mat-step label=\"People\" [stepControl]=\"form\" [formGroup]=\"form\">\n    <mat-radio-group [formControl]=\"form.controls.public\">\n      <mat-radio-button [value]=\"true\" matTooltip=\"Apply this certificate to everyone\">Everyone</mat-radio-button>\n      <mat-radio-button [value]=\"false\" matTooltip=\"Apply this certificate to specific people\">\n        Specific People\n      </mat-radio-button>\n    </mat-radio-group>\n    <ng-container *ngIf=\"!form.controls.public.value\">\n\n      <mat-list>\n        <mat-list-item *ngFor=\"let pub of form.controls.people.value\">\n          {{pub|alias|async}}\n          <!-- <code>{{pub}}</code> -->\n\n          <button mat-icon-button matTooltip=\"Add a path\" (click)=\"removeUser(pub)\">\n            <mat-icon>remove</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n      <div>\n        <mat-form-field>\n          <input [formControl]=\"userCtl\" matInput [matAutocomplete]=\"userAutocomplete\">\n          <mat-label>User</mat-label>\n        </mat-form-field>\n        <mat-autocomplete #userAutocomplete (optionSelected)=\"onSelectUser($event)\">\n          <mat-option *ngFor=\"let result of userResults\" [value]=\"result.pub\">\n            Add {{result.alias}} ({{result.pub}})\n          </mat-option>\n        </mat-autocomplete>\n        <button mat-icon-button matTooltip=\"Add a path\" (click)=\"addUser()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </ng-container>\n  </mat-step>\n\n  <mat-step label=\"Permissions\">\n    <mat-radio-group [formControl]='form.controls.protected'>\n      <mat-radio-button [value]=\"false\" matTooltip=\"Users have full control over this path\">Full</mat-radio-button>\n      <mat-radio-button [value]=\"true\" matTooltip=\"Users may add/remove records containing their public key\">Protected\n      </mat-radio-button>\n    </mat-radio-group>\n  </mat-step>\n\n  <mat-step label=\"Options\" [formGroup]=\"form.controls.options\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"expire\" formControlName=\"expires\">\n      <mat-label>Certificate expires</mat-label>\n      <mat-datepicker #expire></mat-datepicker>\n      <mat-datepicker-toggle [for]=\"expire\" matSuffix></mat-datepicker-toggle>\n    </mat-form-field>\n\n    <div></div>\n    <mat-form-field>\n      <input matInput formControlName=\"blacklist\">\n      <mat-label>Blacklist path</mat-label>\n    </mat-form-field>\n  </mat-step>\n\n  <mat-step label=\"Confirm\">\n    <div class=\"mat-error\">\n      <b>WARNING: Verify all choices before creating the certificate.</b>\n      While certificates may be <i>removed</i> after creation, any user who has obtained a copy of the certificate may\n      still use it to modify data.<br>\n      If this is a PUBLIC certificate this can be dangerous!\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"create()\">Create Certificate</button>\n  </mat-step>\n</mat-vertical-stepper>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss'],\n})\nexport class ConfirmComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmComponent>,\n\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {}\n\n  select(value: any) {\n    this.dialogRef.close(value);\n  }\n}\n","<h1 mat-dialog-title>Confirm</h1>\n<div mat-dialog-content>\n  Are you sure you want to?\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"select(false)\">No</button>\n  <button mat-button (click)=\"select(true)\">Yes</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GunAuthGuard } from '../../../ng-gun/src/lib/gun-auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    loadChildren: () => import('./user/user.module').then((m) => m.UserModule),\n    canActivateChild: [GunAuthGuard],\n  },\n  {\n    path: 'posts',\n    loadChildren: () =>\n      import('./user/posts/posts.module').then((m) => m.PostsModule),\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: '',\n    component: WelcomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunConstructorOptions } from 'gun/types/options';\nimport { GunChain } from './classes/GunChain';\nexport const GunOptions = 'gun-options';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgGunService<\n  DataType = Record<string, any>,\n  ReferenceKey = any\n> extends GunChain<DataType, ReferenceKey, 'pre_root'> {\n  get peers() {\n    return this.gun._.root.opt.peers;\n  }\n\n  constructor(\n    @Inject(GunOptions)\n    private gunOptions: IGunConstructorOptions,\n    ngZone: NgZone\n  ) {\n    super(ngZone, new Gun(JSON.parse(JSON.stringify(gunOptions))) as any);\n  }\n\n  findAlias(alias: string) {\n    return this.get(`~@${alias}` as any).once();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, take, tap, timeout } from 'rxjs/operators';\nimport { NgGunService } from './ng-gun.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GunAuthGuard implements CanActivateChild {\n  constructor(private ngGun: NgGunService, private router: Router) {}\n  sessionOrRedirect() {}\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    console.log('gunAuthGuard checking...');\n    if (this.ngGun.auth().is) {\n      console.log('OK: auth().is');\n      return true;\n    }\n    // this.ngGun.auth().recall();\n    return this.ngGun.auth().auth$.pipe(\n      timeout(5000),\n      catchError((err, caught) => {\n        this.router.navigateByUrl('/login');\n        return of({\n          err: 'Session Recall Timeout',\n        });\n      }),\n      tap((ack) => console.log('gunAuthGuard auth$', ack)),\n      filter((ack) => !ack.err),\n      take(1)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alias-autocomplete',\n  templateUrl: './alias-autocomplete.component.html',\n  styleUrls: ['./alias-autocomplete.component.scss']\n})\nexport class AliasAutocompleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field>\n  <input matInput>\n  <mat-label>Enter an alias:</mat-label>\n</mat-form-field>\n","import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { NgGunService } from './ng-gun.service';\nimport { map, take, shareReplay } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Pipe({\n  name: 'alias',\n})\nexport class AliasPipe extends AsyncPipe implements PipeTransform {\n  constructor(private ngGun: NgGunService, _ref: ChangeDetectorRef) {\n    super(_ref);\n  }\n  transform(value: any, ...args: any[]): any {\n    if (value === '*') {\n      return of(value);\n    }\n    return this.ngGun\n      .get(`~${value.replace('~', '')}`)\n      .on()\n      .pipe(\n        map((v: any) => v.alias || value),\n        shareReplay(1)\n      );\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"h66u\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-gun',\n  template: `\n    <p>\n      ng-gun works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgGunComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",";(function(){\n\n  /* UNBUILD */\n  function USE(arg, req){\n    return req? require(arg) : arg.slice? USE[R(arg)] : function(mod, path){\n      arg(mod = {exports: {}});\n      USE[R(path)] = mod.exports;\n    }\n    function R(p){\n      return p.split('/').slice(-1).toString().replace('.js','');\n    }\n  }\n  if(typeof module !== \"undefined\"){ var MODULE = module }\n  /* UNBUILD */\n\n\t;USE(function(module){\n\t\t// Generic javascript utilities.\n\t\tvar Type = {};\n\t\t//Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\n\t\tType.fn = {is: function(fn){ return (!!fn && 'function' == typeof fn) }}\n\t\tType.bi = {is: function(b){ return (b instanceof Boolean || typeof b == 'boolean') }}\n\t\tType.num = {is: function(n){ return !list_is(n) && ((n - parseFloat(n) + 1) >= 0 || Infinity === n || -Infinity === n) }}\n\t\tType.text = {is: function(t){ return (typeof t == 'string') }}\n\t\tType.text.ify = function(t){\n\t\t\tif(Type.text.is(t)){ return t }\n\t\t\tif(typeof JSON !== \"undefined\"){ return JSON.stringify(t) }\n\t\t\treturn (t && t.toString)? t.toString() : t;\n\t\t}\n\t\tType.text.random = function(l, c){\n\t\t\tvar s = '';\n\t\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\t\twhile(l > 0){ s += c.charAt(Math.floor(Math.random() * c.length)); l-- }\n\t\t\treturn s;\n\t\t}\n\t\tType.text.match = function(t, o){ var tmp, u;\n\t\t\tif('string' !== typeof t){ return false }\n\t\t\tif('string' == typeof o){ o = {'=': o} }\n\t\t\to = o || {};\n\t\t\ttmp = (o['='] || o['*'] || o['>'] || o['<']);\n\t\t\tif(t === tmp){ return true }\n\t\t\tif(u !== o['=']){ return false }\n\t\t\ttmp = (o['*'] || o['>'] || o['<']);\n\t\t\tif(t.slice(0, (tmp||'').length) === tmp){ return true }\n\t\t\tif(u !== o['*']){ return false }\n\t\t\tif(u !== o['>'] && u !== o['<']){\n\t\t\t\treturn (t >= o['>'] && t <= o['<'])? true : false;\n\t\t\t}\n\t\t\tif(u !== o['>'] && t >= o['>']){ return true }\n\t\t\tif(u !== o['<'] && t <= o['<']){ return true }\n\t\t\treturn false;\n\t\t}\n\t\tType.text.hash = function(s, c){ // via SO\n\t\t\tif(typeof s !== 'string'){ return }\n\t    c = c || 0;\n\t    if(!s.length){ return c }\n\t    for(var i=0,l=s.length,n; i<l; ++i){\n\t      n = s.charCodeAt(i);\n\t      c = ((c<<5)-c)+n;\n\t      c |= 0;\n\t    }\n\t    return c;\n\t  }\n\t\tType.list = {is: function(l){ return (l instanceof Array) }}\n\t\tType.list.slit = Array.prototype.slice;\n\t\tType.list.sort = function(k){ // creates a new sort function based off some key\n\t\t\treturn function(A,B){\n\t\t\t\tif(!A || !B){ return 0 } A = A[k]; B = B[k];\n\t\t\t\tif(A < B){ return -1 }else if(A > B){ return 1 }\n\t\t\t\telse { return 0 }\n\t\t\t}\n\t\t}\n\t\tType.list.map = function(l, c, _){ return obj_map(l, c, _) }\n\t\tType.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\n\t\tType.obj = {is: function(o){ return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }}\n\t\tType.obj.put = function(o, k, v){ return (o||{})[k] = v, o }\n\t\tType.obj.has = function(o, k){ return o && Object.prototype.hasOwnProperty.call(o, k) }\n\t\tType.obj.del = function(o, k){\n\t\t\tif(!o){ return }\n\t\t\to[k] = null;\n\t\t\tdelete o[k];\n\t\t\treturn o;\n\t\t}\n\t\tType.obj.as = function(o, k, v, u){ return o[k] = o[k] || (u === v? {} : v) }\n\t\tType.obj.ify = function(o){\n\t\t\tif(obj_is(o)){ return o }\n\t\t\ttry{o = JSON.parse(o);\n\t\t\t}catch(e){o={}};\n\t\t\treturn o;\n\t\t}\n\t\t;(function(){ var u;\n\t\t\tfunction map(v,k){\n\t\t\t\tif(obj_has(this,k) && u !== this[k]){ return }\n\t\t\t\tthis[k] = v;\n\t\t\t}\n\t\t\tType.obj.to = function(from, to){\n\t\t\t\tto = to || {};\n\t\t\t\tobj_map(from, map, to);\n\t\t\t\treturn to;\n\t\t\t}\n\t\t}());\n\t\tType.obj.copy = function(o){ // because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\n\t\t\treturn !o? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\n\t\t}\n\t\t;(function(){\n\t\t\tfunction empty(v,i){ var n = this.n, u;\n\t\t\t\tif(n && (i === n || (obj_is(n) && obj_has(n, i)))){ return }\n\t\t\t\tif(u !== i){ return true }\n\t\t\t}\n\t\t\tType.obj.empty = function(o, n){\n\t\t\t\tif(!o){ return true }\n\t\t\t\treturn obj_map(o,empty,{n:n})? false : true;\n\t\t\t}\n\t\t}());\n\t\t;(function(){\n\t\t\tfunction t(k,v){\n\t\t\t\tif(2 === arguments.length){\n\t\t\t\t\tt.r = t.r || {};\n\t\t\t\t\tt.r[k] = v;\n\t\t\t\t\treturn;\n\t\t\t\t} t.r = t.r || [];\n\t\t\t\tt.r.push(k);\n\t\t\t};\n\t\t\tvar keys = Object.keys, map, u;\n\t\t\tObject.keys = Object.keys || function(o){ return map(o, function(v,k,t){t(k)}) }\n\t\t\tType.obj.map = map = function(l, c, _){\n\t\t\t\tvar u, i = 0, x, r, ll, lle, f = 'function' == typeof c;\n\t\t\t\tt.r = u;\n\t\t\t\tif(keys && obj_is(l)){\n\t\t\t\t\tll = keys(l); lle = true;\n\t\t\t\t}\n\t\t\t\t_ = _ || {};\n\t\t\t\tif(list_is(l) || ll){\n\t\t\t\t\tx = (ll || l).length;\n\t\t\t\t\tfor(;i < x; i++){\n\t\t\t\t\t\tvar ii = (i + Type.list.index);\n\t\t\t\t\t\tif(f){\n\t\t\t\t\t\t\tr = lle? c.call(_, l[ll[i]], ll[i], t) : c.call(_, l[i], ii, t);\n\t\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\n\t\t\t\t\t\t\tif(c === l[lle? ll[i] : i]){ return ll? ll[i] : ii } // use this for now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor(i in l){\n\t\t\t\t\t\tif(f){\n\t\t\t\t\t\t\tif(obj_has(l,i)){\n\t\t\t\t\t\t\t\tr = _? c.call(_, l[i], i, t) : c(l[i], i, t);\n\t\t\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\n\t\t\t\t\t\t\tif(c === l[i]){ return i } // use this for now\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn f? t.r : Type.list.index? 0 : -1;\n\t\t\t}\n\t\t}());\n\t\tType.time = {};\n\t\tType.time.is = function(t){ return t? t instanceof Date : (+new Date().getTime()) }\n\n\t\tvar fn_is = Type.fn.is;\n\t\tvar list_is = Type.list.is;\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_has = obj.has, obj_map = obj.map;\n\t\tmodule.exports = Type;\n\t})(USE, './type');\n\n\t;USE(function(module){\n\t\t// On event emitter generic javascript utility.\n\t\tmodule.exports = function onto(tag, arg, as){\n\t\t\tif(!tag){ return {to: onto} }\n\t\t\tvar u, tag = (this.tag || (this.tag = {}))[tag] ||\n\t\t\t(this.tag[tag] = {tag: tag, to: onto._ = {\n\t\t\t\tnext: function(arg){ var tmp;\n\t\t\t\t\tif((tmp = this.to)){\n\t\t\t\t\t\ttmp.next(arg);\n\t\t\t\t}}\n\t\t\t}});\n\t\t\tif('function' == typeof arg){\n\t\t\t\tvar be = {\n\t\t\t\t\toff: onto.off ||\n\t\t\t\t\t(onto.off = function(){\n\t\t\t\t\t\tif(this.next === onto._.next){ return !0 }\n\t\t\t\t\t\tif(this === this.the.last){\n\t\t\t\t\t\t\tthis.the.last = this.back;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.to.back = this.back;\n\t\t\t\t\t\tthis.next = onto._.next;\n\t\t\t\t\t\tthis.back.to = this.to;\n\t\t\t\t\t\tif(this.the.last === this.the){\n\t\t\t\t\t\t\tdelete this.on.tag[this.the.tag];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tto: onto._,\n\t\t\t\t\tnext: arg,\n\t\t\t\t\tthe: tag,\n\t\t\t\t\ton: this,\n\t\t\t\t\tas: as,\n\t\t\t\t};\n\t\t\t\t(be.back = tag.last || tag).to = be;\n\t\t\t\treturn tag.last = be;\n\t\t\t}\n\t\t\tif((tag = tag.to) && u !== arg){ tag.next(arg) }\n\t\t\treturn tag;\n\t\t};\n\t})(USE, './onto');\n\n\t;USE(function(module){\n\t\tvar to = (typeof setImmediate !== \"undefined\")? setImmediate : setTimeout, puff = function(cb){\n\t\t\tif(Q.length){ Q.push(cb); return } Q = [cb];\n\t\t\tto(function go(S){ S = S || +new Date;\n\t\t\t\tvar i = 0, cb; while(i < 9 && (cb = Q[i++])){ cb() }\n\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'puff');\n\t\t\t\tif(cb && !(+new Date - S)){ return go(S) }\n\t\t\t\tif(!(Q = Q.slice(i)).length){ return }\n\t\t\t\tto(go, 0);\n\t\t\t}, 0);\n\t\t}, Q = [];\n\t\tmodule.exports = setTimeout.puff = puff;\n\t})(USE, './puff');\n\n\t;USE(function(module){\n\t\t/* Based on the Hypothetical Amnesia Machine thought experiment */\n\t\tfunction HAM(machineState, incomingState, currentState, incomingValue, currentValue){\n\t\t\tif(machineState < incomingState){\n\t\t\t\treturn {defer: true}; // the incoming value is outside the boundary of the machine's state, it must be reprocessed in another state.\n\t\t\t}\n\t\t\tif(incomingState < currentState){\n\t\t\t\treturn {historical: true}; // the incoming value is within the boundary of the machine's state, but not within the range.\n\n\t\t\t}\n\t\t\tif(currentState < incomingState){\n\t\t\t\treturn {converge: true, incoming: true}; // the incoming value is within both the boundary and the range of the machine's state.\n\n\t\t\t}\n\t\t\tif(incomingState === currentState){\n\t\t\t\tincomingValue = Lexical(incomingValue) || \"\";\n\t\t\t\tcurrentValue = Lexical(currentValue) || \"\";\n\t\t\t\tif(incomingValue === currentValue){ // Note: while these are practically the same, the deltas could be technically different\n\t\t\t\t\treturn {state: true};\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t\tThe following is a naive implementation, but will always work.\n\t\t\t\t\tNever change it unless you have specific needs that absolutely require it.\n\t\t\t\t\tIf changed, your data will diverge unless you guarantee every peer's algorithm has also been changed to be the same.\n\t\t\t\t\tAs a result, it is highly discouraged to modify despite the fact that it is naive,\n\t\t\t\t\tbecause convergence (data integrity) is generally more important.\n\t\t\t\t\tAny difference in this algorithm must be given a new and different name.\n\t\t\t\t*/\n\t\t\t\tif(incomingValue < currentValue){ // Lexical only works on simple value types!\n\t\t\t\t\treturn {converge: true, current: true};\n\t\t\t\t}\n\t\t\t\tif(currentValue < incomingValue){ // Lexical only works on simple value types!\n\t\t\t\t\treturn {converge: true, incoming: true};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {err: \"Invalid CRDT Data: \"+ incomingValue +\" to \"+ currentValue +\" at \"+ incomingState +\" to \"+ currentState +\"!\"};\n\t\t}\n\t\tif(typeof JSON === 'undefined'){\n\t\t\tthrow new Error(\n\t\t\t\t'JSON is not included in this browser. Please load it first: ' +\n\t\t\t\t'ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js'\n\t\t\t);\n\t\t}\n\t\tvar Lexical = JSON.stringify, undefined;\n\t\tmodule.exports = HAM;\n\t})(USE, './HAM');\n\n\t;USE(function(module){\n\t\tvar Type = USE('./type');\n\t\tvar Val = {};\n\t\tVal.is = function(v){ // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n\t\t\tif(v === u){ return false }\n\t\t\tif(v === null){ return true } // \"deletes\", nulling out keys.\n\t\t\tif(v === Infinity){ return false } // we want this to be, but JSON does not support it, sad face.\n\t\t\tif(text_is(v) // by \"text\" we mean strings.\n\t\t\t|| bi_is(v) // by \"binary\" we mean boolean.\n\t\t\t|| num_is(v)){ // by \"number\" we mean integers or decimals.\n\t\t\t\treturn true; // simple values are valid.\n\t\t\t}\n\t\t\treturn Val.link.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n\t\t}\n\t\tVal.link = Val.rel = {_: '#'};\n\t\t;(function(){\n\t\t\tVal.link.is = function(v){ // this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\n\t\t\t\tif(v && v[rel_] && !v._ && obj_is(v)){ // must be an object.\n\t\t\t\t\tvar o = {};\n\t\t\t\t\tobj_map(v, map, o);\n\t\t\t\t\tif(o.id){ // a valid id was found.\n\t\t\t\t\t\treturn o.id; // yay! Return it.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false; // the value was not a valid soul relation.\n\t\t\t}\n\t\t\tfunction map(s, k){ var o = this; // map over the object...\n\t\t\t\tif(o.id){ return o.id = false } // if ID is already defined AND we're still looping through the object, it is considered invalid.\n\t\t\t\tif(k == rel_ && text_is(s)){ // the key should be '#' and have a text value.\n\t\t\t\t\to.id = s; // we found the soul!\n\t\t\t\t} else {\n\t\t\t\t\treturn o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\n\t\t\t\t}\n\t\t\t}\n\t\t}());\n\t\tVal.link.ify = function(t){ return obj_put({}, rel_, t) } // convert a soul into a relation and return it.\n\t\tType.obj.has._ = '.';\n\t\tvar rel_ = Val.link._, u;\n\t\tvar bi_is = Type.bi.is;\n\t\tvar num_is = Type.num.is;\n\t\tvar text_is = Type.text.is;\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\n\t\tmodule.exports = Val;\n\t})(USE, './val');\n\n\t;USE(function(module){\n\t\tvar Type = USE('./type');\n\t\tvar Val = USE('./val');\n\t\tvar Node = {_: '_'};\n\t\tNode.soul = function(n, o){ return (n && n._ && n._[o || soul_]) } // convenience function to check to see if there is a soul on a node and return it.\n\t\tNode.soul.ify = function(n, o){ // put a soul on an object.\n\t\t\to = (typeof o === 'string')? {soul: o} : o || {};\n\t\t\tn = n || {}; // make sure it exists.\n\t\t\tn._ = n._ || {}; // make sure meta exists.\n\t\t\tn._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\n\t\t\treturn n;\n\t\t}\n\t\tNode.soul._ = Val.link._;\n\t\t;(function(){\n\t\t\tNode.is = function(n, cb, as){ var s; // checks to see if an object is a valid node.\n\t\t\t\tif(!obj_is(n)){ return false } // must be an object.\n\t\t\t\tif(s = Node.soul(n)){ // must have a soul on it.\n\t\t\t\t\treturn !obj_map(n, map, {as:as,cb:cb,s:s,n:n});\n\t\t\t\t}\n\t\t\t\treturn false; // nope! This was not a valid node.\n\t\t\t}\n\t\t\tfunction map(v, k){ // we invert this because the way we check for this is via a negation.\n\t\t\t\tif(k === Node._){ return } // skip over the metadata.\n\t\t\t\tif(!Val.is(v)){ return true } // it is true that this is an invalid node.\n\t\t\t\tif(this.cb){ this.cb.call(this.as, v, k, this.n, this.s) } // optionally callback each key/value.\n\t\t\t}\n\t\t}());\n\t\t;(function(){\n\t\t\tNode.ify = function(obj, o, as){ // returns a node from a shallow object.\n\t\t\t\tif(!o){ o = {} }\n\t\t\t\telse if(typeof o === 'string'){ o = {soul: o} }\n\t\t\t\telse if('function' == typeof o){ o = {map: o} }\n\t\t\t\tif(o.map){ o.node = o.map.call(as, obj, u, o.node || {}) }\n\t\t\t\tif(o.node = Node.soul.ify(o.node || {}, o)){\n\t\t\t\t\tobj_map(obj, map, {o:o,as:as});\n\t\t\t\t}\n\t\t\t\treturn o.node; // This will only be a valid node if the object wasn't already deep!\n\t\t\t}\n\t\t\tfunction map(v, k){ var o = this.o, tmp, u; // iterate over each key/value.\n\t\t\t\tif(o.map){\n\t\t\t\t\ttmp = o.map.call(this.as, v, ''+k, o.node);\n\t\t\t\t\tif(u === tmp){\n\t\t\t\t\t\tobj_del(o.node, k);\n\t\t\t\t\t} else\n\t\t\t\t\tif(o.node){ o.node[k] = tmp }\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(Val.is(v)){\n\t\t\t\t\to.node[k] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}());\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_map = obj.map;\n\t\tvar text = Type.text, text_random = text.random;\n\t\tvar soul_ = Node.soul._;\n\t\tvar u;\n\t\tmodule.exports = Node;\n\t})(USE, './node');\n\n\t;USE(function(module){\n\t\tvar Type = USE('./type');\n\t\tvar Node = USE('./node');\n\t\tfunction State(){\n\t\t\tvar t;\n\t\t\t/*if(perf){\n\t\t\t\tt = start + perf.now(); // Danger: Accuracy decays significantly over time, even if precise.\n\t\t\t} else {*/\n\t\t\t\tt = +new Date;\n\t\t\t//}\n\t\t\tif(last < t){\n\t\t\t\treturn N = 0, last = t + State.drift;\n\t\t\t}\n\t\t\treturn last = t + ((N += 1) / D) + State.drift;\n\t\t}\n\t\tvar time = Type.time.is, last = -Infinity, N = 0, D = 1000; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\n\t\tvar perf = (typeof performance !== 'undefined')? (performance.timing && performance) : false, start = (perf && perf.timing && perf.timing.navigationStart) || (perf = false);\n\t\tvar S_ = State._ = '>';\n\t\tState.drift = 0;\n\t\tState.is = function(n, k, o){ // convenience function to get the state on a key on a node and return it.\n\t\t\tvar tmp = (k && n && n[N_] && n[N_][S_]) || o;\n\t\t\tif(!tmp){ return }\n\t\t\treturn num_is(tmp = tmp[k])? tmp : -Infinity;\n\t\t}\n\t\tState.lex = function(){ return State().toString(36).replace('.','') }\n\t\tState.ify = function(n, k, s, v, soul){ // put a key's state on a node.\n\t\t\tif(!n || !n[N_]){ // reject if it is not node-like.\n\t\t\t\tif(!soul){ // unless they passed a soul\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tn = Node.soul.ify(n, soul); // then make it so!\n\t\t\t}\n\t\t\tvar tmp = obj_as(n[N_], S_); // grab the states data.\n\t\t\tif(u !== k && k !== N_){\n\t\t\t\tif(num_is(s)){\n\t\t\t\t\ttmp[k] = s; // add the valid state.\n\t\t\t\t}\n\t\t\t\tif(u !== v){ // Note: Not its job to check for valid values!\n\t\t\t\t\tn[k] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\t\tState.to = function(from, k, to){\n\t\t\tvar val = (from||{})[k];\n\t\t\tif(obj_is(val)){\n\t\t\t\tval = obj_copy(val);\n\t\t\t}\n\t\t\treturn State.ify(to, k, State.is(from, k), val, Node.soul(from));\n\t\t}\n\t\t;(function(){\n\t\t\tState.map = function(cb, s, as){ var u; // for use with Node.ify\n\t\t\t\tvar o = obj_is(o = cb || s)? o : null;\n\t\t\t\tcb = fn_is(cb = cb || s)? cb : null;\n\t\t\t\tif(o && !cb){\n\t\t\t\t\ts = num_is(s)? s : State();\n\t\t\t\t\to[N_] = o[N_] || {};\n\t\t\t\t\tobj_map(o, map, {o:o,s:s});\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t\tas = as || obj_is(s)? s : u;\n\t\t\t\ts = num_is(s)? s : State();\n\t\t\t\treturn function(v, k, o, opt){\n\t\t\t\t\tif(!cb){\n\t\t\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(as || this || {}, v, k, o, opt);\n\t\t\t\t\tif(obj_has(o,k) && u === o[k]){ return }\n\t\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction map(v,k){\n\t\t\t\tif(N_ === k){ return }\n\t\t\t\tState.ify(this.o, k, this.s) ;\n\t\t\t}\n\t\t}());\n\t\tvar obj = Type.obj, obj_as = obj.as, obj_has = obj.has, obj_is = obj.is, obj_map = obj.map, obj_copy = obj.copy;\n\t\tvar num = Type.num, num_is = num.is;\n\t\tvar fn = Type.fn, fn_is = fn.is;\n\t\tvar N_ = Node._, u;\n\t\tmodule.exports = State;\n\t})(USE, './state');\n\n\t;USE(function(module){\n\t\tvar Type = USE('./type');\n\t\tvar Val = USE('./val');\n\t\tvar Node = USE('./node');\n\t\tvar Graph = {};\n\t\t;(function(){\n\t\t\tGraph.is = function(g, cb, fn, as){ // checks to see if an object is a valid graph.\n\t\t\t\tif(!g || !obj_is(g) || obj_empty(g)){ return false } // must be an object.\n\t\t\t\treturn !obj_map(g, map, {cb:cb,fn:fn,as:as}); // makes sure it wasn't an empty object.\n\t\t\t}\n\t\t\tfunction map(n, s){ // we invert this because the way'? we check for this is via a negation.\n\t\t\t\tif(!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)){ return true } // it is true that this is an invalid graph.\n\t\t\t\tif(!this.cb){ return }\n\t\t\t\tnf.n = n; nf.as = this.as; // sequential race conditions aren't races.\n\t\t\t\tthis.cb.call(nf.as, n, s, nf);\n\t\t\t}\n\t\t\tfunction nf(fn){ // optional callback for each node.\n\t\t\t\tif(fn){ Node.is(nf.n, fn, nf.as) } // where we then have an optional callback for each key/value.\n\t\t\t}\n\t\t}());\n\t\t;(function(){\n\t\t\tGraph.ify = function(obj, env, as){\n\t\t\t\tvar at = {path: [], obj: obj};\n\t\t\t\tif(!env){\n\t\t\t\t\tenv = {};\n\t\t\t\t} else\n\t\t\t\tif(typeof env === 'string'){\n\t\t\t\t\tenv = {soul: env};\n\t\t\t\t} else\n\t\t\t\tif('function' == typeof env){\n\t\t\t\t\tenv.map = env;\n\t\t\t\t}\n\t\t\t\tif(typeof as === 'string'){\n\t\t\t\t\tenv.soul = env.soul || as;\n\t\t\t\t\tas = u;\n\t\t\t\t}\n\t\t\t\tif(env.soul){\n\t\t\t\t\tat.link = Val.link.ify(env.soul);\n\t\t\t\t}\n\t\t\t\tenv.shell = (as||{}).shell;\n\t\t\t\tenv.graph = env.graph || {};\n\t\t\t\tenv.seen = env.seen || [];\n\t\t\t\tenv.as = env.as || as;\n\t\t\t\tnode(env, at);\n\t\t\t\tenv.root = at.node;\n\t\t\t\treturn env.graph;\n\t\t\t}\n\t\t\tfunction node(env, at){ var tmp;\n\t\t\t\tif(tmp = seen(env, at)){ return tmp }\n\t\t\t\tat.env = env;\n\t\t\t\tat.soul = soul;\n\t\t\t\tif(Node.ify(at.obj, map, at)){\n\t\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t\t\tif(at.obj !== env.shell){\n\t\t\t\t\t\tenv.graph[Val.link.is(at.link)] = at.node;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn at;\n\t\t\t}\n\t\t\tfunction map(v,k,n){\n\t\t\t\tvar at = this, env = at.env, is, tmp;\n\t\t\t\tif(Node._ === k && obj_has(v,Val.link._)){\n\t\t\t\t\treturn n._; // TODO: Bug?\n\t\t\t\t}\n\t\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\t\tif(!k){\n\t\t\t\t\tat.node = at.node || n || {};\n\t\t\t\t\tif(obj_has(v, Node._) && Node.soul(v)){ // ? for safety ?\n\t\t\t\t\t\tat.node._ = obj_copy(v._);\n\t\t\t\t\t}\n\t\t\t\t\tat.node = Node.soul.ify(at.node, Val.link.is(at.link));\n\t\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t\t}\n\t\t\t\tif(tmp = env.map){\n\t\t\t\t\ttmp.call(env.as || {}, v,k,n, at);\n\t\t\t\t\tif(obj_has(n,k)){\n\t\t\t\t\t\tv = n[k];\n\t\t\t\t\t\tif(u === v){\n\t\t\t\t\t\t\tobj_del(n, k);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!k){ return at.node }\n\t\t\t\tif(true === is){\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\ttmp = node(env, {obj: v, path: at.path.concat(k)});\n\t\t\t\tif(!tmp.node){ return }\n\t\t\t\treturn tmp.link; //{'#': Node.soul(tmp.node)};\n\t\t\t}\n\t\t\tfunction soul(id){ var at = this;\n\t\t\t\tvar prev = Val.link.is(at.link), graph = at.env.graph;\n\t\t\t\tat.link = at.link || Val.link.ify(id);\n\t\t\t\tat.link[Val.link._] = id;\n\t\t\t\tif(at.node && at.node[Node._]){\n\t\t\t\t\tat.node[Node._][Val.link._] = id;\n\t\t\t\t}\n\t\t\t\tif(obj_has(graph, prev)){\n\t\t\t\t\tgraph[id] = graph[prev];\n\t\t\t\t\tobj_del(graph, prev);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction valid(v,k,n, at,env){ var tmp;\n\t\t\t\tif(Val.is(v)){ return true }\n\t\t\t\tif(obj_is(v)){ return 1 }\n\t\t\t\tif(tmp = env.invalid){\n\t\t\t\t\tv = tmp.call(env.as || {}, v,k,n);\n\t\t\t\t\treturn valid(v,k,n, at,env);\n\t\t\t\t}\n\t\t\t\tenv.err = \"Invalid value at '\" + at.path.concat(k).join('.') + \"'!\";\n\t\t\t\tif(Type.list.is(v)){ env.err += \" Use `.set(item)` instead of an Array.\" }\n\t\t\t}\n\t\t\tfunction seen(env, at){\n\t\t\t\tvar arr = env.seen, i = arr.length, has;\n\t\t\t\twhile(i--){ has = arr[i];\n\t\t\t\t\tif(at.obj === has.obj){ return has }\n\t\t\t\t}\n\t\t\t\tarr.push(at);\n\t\t\t}\n\t\t}());\n\t\tGraph.node = function(node){\n\t\t\tvar soul = Node.soul(node);\n\t\t\tif(!soul){ return }\n\t\t\treturn obj_put({}, soul, node);\n\t\t}\n\t\t;(function(){\n\t\t\tGraph.to = function(graph, root, opt){\n\t\t\t\tif(!graph){ return }\n\t\t\t\tvar obj = {};\n\t\t\t\topt = opt || {seen: {}};\n\t\t\t\tobj_map(graph[root], map, {obj:obj, graph: graph, opt: opt});\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tfunction map(v,k){ var tmp, obj;\n\t\t\t\tif(Node._ === k){\n\t\t\t\t\tif(obj_empty(v, Val.link._)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.obj[k] = obj_copy(v);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(!(tmp = Val.link.is(v))){\n\t\t\t\t\tthis.obj[k] = v;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(obj = this.opt.seen[tmp]){\n\t\t\t\t\tthis.obj[k] = obj;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.obj[k] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\n\t\t\t}\n\t\t}());\n\t\tvar fn_is = Type.fn.is;\n\t\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_has = obj.has, obj_empty = obj.empty, obj_put = obj.put, obj_map = obj.map, obj_copy = obj.copy;\n\t\tvar u;\n\t\tmodule.exports = Graph;\n\t})(USE, './graph');\n\n\t;USE(function(module){\n\t\t// request / response module, for asking and acking messages.\n\t\tUSE('./onto'); // depends upon onto!\n\t\tmodule.exports = function ask(cb, as){\n\t\t\tif(!this.on){ return }\n\t\t\tif(!('function' == typeof cb)){\n\t\t\t\tif(!cb || !as){ return }\n\t\t\t\tvar id = cb['#'] || cb, tmp = (this.tag||'')[id];\n\t\t\t\tif(!tmp){ return }\n\t\t\t\ttmp = this.on(id, as);\n\t\t\t\tclearTimeout(tmp.err);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar id = (as && as['#']) || Math.random().toString(36).slice(2);\n\t\t\tif(!cb){ return id }\n\t\t\tvar to = this.on(id, cb, as);\n\t\t\tto.err = to.err || setTimeout(function(){\n\t\t\t\tto.next({err: \"Error: No ACK yet.\", lack: true});\n\t\t\t\tto.off();\n\t\t\t}, (this.opt||{}).lack || 9000);\n\t\t\treturn id;\n\t\t}\n\t})(USE, './ask');\n\n\t;USE(function(module){\n\t\tvar Type = USE('./type');\n\t\tfunction Dup(opt){\n\t\t\tvar dup = {s:{}}, s = dup.s;\n\t\t\topt = opt || {max: 1000, age: /*1000 * 9};//*/ 1000 * 9 * 3};\n\t\t\tdup.check = function(id){\n\t\t\t\tif(!s[id]){ return false }\n\t\t\t\treturn dt(id);\n\t\t\t}\n\t\t\tvar dt = dup.track = function(id){\n\t\t\t\tvar it = s[id] || (s[id] = {});\n\t\t\t\tit.was = +new Date;\n\t\t\t\tif(!dup.to){ dup.to = setTimeout(dup.drop, opt.age + 9) }\n\t\t\t\treturn it;\n\t\t\t}\n\t\t\tdup.drop = function(age){\n\t\t\t\tvar now = +new Date;\n\t\t\t\tType.obj.map(s, function(it, id){\n\t\t\t\t\tif(it && (age || opt.age) > (now - it.was)){ return }\n\t\t\t\t\tdelete s[id];\n\t\t\t\t});\n\t\t\t\tdup.to = null;\n\t\t\t\tconsole.STAT && (age = +new Date - now) > 9 && console.STAT(now, age, 'dup drop');\n\t\t\t}\n\t\t\treturn dup;\n\t\t}\n\t\tmodule.exports = Dup;\n\t})(USE, './dup');\n\n\t;USE(function(module){\n\n\t\tfunction Gun(o){\n\t\t\tif(o instanceof Gun){ return (this._ = {$: this}).$ }\n\t\t\tif(!(this instanceof Gun)){ return new Gun(o) }\n\t\t\treturn Gun.create(this._ = {$: this, opt: o});\n\t\t}\n\n\t\tGun.is = function($){ return ($ instanceof Gun) || ($ && $._ && ($ === $._.$)) || false }\n\n\t\tGun.version = 0.2020;\n\n\t\tGun.chain = Gun.prototype;\n\t\tGun.chain.toJSON = function(){};\n\n\t\tvar Type = USE('./type');\n\t\tType.obj.to(Type, Gun);\n\t\tGun.HAM = USE('./HAM');\n\t\tGun.val = USE('./val');\n\t\tGun.node = USE('./node');\n\t\tGun.state = USE('./state');\n\t\tGun.graph = USE('./graph');\n\t\tGun.on = USE('./onto');\n\t\tGun.ask = USE('./ask');\n\t\tGun.dup = USE('./dup');\n\t\tGun.puff = USE('./puff');\n\n\t\t;(function(){\n\t\t\tGun.create = function(at){\n\t\t\t\tat.root = at.root || at;\n\t\t\t\tat.graph = at.graph || {};\n\t\t\t\tat.on = at.on || Gun.on;\n\t\t\t\tat.ask = at.ask || Gun.ask;\n\t\t\t\tat.dup = at.dup || Gun.dup();\n\t\t\t\tvar gun = at.$.opt(at.opt);\n\t\t\t\tif(!at.once){\n\t\t\t\t\tat.on('in', universe, at);\n\t\t\t\t\tat.on('out', universe, at);\n\t\t\t\t\tat.on('put', map, at);\n\t\t\t\t\tGun.on('create', at);\n\t\t\t\t\tat.on('create', at);\n\t\t\t\t}\n\t\t\t\tat.once = 1;\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tfunction universe(msg){\n\t\t\t\tif(!msg){ return }\n\t\t\t\tif(msg.out === universe){ this.to.next(msg); return }\n\t\t\t\tvar eve = this, as = eve.as, at = as.at || as, gun = at.$, dup = at.dup, tmp, DBG = msg.DBG;\n\t\t\t\t(tmp = msg['#']) || (tmp = msg['#'] = text_rand(9));\n\t\t\t\tif(dup.check(tmp)){ return } dup.track(tmp);\n\t\t\t\ttmp = msg._; msg._ = ('function' == typeof tmp)? tmp : function(){};\n\t\t\t\t(msg.$ && (msg.$ === (msg.$._||'').$)) || (msg.$ = gun);\n\t\t\t\tif(!at.ask(msg['@'], msg)){ // is this machine listening for an ack?\n\t\t\t\t\tDBG && (DBG.u = +new Date);\n\t\t\t\t\tif(msg.get){ Gun.on._get(msg, gun) }\n\t\t\t\t\tif(msg.put){ put(msg); return }\n\t\t\t\t}\n\t\t\t\tDBG && (DBG.uc = +new Date);\n\t\t\t\teve.to.next(msg);\n\t\t\t\tDBG && (DBG.ua = +new Date);\n\t\t\t\tmsg.out = universe; at.on('out', msg);\n\t\t\t\tDBG && (DBG.ue = +new Date);\n\t\t\t}\n\t\t\tfunction put(msg){\n\t\t\t\tif(!msg){ return }\n\t\t\t\tvar ctx = msg._||'', root = ctx.root = ((ctx.$ = msg.$||'')._||'').root;\n\t\t\t\tvar put = msg.put, id = msg['#'], err, tmp;\n\t\t\t\tvar DBG = ctx.DBG = msg.DBG;\n\t\t\t\tif(put['#'] && put['.']){ root.on('put', msg); return } // TODO: BUG! This needs to call HAM instead.\n\t\t\t\t/*root.on(id, function(m){\n\t\t\t\t\tconsole.log('ack:', m);\n\t\t\t\t});*/\n\t\t\t\tctx.out = msg;\n\t\t\t\tctx.lot = {s: 0, more: 1};\n\t\t\t\tvar S = +new Date;\n\t\t\t\tDBG && (DBG.p = S);\n\t\t\t\tfor(var soul in put){ // Gun.obj.native() makes this safe.\n\t\t\t\t\tvar node = put[soul], states;\n\t\t\t\t\tif(!node){ err = ERR+cut(soul)+\"no node.\"; break }\n\t\t\t\t\tif(!(tmp = node._)){ err = ERR+cut(soul)+\"no meta.\"; break }\n\t\t\t\t\tif(soul !== tmp[_soul]){ err = ERR+cut(soul)+\"soul not same.\"; break }\n\t\t\t\t\tif(!(states = tmp[state_])){ err = ERR+cut(soul)+\"no state.\"; break }\n\t\t\t\t\tfor(var key in node){ // double loop uncool, but have to support old format.\n\t\t\t\t\t\tif(node_ === key){ continue }\n\t\t\t\t\t\tvar val = node[key], state = states[key];\n\t\t\t\t\t\tif(u === state){ err = ERR+cut(key)+\"on\"+cut(soul)+\"no state.\"; break }\n\t\t\t\t\t\tif(!val_is(val)){ err = ERR+cut(key)+\"on\"+cut(soul)+\"bad \"+(typeof val)+cut(val); break }\n\t\t\t\t\t\tham(val, key, soul, state, msg);\n\t\t\t\t\t}\n\t\t\t\t\tif(err){ break }\n\t\t\t\t}\n\t\t\t\tDBG && (DBG.pe = +new Date);\n\t\t\t\tif(console.STAT){ console.STAT(S, +new Date - S, 'mix');console.STAT(S, ctx.lot.s, 'mix #') }\n\t\t\t\tif(ctx.err = err){ root.on('in', {'@': id, err: Gun.log(err)}); return }\n\t\t\t\tif(!(--ctx.lot.more)){ fire(ctx) } // if synchronous.\n\t\t\t\tif(!ctx.stun && !msg['@']){ root.on('in', {'@': id, ok: -1}) } // in case no diff sent to storage, etc., still ack.\n\t\t\t} Gun.on.put = put;\n\t\t\tfunction ham(val, key, soul, state, msg){\n\t\t\t\tvar ctx = msg._||'', root = ctx.root, graph = root.graph, lot;\n\t\t\t\tvar vertex = graph[soul] || empty, was = state_is(vertex, key, 1), known = vertex[key];\n\t\t\t\tvar machine = State(), is = HAM(machine, state, was, val, known), u;\n\t\t\t\tif(!is.incoming){\n\t\t\t\t\tif(is.defer){\n\t\t\t\t\t\tvar to = state - machine;\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tham(val, key, soul, state, msg);\n\t\t\t\t\t\t}, to > MD? MD : to); // setTimeout Max Defer 32bit :(\n\t\t\t\t\t\tif(!ctx.to){ root.on('in', {'@': msg['#'], err: to}) } ctx.to = 1; // TODO: This causes too many problems unless sending peers auto-retry.\n\t\t\t\t\t\treturn to;\n\t\t\t\t\t}\n\t\t\t\t\t//return; // it should be this\n\t\t\t\t\tif(!ctx.miss){ return } // but some chains have a cache miss that need to re-fire. // TODO: Improve in future.\n\t\t\t\t}\n\t\t\t\t(lot = ctx.lot||'').s++; lot.more++;\n\t\t\t\t(ctx.stun || (ctx.stun = {}))[soul+key] = 1;\n\t\t\t\tvar DBG = ctx.DBG; DBG && (DBG.ph = DBG.ph || +new Date);\n\t\t\t\troot.on('put', {'#': msg['#'], '@': msg['@'], put: {'#': soul, '.': key, ':': val, '>': state}, _: ctx});\n\t\t\t}\n\t\t\tfunction map(msg){\n\t\t\t\tvar DBG; if(DBG = (msg._||'').DBG){ DBG.pa = +new Date; DBG.pm = DBG.pm || +new Date}\n      \tvar eve = this, root = eve.as, graph = root.graph, ctx = msg._, put = msg.put, soul = put['#'], key = put['.'], val = put[':'], state = put['>'], id = msg['#'], tmp;\n\t\t\t\tgraph[soul] = state_ify(graph[soul], key, state, val, soul); // TODO: Only put in graph if subscribed? Relays vs Browsers?\n\t\t\t\tchain(ctx, soul, key, (u !== (tmp = put['=']))? tmp : val, state); // TODO: This should NOT be how the API works, this should be done at an extension layer, but hacky solution to migrate with old code for now.\n\t\t\t\tif((tmp = ctx.out) && (tmp = tmp.put)){\n\t\t\t\t\ttmp[soul] = state_ify(tmp[soul], key, state, val, soul); // TODO: Hacky, fix & come back later, for actual pushing messages.\n\t\t\t\t}\n\t\t\t\tif(!(--ctx.lot.more)){ fire(ctx) } // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n\t\t\t\teve.to.next(msg);\n\t\t\t}\n\t\t\tfunction chain(ctx, soul, key,val, state){\n\t\t\t\tvar root = ctx.root, put, tmp;\n\t\t\t\t(root.opt||'').super && root.$.get(soul); // I think we need super for now, but since we are rewriting, should consider getting rid of it.\n\t\t\t\tif(!root || !(tmp = root.next) || !(tmp = tmp[soul]) || !tmp.$){ return }\n\t\t\t\t(put = ctx.put || (ctx.put = {}))[soul] = state_ify(put[soul], key, state, val, soul);\n\t\t\t\ttmp.put = state_ify(tmp.put, key, state, val, soul);\n\t\t\t}\n\t\t\tfunction fire(ctx){\n\t\t\t\tif(ctx.err){ return }\n\t\t\t\tvar stop = {};\n\t\t\t\tvar root = ((ctx.$||'')._||'').root, next = (root||'').next||'', put = ctx.put, tmp;\n\t\t\t\tvar S = +new Date;\n\t\t\t\t//Gun.graph.is(put, function(node, soul){\n\t\t\t\tfor(var soul in put){ var node = put[soul]; // Gun.obj.native() makes this safe.\n\t\t\t\t\tif(!(tmp = next[soul]) || !tmp.$){ continue }\n\t\t\t\t\troot.stop = stop; // temporary fix till a better solution?\n\t\t\t\t\ttmp.on('in', {$: tmp.$, get: soul, put: node});\n\t\t\t\t\troot.stop = null; // temporary fix till a better solution?\n\t\t\t\t}\n\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'fire');\n\t\t\t\tctx.DBG && (ctx.DBG.f = +new Date);\n\t\t\t\tif(!(tmp = ctx.out)){ return }\n\t\t\t\ttmp.out = universe;\n\t\t\t\troot.on('out', tmp);\n\t\t\t}\n\t\t\tvar ERR = \"Error: Invalid graph!\";\n\t\t\tvar cut = function(s){ return \" '\"+(''+s).slice(0,9)+\"...' \" }\n\t\t\tvar HAM = Gun.HAM, MD = 2147483647, State = Gun.state;\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.on._put = function(msg, gun){\n\t\t\t\tvar at = gun._, ctx = {$: gun, graph: at.graph, put: {}, map: {}, souls: {}, machine: Gun.state(), ack: msg['@'], cat: at, stop: {}};\n\t\t\t\tif(!Gun.obj.map(msg.put, perf, ctx)){ return } // HNPERF: performance test, not core code, do not port.\n\t\t\t\tif(!Gun.graph.is(msg.put, null, verify, ctx)){ ctx.err = \"Error: Invalid graph!\" }\n\t\t\t\tif(ctx.err){ return at.on('in', {'@': msg['#'], err: Gun.log(ctx.err) }) }\n\t\t\t\tobj_map(ctx.put, merge, ctx);\n\t\t\t\tif(!ctx.async){ obj_map(ctx.map, map, ctx) }\n\t\t\t\tif(u !== ctx.defer){\n\t\t\t\t\tvar to = ctx.defer - ctx.machine;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tGun.on._put(msg, gun);\n\t\t\t\t\t}, to > MD? MD : to ); // setTimeout Max Defer 32bit :(\n\t\t\t\t}\n\t\t\t\tif(!ctx.diff){ return }\n\t\t\t\tat.on('put', obj_to(msg, {put: ctx.diff}));\n\t\t\t};\n\t\t\tfunction verify(val, key, node, soul){ var ctx = this;\n\t\t\t\tvar state = Gun.state.is(node, key), tmp;\n\t\t\t\tif(!state){ return ctx.err = \"Error: No state on '\"+key+\"' in node '\"+soul+\"'!\" }\n\t\t\t\tvar vertex = ctx.graph[soul] || empty, was = Gun.state.is(vertex, key, true), known = vertex[key];\n\t\t\t\tvar HAM = Gun.HAM(ctx.machine, state, was, val, known);\n\t\t\t\tif(!HAM.incoming){\n\t\t\t\t\tif(HAM.defer){ // pick the lowest\n\t\t\t\t\t\tctx.defer = (state < (ctx.defer || Infinity))? state : ctx.defer;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.put[soul] = Gun.state.to(node, key, ctx.put[soul]);\n\t\t\t\t(ctx.diff || (ctx.diff = {}))[soul] = Gun.state.to(node, key, ctx.diff[soul]);\n\t\t\t\tctx.souls[soul] = true;\n\t\t\t}\n\t\t\tfunction merge(node, soul){\n\t\t\t\tvar ctx = this, cat = ctx.$._, at = (cat.next || empty)[soul];\n\t\t\t\tif(!at){\n\t\t\t\t\tif(!(cat.opt||empty).super){\n\t\t\t\t\t\tctx.souls[soul] = false;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tat = (ctx.$.get(soul)._);\n\t\t\t\t}\n\t\t\t\tvar msg = ctx.map[soul] = {\n\t\t\t\t\tput: node,\n\t\t\t\t\tget: soul,\n\t\t\t\t\t$: at.$\n\t\t\t\t}, as = {ctx: ctx, msg: msg};\n\t\t\t\tctx.async = !!cat.tag.node;\n\t\t\t\tif(ctx.ack){ msg['@'] = ctx.ack }\n\t\t\t\tobj_map(node, each, as);\n\t\t\t\tif(!ctx.async){ return }\n\t\t\t\tif(!ctx.and){\n\t\t\t\t\t// If it is async, we only need to setup one listener per context (ctx)\n\t\t\t\t\tcat.on('node', function(m){\n\t\t\t\t\t\tthis.to.next(m); // make sure to call other context's listeners.\n\t\t\t\t\t\tif(m !== ctx.map[m.get]){ return } // filter out events not from this context!\n\t\t\t\t\t\tctx.souls[m.get] = false; // set our many-async flag\n\t\t\t\t\t\tobj_map(m.put, patch, m); // merge into view\n\t\t\t\t\t\tif(obj_map(ctx.souls, function(v){ if(v){ return v } })){ return } // if flag still outstanding, keep waiting.\n\t\t\t\t\t\tif(ctx.c){ return } ctx.c = 1; // failsafe for only being called once per context.\n\t\t\t\t\t\tthis.off();\n\t\t\t\t\t\tobj_map(ctx.map, map, ctx); // all done, trigger chains.\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tctx.and = true;\n\t\t\t\tcat.on('node', msg); // each node on the current context's graph needs to be emitted though.\n\t\t\t}\n\t\t\tfunction each(val, key){\n\t\t\t\tvar ctx = this.ctx, graph = ctx.graph, msg = this.msg, soul = msg.get, node = msg.put, at = (msg.$._), tmp;\n\t\t\t\tgraph[soul] = Gun.state.to(node, key, graph[soul]);\n\t\t\t\tif(ctx.async){ return }\n\t\t\t\tat.put = Gun.state.to(node, key, at.put);\n\t\t\t}\n\t\t\tfunction patch(val, key){\n\t\t\t\tvar msg = this, node = msg.put, at = (msg.$._);\n\t\t\t\tat.put = Gun.state.to(node, key, at.put);\n\t\t\t}\n\t\t\tfunction map(msg, soul){\n\t\t\t\tif(!msg.$){ return }\n\t\t\t\tthis.cat.stop = this.stop; // temporary fix till a better solution?\n\t\t\t\t(msg.$._).on('in', msg);\n\t\t\t\tthis.cat.stop = null; // temporary fix till a better solution?\n\t\t\t}\n\t\t\tfunction perf(node, soul){ if(node !== this.graph[soul]){ return true } } // HNPERF: do not port!\n\n\t\t\tGun.on._get = function(msg, gun){\n\t\t\t\tvar root = gun._, get = msg.get, soul = get[_soul], node = root.graph[soul], has = get[_has], tmp;\n\t\t\t\tvar next = root.next || (root.next = {}), at = next[soul];\n\t\t\t\t// queue concurrent GETs?\n\t\t\t\tvar ctx = msg._||'', DBG = ctx.DBG = msg.DBG;\n\t\t\t\tDBG && (DBG.g = +new Date);\n\t\t\t\tif(!node){ return root.on('get', msg) }\n\t\t\t\tif(has){\n\t\t\t\t\tif('string' != typeof has || !obj_has(node, has)){ return root.on('get', msg) }\n\t\t\t\t\tnode = Gun.state.to(node, has);\n\t\t\t\t\t// If we have a key in-memory, do we really need to fetch?\n\t\t\t\t\t// Maybe... in case the in-memory key we have is a local write\n\t\t\t\t\t// we still need to trigger a pull/merge from peers.\n\t\t\t\t} else {\n\t\t\t\t\tnode = Gun.window? Gun.obj.copy(node) : node; // HNPERF: If !browser bump Performance? Is this too dangerous to reference root graph? Copy / shallow copy too expensive for big nodes. Gun.obj.to(node); // 1 layer deep copy // Gun.obj.copy(node); // too slow on big nodes\n\t\t\t\t}\n\t\t\t\tnode = Gun.graph.node(node);\n\t\t\t\ttmp = (at||empty).ack;\n\t\t\t\tvar faith = function(){}; faith.ram = faith.faith = true; // HNPERF: We're testing performance improvement by skipping going through security again, but this should be audited.\n\t\t\t\tfaith.$ = msg.$;\n\t\t\t\tDBG && (DBG.ga = +new Date);\n\t\t\t\troot.on('in', {\n\t\t\t\t\t'@': msg['#'],\n\t\t\t\t\tput: node,\n\t\t\t\t\tram: 1,\n\t\t\t\t\t$: gun,\n\t\t\t\t\t_: faith\n\t\t\t\t});\n\t\t\t\tDBG && (DBG.gm = +new Date);\n\t\t\t\t//if(0 < tmp){ return }\n\t\t\t\troot.on('get', msg);\n\t\t\t\tDBG && (DBG.gd = +new Date);\n\t\t\t}\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.chain.opt = function(opt){\n\t\t\t\topt = opt || {};\n\t\t\t\tvar gun = this, at = gun._, tmp = opt.peers || opt;\n\t\t\t\tif(!obj_is(opt)){ opt = {} }\n\t\t\t\tif(!obj_is(at.opt)){ at.opt = opt }\n\t\t\t\tif(text_is(tmp)){ tmp = [tmp] }\n\t\t\t\tif(list_is(tmp)){\n\t\t\t\t\ttmp = obj_map(tmp, function(url, i, map){\n\t\t\t\t\t\ti = {}; i.id = i.url = url; map(url, i);\n\t\t\t\t\t});\n\t\t\t\t\tif(!obj_is(at.opt.peers)){ at.opt.peers = {}}\n\t\t\t\t\tat.opt.peers = obj_to(tmp, at.opt.peers);\n\t\t\t\t}\n\t\t\t\tat.opt.peers = at.opt.peers || {};\n\t\t\t\tobj_map(opt, function each(v,k){\n\t\t\t\t\tif(!obj_has(this, k) || text.is(v) || obj.empty(v)){ this[k] = v ; return }\n\t\t\t\t\tif(v && v.constructor !== Object && !list_is(v)){ return }\n\t\t\t\t\tobj_map(v, each, this[k]);\n\t\t\t\t}, at.opt);\n\t\t\t\tGun.on('opt', at);\n\t\t\t\t//at.opt.uuid = at.opt.uuid || function(){ return state_lex() + text_rand(12) }\n\t\t\t\tGun.obj.native();\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t}());\n\t\tGun.obj.native = function(){ var p = Object.prototype; for(var i in p){ console.log(\"Native Object.prototype polluted, reverting\", i); delete p[i]; } };\n\n\t\tvar list_is = Gun.list.is;\n\t\tvar text = Gun.text, text_is = text.is, text_rand = text.random;\n\t\tvar obj = Gun.obj, obj_empty = obj.empty, obj_is = obj.is, obj_has = obj.has, obj_to = obj.to, obj_map = obj.map, obj_copy = obj.copy;\n\t\tvar state_lex = Gun.state.lex, state_ify = Gun.state.ify, state_is = Gun.state.is, _soul = Gun.val.link._, _has = '.', node_ = Gun.node._, val_is = Gun.val.is, rel_is = Gun.val.link.is, state_ = Gun.state._;\n\t\tvar empty = {}, u;\n\t\tvar C;\n\n\t\tGun.log = function(){ return (!Gun.log.off && C.log.apply(C, arguments)), [].slice.call(arguments).join(' ') };\n\t\tGun.log.once = function(w,s,o){ return (o = Gun.log.once)[w] = o[w] || 0, o[w]++ || Gun.log(s) };\n\n\t\tif(typeof window !== \"undefined\"){ (window.GUN = window.Gun = Gun).window = window }\n\t\ttry{ if(typeof MODULE !== \"undefined\"){ MODULE.exports = Gun } }catch(e){}\n\t\tmodule.exports = Gun;\n\n\t\t(Gun.window||'').console = (Gun.window||'').console || {log: function(){}};\n\t\t(C = console).only = function(i, s){ return (C.only.i && i === C.only.i && C.only.i++) && (C.log.apply(C, arguments) || s) };\n\n\t\t;\"Please do not remove welcome log unless you are paying for a monthly sponsorship, thanks!\";\n\t\tGun.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, please ask for help on http://chat.gun.eco if anything takes you longer than 5min to figure out!\");\n\t})(USE, './root');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.back = function(n, opt){ var tmp;\n\t\t\tn = n || 1;\n\t\t\tif(-1 === n || Infinity === n){\n\t\t\t\treturn this._.root.$;\n\t\t\t} else\n\t\t\tif(1 === n){\n\t\t\t\treturn (this._.back || this._).$;\n\t\t\t}\n\t\t\tvar gun = this, at = gun._;\n\t\t\tif(typeof n === 'string'){\n\t\t\t\tn = n.split('.');\n\t\t\t}\n\t\t\tif(n instanceof Array){\n\t\t\t\tvar i = 0, l = n.length, tmp = at;\n\t\t\t\tfor(i; i < l; i++){\n\t\t\t\t\ttmp = (tmp||empty)[n[i]];\n\t\t\t\t}\n\t\t\t\tif(u !== tmp){\n\t\t\t\t\treturn opt? gun : tmp;\n\t\t\t\t} else\n\t\t\t\tif((tmp = at.back)){\n\t\t\t\t\treturn tmp.$.back(n, opt);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif('function' == typeof n){\n\t\t\t\tvar yes, tmp = {back: at};\n\t\t\t\twhile((tmp = tmp.back)\n\t\t\t\t&& u === (yes = n(tmp, opt))){}\n\t\t\t\treturn yes;\n\t\t\t}\n\t\t\tif(Gun.num.is(n)){\n\t\t\t\treturn (at.back || at).$.back(n - 1);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tvar empty = {}, u;\n\t})(USE, './back');\n\n\t;USE(function(module){\n\t\t// WARNING: GUN is very simple, but the JavaScript chaining API around GUN\n\t\t// is complicated and was extremely hard to build. If you port GUN to another\n\t\t// language, consider implementing an easier API to build.\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.chain = function(sub){\n\t\t\tvar gun = this, at = gun._, chain = new (sub || gun).constructor(gun), cat = chain._, root;\n\t\t\tcat.root = root = at.root;\n\t\t\tcat.id = ++root.once;\n\t\t\tcat.back = gun._;\n\t\t\tcat.on = Gun.on;\n\t\t\tcat.on('in', input, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\n\t\t\tcat.on('out', output, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\n\t\t\treturn chain;\n\t\t}\n\n\t\tfunction output(msg){\n\t\t\tvar put, get, at = this.as, back = at.back, root = at.root, tmp;\n\t\t\tif(!msg.$){ msg.$ = at.$ }\n\t\t\tthis.to.next(msg);\n\t\t\tif(get = msg.get){\n\t\t\t\t/*if(u !== at.put){\n\t\t\t\t\tat.on('in', at);\n\t\t\t\t\treturn;\n\t\t\t\t}*/\n\t\t\t\tif(at.lex){ msg.get = obj_to(at.lex, msg.get) }\n\t\t\t\tif(get['#'] || at.soul){\n\t\t\t\t\tget['#'] = get['#'] || at.soul;\n\t\t\t\t\tmsg['#'] || (msg['#'] = text_rand(9));\n\t\t\t\t\tback = (root.$.get(get['#'])._);\n\t\t\t\t\tif(!(get = get['.'])){\n\t\t\t\t\t\ttmp = back.ack;\n\t\t\t\t\t\tif(!tmp){ back.ack = -1 }\n\t\t\t\t\t\tif(obj_has(back, 'put')){\n\t\t\t\t\t\t\tback.on('in', back);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp && u !== back.put){ return } //if(tmp){ return }\n\t\t\t\t\t\tmsg.$ = back.$;\n\t\t\t\t\t} else\n\t\t\t\t\tif(obj_has(back.put, get)){ // TODO: support #LEX !\n\t\t\t\t\t\tput = (back.$.get(get)._);\n\t\t\t\t\t\tif(!(tmp = put.ack)){ put.ack = -1 }\n\t\t\t\t\t\tback.on('in', {\n\t\t\t\t\t\t\t$: back.$,\n\t\t\t\t\t\t\tput: Gun.state.to(back.put, get),\n\t\t\t\t\t\t\tget: back.get\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t} else\n\t\t\t\t\tif('string' != typeof get){\n\t\t\t\t\t\tvar put = {}, meta = (back.put||{})._;\n\t\t\t\t\t\tGun.obj.map(back.put, function(v,k){\n\t\t\t\t\t\t\tif(!Gun.text.match(k, get)){ return }\n\t\t\t\t\t\t\tput[k] = v;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(!Gun.obj.empty(put)){\n\t\t\t\t\t\t\tput._ = meta;\n\t\t\t\t\t\t\tback.on('in', {$: back.$, put: put, get: back.get})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp = at.lex){\n\t\t\t\t\t\t\ttmp = (tmp._) || (tmp._ = function(){});\n\t\t\t\t\t\t\tif(back.ack < tmp.ask){ tmp.ask = back.ack }\n\t\t\t\t\t\t\tif(tmp.ask){ return }\n\t\t\t\t\t\t\ttmp.ask = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\troot.ask(ack, msg);\n\t\t\t\t\treturn root.on('in', msg);\n\t\t\t\t}\n\t\t\t\tif(root.now){ root.now[at.id] = root.now[at.id] || true; at.pass = {} }\n\t\t\t\tif(get['.']){\n\t\t\t\t\tif(at.get){\n\t\t\t\t\t\tmsg = {get: {'.': at.get}, $: at.$};\n\t\t\t\t\t\t//if(back.ask || (back.ask = {})[at.get]){ return }\n\t\t\t\t\t\t(back.ask || (back.ask = {}));\n\t\t\t\t\t\tback.ask[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t\t}\n\t\t\t\t\tmsg = {get: {}, $: at.$};\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t\tat.ack = at.ack || -1;\n\t\t\t\tif(at.get){\n\t\t\t\t\tmsg.$ = at.$;\n\t\t\t\t\tget['.'] = at.get;\n\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn back.on('out', msg);\n\t\t}\n\n\t\tfunction input(msg){\n\t\t\tvar eve = this, cat = eve.as, root = cat.root, gun = msg.$, at = (gun||empty)._ || empty, change = msg.put, rel, tmp;\n\t\t\tif(cat.get && msg.get !== cat.get){\n\t\t\t\tmsg = obj_to(msg, {get: cat.get});\n\t\t\t}\n\t\t\tif(cat.has && at !== cat){\n\t\t\t\tmsg = obj_to(msg, {$: cat.$});\n\t\t\t\tif(at.ack){\n\t\t\t\t\tcat.ack = at.ack;\n\t\t\t\t\t//cat.ack = cat.ack || at.ack;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(u === change){\n\t\t\t\ttmp = at.put;\n\t\t\t\teve.to.next(msg);\n\t\t\t\tif(cat.soul){ return } // TODO: BUG, I believee the fresh input refactor caught an edge case that a `gun.get('soul').get('key')` that points to a soul that doesn't exist will not trigger val/get etc.\n\t\t\t\tif(u === tmp && u !== at.put){ return }\n\t\t\t\techo(cat, msg, eve);\n\t\t\t\tif(cat.has){\n\t\t\t\t\tnot(cat, msg);\n\t\t\t\t}\n\t\t\t\tobj_del(at.echo, cat.id);\n\t\t\t\tobj_del(cat.map, at.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(cat.soul){\n\t\t\t\teve.to.next(msg);\n\t\t\t\techo(cat, msg, eve);\n\t\t\t\tif(cat.next){ obj_map(change, map, {msg: msg, cat: cat}) }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!(rel = Gun.val.link.is(change))){\n\t\t\t\tif(Gun.val.is(change)){\n\t\t\t\t\tif(cat.has || cat.soul){\n\t\t\t\t\t\tnot(cat, msg);\n\t\t\t\t\t} else\n\t\t\t\t\tif(at.has || at.soul){\n\t\t\t\t\t\t(at.echo || (at.echo = {}))[cat.id] = at.echo[at.id] || cat;\n\t\t\t\t\t\t(cat.map || (cat.map = {}))[at.id] = cat.map[at.id] || {at: at};\n\t\t\t\t\t\t//if(u === at.put){ return } // Not necessary but improves performance. If we have it but at does not, that means we got things out of order and at will get it. Once at gets it, it will tell us again.\n\t\t\t\t\t}\n\t\t\t\t\teve.to.next(msg);\n\t\t\t\t\techo(cat, msg, eve);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(cat.has && at !== cat && obj_has(at, 'put')){\n\t\t\t\t\tcat.put = at.put;\n\t\t\t\t};\n\t\t\t\tif((rel = Gun.node.soul(change)) && at.has){\n\t\t\t\t\tat.put = (cat.root.$.get(rel)._).put;\n\t\t\t\t}\n\t\t\t\ttmp = (root.stop || {})[at.id];\n\t\t\t\t//if(tmp && tmp[cat.id]){ } else {\n\t\t\t\t\teve.to.next(msg);\n\t\t\t\t//}\n\t\t\t\trelate(cat, msg, at, rel);\n\t\t\t\techo(cat, msg, eve);\n\t\t\t\tif(cat.next){ obj_map(change, map, {msg: msg, cat: cat}) }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar was = root.stop;\n\t\t\ttmp = root.stop || {};\n\t\t\ttmp = tmp[at.id] || (tmp[at.id] = {});\n\t\t\t//if(tmp[cat.id]){ return }\n\t\t\ttmp.is = tmp.is || at.put;\n\t\t\ttmp[cat.id] = at.put || true;\n\t\t\t//if(root.stop){\n\t\t\t\teve.to.next(msg)\n\t\t\t//}\n\t\t\trelate(cat, msg, at, rel);\n\t\t\techo(cat, msg, eve);\n\t\t}\n\n\t\tfunction relate(at, msg, from, rel){\n\t\t\tif(!rel || node_ === at.get){ return }\n\t\t\tvar tmp = (at.root.$.get(rel)._);\n\t\t\tif(at.has){\n\t\t\t\tfrom = tmp;\n\t\t\t} else\n\t\t\tif(from.has){\n\t\t\t\trelate(from, msg, from, rel);\n\t\t\t}\n\t\t\tif(from === at){ return }\n\t\t\tif(!from.$){ from = {} }\n\t\t\t(from.echo || (from.echo = {}))[at.id] = from.echo[at.id] || at;\n\t\t\tif(at.has && !(at.map||empty)[from.id]){ // if we haven't seen this before.\n\t\t\t\tnot(at, msg);\n\t\t\t}\n\t\t\ttmp = from.id? ((at.map || (at.map = {}))[from.id] = at.map[from.id] || {at: from}) : {};\n\t\t\tif(rel === tmp.link){\n\t\t\t\tif(!(tmp.pass || at.pass)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(at.pass){\n\t\t\t\tGun.obj.map(at.map, function(tmp){ tmp.pass = true })\n\t\t\t\tobj_del(at, 'pass');\n\t\t\t}\n\t\t\tif(tmp.pass){ obj_del(tmp, 'pass') }\n\t\t\tif(at.has){ at.link = rel }\n\t\t\task(at, tmp.link = rel);\n\t\t}\n\t\tfunction echo(at, msg, ev){\n\t\t\tif(!at.echo){ return } // || node_ === at.get ?\n\t\t\t//if(at.has){ msg = obj_to(msg, {event: ev}) }\n\t\t\tobj_map(at.echo, reverb, msg);\n\t\t}\n\t\tfunction reverb(to){\n\t\t\tif(!to || !to.on){ return }\n\t\t\tto.on('in', this);\n\t\t}\n\t\tfunction map(data, key){ // Map over only the changes on every update.\n\t\t\tvar cat = this.cat, next = cat.next || empty, via = this.msg, chain, at, tmp;\n\t\t\tif(node_ === key && !next[key]){ return }\n\t\t\tif(!(at = next[key])){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//if(data && data[_soul] && (tmp = Gun.val.link.is(data)) && (tmp = (cat.root.$.get(tmp)._)) && obj_has(tmp, 'put')){\n\t\t\t//\tdata = tmp.put;\n\t\t\t//}\n\t\t\tif(at.has){\n\t\t\t\t//if(!(data && data[_soul] && Gun.val.link.is(data) === Gun.node.soul(at.put))){\n\t\t\t\tif(u === at.put || !Gun.val.link.is(data)){\n\t\t\t\t\tat.put = data;\n\t\t\t\t}\n\t\t\t\tchain = at.$;\n\t\t\t} else\n\t\t\tif(tmp = via.$){\n\t\t\t\ttmp = (chain = via.$.get(key))._;\n\t\t\t\tif(u === tmp.put || !Gun.val.link.is(data)){\n\t\t\t\t\ttmp.put = data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tat.on('in', {\n\t\t\t\tput: data,\n\t\t\t\tget: key,\n\t\t\t\t$: chain,\n\t\t\t\tvia: via\n\t\t\t});\n\t\t}\n\t\tfunction not(at, msg){\n\t\t\tif(!(at.has || at.soul)){ return }\n\t\t\tvar tmp = at.map, root = at.root;\n\t\t\tat.map = null;\n\t\t\tif(at.has){\n\t\t\t\tif(at.dub && at.root.stop){ at.dub = null }\n\t\t\t\tat.link = null;\n\t\t\t}\n\t\t\t//if(!root.now || !root.now[at.id]){\n\t\t\tif(!at.pass){\n\t\t\t\tif((!msg['@']) && null === tmp){ return }\n\t\t\t\t//obj_del(at, 'pass');\n\t\t\t}\n\t\t\tif(u === tmp && Gun.val.link.is(at.put)){ return } // This prevents the very first call of a thing from triggering a \"clean up\" call. // TODO: link.is(at.put) || !val.is(at.put) ?\n\t\t\tobj_map(tmp, function(proxy){\n\t\t\t\tif(!(proxy = proxy.at)){ return }\n\t\t\t\tobj_del(proxy.echo, at.id);\n\t\t\t});\n\t\t\ttmp = at.put;\n\t\t\tobj_map(at.next, function(neat, key){\n\t\t\t\tif(u === tmp && u !== at.put){ return true }\n\t\t\t\tneat.put = u;\n\t\t\t\tif(neat.ack){\n\t\t\t\t\tneat.ack = -1; // Shouldn't this be reset to 0? If we do that, SEA test `set user ref should be found` fails, odd.\n\t\t\t\t}\n\t\t\t\tneat.on('in', {\n\t\t\t\t\tget: key,\n\t\t\t\t\t$: neat.$,\n\t\t\t\t\tput: u\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tfunction ask(at, soul){\n\t\t\tvar tmp = (at.root.$.get(soul)._), lex = at.lex;\n\t\t\tif(at.ack || lex){\n\t\t\t\t(lex = lex||{})['#'] = soul;\n\t\t\t\ttmp.on('out', {get: lex});\n\t\t\t\tif(!at.ask){ return } // TODO: PERFORMANCE? More elegant way?\n\t\t\t}\n\t\t\ttmp = at.ask; Gun.obj.del(at, 'ask');\n\t\t\tobj_map(tmp || at.next, function(neat, key){\n\t\t\t\tvar lex = neat.lex || {}; lex['#'] = soul; lex['.'] = lex['.'] || key;\n\t\t\t\tneat.on('out', {get: lex});\n\t\t\t});\n\t\t\tGun.obj.del(at, 'ask'); // TODO: PERFORMANCE? More elegant way?\n\t\t}\n\t\tfunction ack(msg, ev){\n\t\t\tvar as = this.as, get = as.get||'', at = as.$._, tmp = (msg.put||'')[get['#']];\n\t\t\tif(at.ack){ at.ack = (at.ack + 1) || 1; }\n\t\t\tif(!msg.put || ('string' == typeof get['.'] && !obj_has(tmp, at.get))){\n\t\t\t\tif(at.put !== u){ return }\n\t\t\t\tat.on('in', {\n\t\t\t\t\tget: at.get,\n\t\t\t\t\tput: at.put = u,\n\t\t\t\t\t$: at.$,\n\t\t\t\t\t'@': msg['@']\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(node_ == get['.']){ // is this a security concern?\n\t\t\t\tat.on('in', {get: at.get, put: Gun.val.link.ify(get['#']), $: at.$, '@': msg['@']});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(at.$ === (msg._||'').$){ // replying to self, for perf, skip ham/security tho needs audit.\n\t\t\t\t(msg._).miss = (at.put === u);\n\t\t\t}\n\t\t\tGun.on.put(msg);\n\t\t}\n\t\tvar empty = {}, u;\n\t\tvar obj = Gun.obj, obj_has = obj.has, obj_put = obj.put, obj_del = obj.del, obj_to = obj.to, obj_map = obj.map;\n\t\tvar text_rand = Gun.text.random;\n\t\tvar _soul = Gun.val.link._, node_ = Gun.node._;\n\t})(USE, './chain');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.get = function(key, cb, as){\n\t\t\tvar gun, tmp;\n\t\t\tif(typeof key === 'string'){\n\t\t\t        if(key.length == 0) {\n\t\t\t              (as = this.chain())._.err = {err: Gun.log('Invalid zero length string key!', key)};\n\t\t\t              return null\n\t\t\t        }\n\t\t\t\tvar back = this, cat = back._;\n\t\t\t\tvar next = cat.next || empty;\n\t\t\t\tif(!(gun = next[key])){\n\t\t\t\t\tgun = cache(key, back);\n\t\t\t\t}\n\t\t\t\tgun = gun.$;\n\t\t\t} else\n\t\t\tif('function' == typeof key){\n\t\t\t\tif(true === cb){ return soul(this, key, cb, as), this }\n\t\t\t\tgun = this;\n\t\t\t\tvar at = gun._, root = at.root, tmp = root.now, ev;\n\t\t\t\tas = cb || {};\n\t\t\t\tas.at = at;\n\t\t\t\tas.use = key;\n\t\t\t\tas.out = as.out || {};\n\t\t\t\tas.out.get = as.out.get || {};\n\t\t\t\t(ev = at.on('in', use, as)).rid = rid;\n\t\t\t\t(root.now = {$:1})[as.now = at.id] = ev;\n\t\t\t\tvar mum = root.mum; root.mum = {};\n\t\t\t\tat.on('out', as.out);\n\t\t\t\troot.mum = mum;\n\t\t\t\troot.now = tmp;\n\t\t\t\treturn gun;\n\t\t\t} else\n\t\t\tif(num_is(key)){\n\t\t\t\treturn this.get(''+key, cb, as);\n\t\t\t} else\n\t\t\tif(tmp = rel.is(key)){\n\t\t\t\treturn this.get(tmp, cb, as);\n\t\t\t} else\n\t\t\tif(obj.is(key)){\n\t\t\t\tgun = this;\n\t\t\t\tif(tmp = ((tmp = key['#'])||empty)['='] || tmp){ gun = gun.get(tmp) }\n\t\t\t\tgun._.lex = key;\n\t\t\t\treturn gun;\n\t\t\t} else {\n\t\t\t\t(as = this.chain())._.err = {err: Gun.log('Invalid get request!', key)}; // CLEAN UP\n\t\t\t\tif(cb){ cb.call(as, as._.err) }\n\t\t\t\treturn as;\n\t\t\t}\n\t\t\tif(tmp = this._.stun){ // TODO: Refactor?\n\t\t\t\tgun._.stun = gun._.stun || tmp;\n\t\t\t}\n\t\t\tif(cb && 'function' == typeof cb){\n\t\t\t\tgun.get(cb, as);\n\t\t\t}\n\t\t\treturn gun;\n\t\t}\n\t\tfunction cache(key, back){\n\t\t\tvar cat = back._, next = cat.next, gun = back.chain(), at = gun._;\n\t\t\tif(!next){ next = cat.next = {} }\n\t\t\tnext[at.get = key] = at;\n\t\t\tif(back === cat.root.$){\n\t\t\t\tat.soul = key;\n\t\t\t} else\n\t\t\tif(cat.soul || cat.has){\n\t\t\t\tat.has = key;\n\t\t\t\t//if(obj_has(cat.put, key)){\n\t\t\t\t\t//at.put = cat.put[key];\n\t\t\t\t//}\n\t\t\t}\n\t\t\treturn at;\n\t\t}\n\t\tfunction soul(gun, cb, opt, as){\n\t\t\tvar cat = gun._, acks = 0, tmp;\n\t\t\tif(tmp = cat.soul || cat.link || cat.dub){ return cb(tmp, as, cat) }\n\t\t\tif(cat.jam){ return cat.jam.push([cb, as]) }\n\t\t\tcat.jam = [[cb,as]];\n\t\t\tgun.get(function go(msg, eve){\n\t\t\t\tif(u === msg.put && !cat.root.opt.super && (tmp = Object.keys(cat.root.opt.peers).length) && ++acks <= tmp){ // TODO: super should not be in core code, bring AXE up into core instead to fix?\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teve.rid(msg);\n\t\t\t\tvar at = ((at = msg.$) && at._) || {}, i = 0, as;\n\t\t\t\ttmp = cat.jam; delete cat.jam; // tmp = cat.jam.splice(0, 100);\n\t\t\t\t//if(tmp.length){ process.nextTick(function(){ go(msg, eve) }) }\n\t\t\t\twhile(as = tmp[i++]){ //Gun.obj.map(tmp, function(as, cb){\n\t\t\t\t\tvar cb = as[0], id; as = as[1];\n\t\t\t\t\tcb && cb(id = at.link || at.soul || rel.is(msg.put) || node_soul(msg.put) || at.dub, as, msg, eve);\n\t\t\t\t} //);\n\t\t\t}, {out: {get: {'.':true}}});\n\t\t\treturn gun;\n\t\t}\n\t\tfunction use(msg){\n\t\t\tvar eve = this, as = eve.as, cat = as.at, root = cat.root, gun = msg.$, at = (gun||{})._ || {}, data = msg.put || at.put, tmp;\n\t\t\tif((tmp = root.now) && eve !== tmp[as.now]){ return eve.to.next(msg) }\n\t\t\t//if(at.async && msg.root){ return }\n\t\t\t//if(at.async === 1 && cat.async !== true){ return }\n\t\t\t//if(root.stop && root.stop[at.id]){ return } root.stop && (root.stop[at.id] = true);\n\t\t\t//if(!at.async && !cat.async && at.put && msg.put === at.put){ return }\n\t\t\t//else if(!cat.async && msg.put !== at.put && root.stop && root.stop[at.id]){ return } root.stop && (root.stop[at.id] = true);\n\n\n\t\t\t//root.stop && (root.stop.id = root.stop.id || Gun.text.random(2));\n\t\t\t//if((tmp = root.stop) && (tmp = tmp[at.id] || (tmp[at.id] = {})) && tmp[cat.id]){ return } tmp && (tmp[cat.id] = true);\n\t\t\tif(eve.seen && at.id && eve.seen[at.id]){ return eve.to.next(msg) }\n\t\t\t//if((tmp = root.stop)){ if(tmp[at.id]){ return } tmp[at.id] = msg.root; } // temporary fix till a better solution?\n\t\t\tif((tmp = data) && tmp[rel._] && (tmp = rel.is(tmp))){\n\t\t\t\ttmp = ((msg.$$ = at.root.$.get(tmp))._);\n\t\t\t\tif(u !== tmp.put){\n\t\t\t\t\tmsg = obj_to(msg, {put: data = tmp.put});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((tmp = root.mum) && at.id){ // TODO: can we delete mum entirely now?\n\t\t\t\tvar id = at.id + (eve.id || (eve.id = Gun.text.random(9)));\n\t\t\t\tif(tmp[id]){ return }\n\t\t\t\tif(u !== data && !rel.is(data)){ tmp[id] = true; }\n\t\t\t}\n\t\t\tas.use(msg, eve);\n\t\t\tif(eve.stun){\n\t\t\t\teve.stun = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\teve.to.next(msg);\n\t\t}\n\t\tfunction rid(at){\n\t\t\tvar cat = this.on;\n\t\t\tif(!at || cat.soul || cat.has){ return this.off() }\n\t\t\tif(!(at = (at = (at = at.$ || at)._ || at).id)){ return }\n\t\t\tvar map = cat.map, tmp, seen;\n\t\t\t//if(!map || !(tmp = map[at]) || !(tmp = tmp.at)){ return }\n\t\t\tif(tmp = (seen = this.seen || (this.seen = {}))[at]){ return true }\n\t\t\tseen[at] = true;\n\t\t\treturn;\n\t\t\t//tmp.echo[cat.id] = {}; // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\t//obj.del(map, at); // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\treturn;\n\t\t}\n\t\tvar obj = Gun.obj, obj_map = obj.map, obj_has = obj.has, obj_to = Gun.obj.to;\n\t\tvar num_is = Gun.num.is;\n\t\tvar rel = Gun.val.link, node_soul = Gun.node.soul, node_ = Gun.node._;\n\t\tvar empty = {}, u;\n\t})(USE, './get');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.put = function(data, cb, as){\n\t\t\tvar gun = this, at = (gun._), root = at.root.$, ctx = root._, M = 100, tmp;\n\t\t\tas = as || {};\n\t\t\tas.data = data;\n\t\t\tas.via = as.$ = as.via || as.$ || gun;\n\t\t\tif(typeof cb === 'string'){\n\t\t\t\tas.soul = cb;\n\t\t\t} else {\n\t\t\t\tas.ack = as.ack || cb;\n\t\t\t}\n\t\t\tif(at.soul){\n\t\t\t\tas.soul = at.soul;\n\t\t\t}\n\t\t\tif(as.soul || root === gun){\n\t\t\t\tif(!obj_is(as.data)){\n\t\t\t\t\t(as.ack||noop).call(as, as.out = {err: Gun.log(\"Data saved to the root level of the graph must be a node (an object), not a\", (typeof as.data), 'of \"' + as.data + '\"!')});\n\t\t\t\t\tif(as.res){ as.res() }\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tas.soul = as.soul || (as.not = Gun.node.soul(as.data) || (as.via.back('opt.uuid') || Gun.text.random)());\n\t\t\t\tas.via._.stun = {};\n\t\t\t\tif(!as.soul){ // polyfill async uuid for SEA\n\t\t\t\t\tas.via.back('opt.uuid')(function(err, soul){ // TODO: improve perf without anonymous callback\n\t\t\t\t\t\tif(err){ return Gun.log(err) } // TODO: Handle error!\n\t\t\t\t\t\t(as.ref||as.$).put(as.data, as.soul = soul, as);\n\t\t\t\t\t});\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tas.$ = root.get(as.soul);\n\t\t\t\tas.ref = as.$;\n\t\t\t\tify(as);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tas.via._.stun = {};\n\t\t\tif(Gun.is(data)){\n\t\t\t\tdata.get(function(soul, o, msg){\n\t\t\t\t\tif(!soul){\n\t\t\t\t\t\tdelete as.via._.stun;\n\t\t\t\t\t\treturn Gun.log(\"The reference you are saving is a\", typeof msg.put, '\"'+ msg.put +'\", not a node (object)!');\n\t\t\t\t\t}\n\t\t\t\t\tgun.put(Gun.val.link.ify(soul), cb, as);\n\t\t\t\t}, true);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif(at.has && (tmp = Gun.val.link.is(data))){ at.dub = tmp }\n\t\t\tas.ref = as.ref || (root._ === (tmp = at.back))? gun : tmp.$;\n\t\t\tif(as.ref._.soul && Gun.val.is(as.data) && at.get){\n\t\t\t\tas.data = obj_put({}, at.get, as.data);\n\t\t\t\tas.ref.put(as.data, as.soul, as);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tas.ref.get(any, true, {as: as});\n\t\t\tif(!as.out){\n\t\t\t\t// TODO: Perf idea! Make a global lock, that blocks everything while it is on, but if it is on the lock it does the expensive lookup to see if it is a dependent write or not and if not then it proceeds full speed. Meh? For write heavy async apps that would be terrible.\n\t\t\t\tas.res = as.res || stun; // Gun.on.stun(as.ref); // TODO: BUG! Deal with locking?\n\t\t\t\tas.$._.stun = as.ref._.stun;\n\t\t\t}\n\t\t\treturn gun;\n\t\t};\n\t\t/*Gun.chain.put = function(data, cb, as){ // don't rewrite! :(\n\t\t\tvar gun = this, at = gun._;\n\t\t\tas = as || {};\n\t\t\tas.soul || (as.soul = at.soul || ('string' == typeof cb && cb));\n\t\t\tif(!as.soul){ return get(data, cb, as) }\n\n\t\t\treturn gun;\n\t\t}*/\n\n\t\tfunction ify(as){\n\t\t\tas.batch = batch;\n\t\t\tvar opt = as.opt||{}, env = as.env = Gun.state.map(map, opt.state);\n\t\t\tenv.soul = as.soul;\n\t\t\tas.graph = Gun.graph.ify(as.data, env, as);\n\t\t\tif(env.err){\n\t\t\t\t(as.ack||noop).call(as, as.out = {err: Gun.log(env.err)});\n\t\t\t\tif(as.res){ as.res() }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tas.batch();\n\t\t}\n\n\t\tfunction stun(cb){\n\t\t\tif(cb){ cb() }\n\t\t\treturn;\n\t\t\tvar as = this;\n\t\t\tif(!as.ref){ return }\n\t\t\tif(cb){\n\t\t\t\tas.after = as.ref._.tag;\n\t\t\t\tas.now = as.ref._.tag = {};\n\t\t\t\tcb();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(as.after){\n\t\t\t\tas.ref._.tag = as.after;\n\t\t\t}\n\t\t}\n\n\t\tfunction batch(){ var as = this;\n\t\t\tif(!as.graph || !obj_empty(as.stun)){ return }\n\t\t\tas.res = as.res || function(cb){ if(cb){ cb() } };\n\t\t\tas.res(function(){\n\t\t\t\tdelete as.via._.stun;\n\t\t\t\tvar cat = (as.$.back(-1)._), ask = cat.ask(function(ack){\n\t\t\t\t\tcat.root.on('ack', ack);\n\t\t\t\t\tif(ack.err){ Gun.log(ack) }\n\t\t\t\t\tif(++acks > (as.acks || 0)){ this.off() } // Adjustable ACKs! Only 1 by default.\n\t\t\t\t\tif(!as.ack){ return }\n\t\t\t\t\tas.ack(ack, this);\n\t\t\t\t\t//--C;\n\t\t\t\t}, as.opt), acks = 0;\n\t\t\t\t//C++;\n\t\t\t\t// NOW is a hack to get synchronous replies to correctly call.\n\t\t\t\t// and STOP is a hack to get async behavior to correctly call.\n\t\t\t\t// neither of these are ideal, need to be fixed without hacks,\n\t\t\t\t// but for now, this works for current tests. :/\n\t\t\t\tvar tmp = cat.root.now; obj.del(cat.root, 'now');\n\t\t\t\tvar mum = cat.root.mum; cat.root.mum = {};\n\t\t\t\t(as.ref._).on('out', {\n\t\t\t\t\t$: as.ref, put: as.out = as.env.graph, opt: as.opt, '#': ask\n\t\t\t\t});\n\t\t\t\tcat.root.mum = mum? obj.to(mum, cat.root.mum) : mum;\n\t\t\t\tcat.root.now = tmp;\n\t\t\t\tas.via._.on('res', {}); delete as.via._.tag.res; // emitting causes mem leak?\n\t\t\t}, as);\n\t\t\tif(as.res){ as.res() }\n\t\t} function no(v,k){ if(v){ return true } }\n\n\t\tfunction map(v,k,n, at){ var as = this;\n\t\t\tvar is = Gun.is(v);\n\t\t\tif(k || !at.path.length){ return }\n\t\t\t(as.res||iife)(function(){\n\t\t\t\tvar path = at.path, ref = as.ref, opt = as.opt;\n\t\t\t\tvar i = 0, l = path.length;\n\t\t\t\tfor(i; i < l; i++){\n\t\t\t\t\tref = ref.get(path[i]);\n\t\t\t\t}\n\t\t\t\tif(is){ ref = v }\n\t\t\t\t//if(as.not){ (ref._).dub = Gun.text.random() } // This might optimize stuff? Maybe not needed anymore. Make sure it doesn't introduce bugs.\n\t\t\t\tvar id = (ref._).dub;\n\t\t\t\tif(id || (id = Gun.node.soul(at.obj))){\n\t\t\t\t\tref.back(-1).get(id);\n\t\t\t\t\tat.soul(id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t(as.stun = as.stun || {})[path] = 1;\n\t\t\t\tref.get(soul, true, {as: {at: at, as: as, p:path, ref: ref}});\n\t\t\t}, {as: as, at: at});\n\t\t\t//if(is){ return {} }\n\t\t}\n\t\tvar G = String.fromCharCode(31);\n\t\tfunction soul(id, as, msg, eve){\n\t\t\tvar as = as.as, path = as.p, ref = as.ref, cat = as.at, pat = [], sat; as = as.as;\n\t\t\tref.back(function(at){\n\t\t\t\tif(sat = at.soul || at.link || at.dub){ return sat }\n\t\t\t\tpat.push(at.has || at.get);\n\t\t\t});\n\t\t\tpat = [sat || as.soul].concat(pat.reverse());\n\t\t\tvar at = ((msg || {}).$ || {})._ || {};\n\t\t\tid = at.dub = at.dub || id || Gun.node.soul(cat.obj) || Gun.node.soul(msg.put || at.put) || Gun.val.link.is(msg.put || at.put) || pat.join('/') /* || (function(){\n\t\t\t\treturn (as.soul+'.')+Gun.text.hash(path.join(G)).toString(32);\n\t\t\t})(); // TODO: BUG!? Do we really want the soul of the object given to us? Could that be dangerous? What about copy operations? */\n\t\t\tif(eve){ eve.stun = true }\n\t\t\tif(!id){ // polyfill async uuid for SEA\n\t\t\t\tas.via.back('opt.uuid')(function(err, id){ // TODO: improve perf without anonymous callback\n\t\t\t\t\tif(err){ return Gun.log(err) } // TODO: Handle error.\n\t\t\t\t\tsolve(at, at.dub = at.dub || id, cat, as);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsolve(at, at.dub = id, cat, as);\n\t\t}\n\n\t\tfunction solve(at, id, cat, as){\n\t\t\tat.$.back(-1).get(id);\n\t\t\tcat.soul(id);\n\t\t\tdelete as.stun[cat.path];\n\t\t\tas.batch();\n\t\t}\n\n\t\tfunction any(soul, as, msg, eve){\n\t\t\tas = as.as;\n\t\t\tif(!msg.$ || !msg.$._){ return } // TODO: Handle\n\t\t\tif(msg.err){ // TODO: Handle\n\t\t\t\tGun.log(\"Please report this as an issue! Put.any.err\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar at = (msg.$._), data = at.put, opt = as.opt||{}, root, tmp;\n\t\t\tif((tmp = as.ref) && tmp._.now){ return }\n\t\t\tif(eve){ eve.stun = true }\n\t\t\tif(as.ref !== as.$){\n\t\t\t\ttmp = (as.$._).get || at.get;\n\t\t\t\tif(!tmp){ // TODO: Handle\n\t\t\t\t\tdelete as.via._.stun;\n\t\t\t\t\tGun.log(\"Please report this as an issue! Put.no.get\"); // TODO: BUG!??\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tas.data = obj_put({}, tmp, as.data);\n\t\t\t\ttmp = null;\n\t\t\t}\n\t\t\tif(u === data){\n\t\t\t\tif(!at.get){ delete as.via._.stun; return } // TODO: Handle\n\t\t\t\tif(!soul){\n\t\t\t\t\ttmp = at.$.back(function(at){\n\t\t\t\t\t\tif(at.link || at.soul){ return at.link || at.soul }\n\t\t\t\t\t\tas.data = obj_put({}, at.get, as.data);\n\t\t\t\t\t});\n\t\t\t\t\tas.not = true; // maybe consider this?\n\t\t\t\t}\n\t\t\t\ttmp = tmp || at.soul || at.link || at.dub;// || at.get;\n\t\t\t\tat = tmp? (at.root.$.get(tmp)._) : at;\n\t\t\t\tas.soul = tmp;\n\t\t\t\tdata = as.data;\n\t\t\t}\n\t\t\tif(!as.not && !(as.soul = as.soul || soul)){\n\t\t\t\tif(as.path && obj_is(as.data)){\n\t\t\t\t\tas.soul = (opt.uuid || as.via.back('opt.uuid') || Gun.text.random)();\n\t\t\t\t} else {\n\t\t\t\t\t//as.data = obj_put({}, as.$._.get, as.data);\n\t\t\t\t\tif(node_ == at.get){\n\t\t\t\t\t\tas.soul = (at.put||empty)['#'] || at.dub;\n\t\t\t\t\t}\n\t\t\t\t\tas.soul = as.soul || at.soul || at.link || (opt.uuid || as.via.back('opt.uuid') || Gun.text.random)();\n\t\t\t\t}\n\t\t\t\tif(!as.soul){ // polyfill async uuid for SEA\n\t\t\t\t\tas.via.back('opt.uuid')(function(err, soul){ // TODO: improve perf without anonymous callback\n\t\t\t\t\t\tif(err){ delete as.via._.stun; return Gun.log(err) } // Handle error.\n\t\t\t\t\t\tas.ref.put(as.data, as.soul = soul, as);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tas.ref.put(as.data, as.soul, as);\n\t\t}\n\t\tvar obj = Gun.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map, obj_empty = obj.empty;\n\t\tvar u, empty = {}, noop = function(){}, iife = function(fn,as){fn.call(as||empty)};\n\t\tvar node_ = Gun.node._;\n\t})(USE, './put');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tUSE('./chain');\n\t\tUSE('./back');\n\t\tUSE('./put');\n\t\tUSE('./get');\n\t\tmodule.exports = Gun;\n\t})(USE, './index');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.on = function(tag, arg, eas, as){\n\t\t\tvar gun = this, at = gun._, tmp, act, off;\n\t\t\tif(typeof tag === 'string'){\n\t\t\t\tif(!arg){ return at.on(tag) }\n\t\t\t\tact = at.on(tag, arg, eas || at, as);\n\t\t\t\tif(eas && eas.$){\n\t\t\t\t\t(eas.subs || (eas.subs = [])).push(act);\n\t\t\t\t}\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tvar opt = arg;\n\t\t\topt = (true === opt)? {change: true} : opt || {};\n\t\t\topt.at = at;\n\t\t\topt.ok = tag;\n\t\t\t//opt.last = {};\n\t\t\tgun.get(ok, opt); // TODO: PERF! Event listener leak!!!?\n\t\t\treturn gun;\n\t\t}\n\n\t\tfunction ok(msg, ev){ var opt = this;\n\t\t\tvar gun = msg.$, at = (gun||{})._ || {}, data = at.put || msg.put, cat = opt.at, tmp;\n\t\t\tif(u === data){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tmp = msg.$$){\n\t\t\t\ttmp = (msg.$$._);\n\t\t\t\tif(u === tmp.put){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdata = tmp.put;\n\t\t\t}\n\t\t\tif(opt.change){ // TODO: BUG? Move above the undef checks?\n\t\t\t\tdata = msg.put;\n\t\t\t}\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\n\t\t\t//if(tmp.put === data && tmp.get === id && !Gun.node.soul(data)){ return }\n\t\t\t//tmp.put = data;\n\t\t\t//tmp.get = id;\n\t\t\t// DEDUPLICATE // TODO: NEEDS WORK! BAD PROTOTYPE\n\t\t\t//at.last = data;\n\t\t\tif(opt.as){\n\t\t\t\topt.ok.call(opt.as, msg, ev);\n\t\t\t} else {\n\t\t\t\topt.ok.call(gun, data, msg.get, msg, ev);\n\t\t\t}\n\t\t}\n\n\t\tGun.chain.val = function(cb, opt){\n\t\t\tGun.log.once(\"onceval\", \"Future Breaking API Change: .val -> .once, apologies unexpected.\");\n\t\t\treturn this.once(cb, opt);\n\t\t}\n\t\tGun.chain.once = function(cb, opt){\n\t\t\tvar gun = this, at = gun._, data = at.put;\n\t\t\tif(0 < at.ack && u !== data){\n\t\t\t\t(cb || noop).call(gun, data, at.get);\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif(cb){\n\t\t\t\t(opt = opt || {}).ok = cb;\n\t\t\t\topt.at = at;\n\t\t\t\topt.out = {'#': Gun.text.random(9)};\n\t\t\t\tgun.get(val, {as: opt});\n\t\t\t\topt.async = true; //opt.async = at.stun? 1 : true;\n\t\t\t} else {\n\t\t\t\tGun.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\t\tvar chain = gun.chain();\n\t\t\t\tchain._.nix = gun.once(function(){\n\t\t\t\t\tchain._.on('in', gun._);\n\t\t\t\t});\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\treturn gun;\n\t\t}\n\n\t\tfunction val(msg, eve, to){\n\t\t\tif(!msg.$){ eve.off(); return }\n\t\t\tvar opt = this.as, cat = opt.at, gun = msg.$, at = gun._, data = at.put || msg.put, link, tmp;\n\t\t\tif(tmp = msg.$$){\n\t\t\t\tlink = tmp = (msg.$$._);\n\t\t\t\tif(u !== link.put){\n\t\t\t\t\tdata = link.put;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((tmp = eve.wait) && (tmp = tmp[at.id])){ clearTimeout(tmp) }\n\t\t\teve.ack = (eve.ack||0)+1;\n\t\t\t// TODO: super should not be in core code, bring AXE up into core instead to fix?\n\t\t\tif(!to && u === data && !at.root.opt.super && eve.ack <= (opt.acks || Object.keys(at.root.opt.peers).length)){ return }\n\t\t\tif((!to && (u === data || at.soul || at.link || (link && !(0 < link.ack))))\n\t\t\t|| (u === data && !at.root.opt.super && (tmp = Object.keys(at.root.opt.peers).length) && (!to && (link||at).ack < tmp))){\n\t\t\t\ttmp = (eve.wait = {})[at.id] = setTimeout(function(){\n\t\t\t\t\tval.call({as:opt}, msg, eve, tmp || 1);\n\t\t\t\t}, opt.wait || 99);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(link && u === link.put && (tmp = rel.is(data))){ data = Gun.node.ify({}, tmp) }\n\t\t\teve.rid? eve.rid(msg) : eve.off();\n\t\t\topt.ok.call(gun || opt.$, data, msg.get);\n\t\t}\n\n\t\tGun.chain.off = function(){\n\t\t\t// make off more aggressive. Warning, it might backfire!\n\t\t\tvar gun = this, at = gun._, tmp;\n\t\t\tvar cat = at.back;\n\t\t\tif(!cat){ return }\n\t\t\tat.ack = 0; // so can resubscribe.\n\t\t\tif(tmp = cat.next){\n\t\t\t\tif(tmp[at.get]){\n\t\t\t\t\tobj_del(tmp, at.get);\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp = cat.ask){\n\t\t\t\tobj_del(tmp, at.get);\n\t\t\t}\n\t\t\tif(tmp = cat.put){\n\t\t\t\tobj_del(tmp, at.get);\n\t\t\t}\n\t\t\tif(tmp = at.soul){\n\t\t\t\tobj_del(cat.root.graph, tmp);\n\t\t\t}\n\t\t\tif(tmp = at.map){\n\t\t\t\tobj_map(tmp, function(at){\n\t\t\t\t\tif(at.link){\n\t\t\t\t\t\tcat.root.$.get(at.link).off();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(tmp = at.next){\n\t\t\t\tobj_map(tmp, function(neat){\n\t\t\t\t\tneat.$.off();\n\t\t\t\t});\n\t\t\t}\n\t\t\tat.on('off', {});\n\t\t\treturn gun;\n\t\t}\n\t\tvar obj = Gun.obj, obj_map = obj.map, obj_has = obj.has, obj_del = obj.del, obj_to = obj.to;\n\t\tvar rel = Gun.val.link;\n\t\tvar empty = {}, noop = function(){}, u;\n\t})(USE, './on');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.map = function(cb, opt, t){\n\t\t\tvar gun = this, cat = gun._, chain;\n\t\t\tif(!cb){\n\t\t\t\tif(chain = cat.each){ return chain }\n\t\t\t\tcat.each = chain = gun.chain();\n\t\t\t\tchain._.nix = gun.back('nix');\n\t\t\t\tgun.on('in', map, chain._);\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\tGun.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\tchain = gun.chain();\n\t\t\tgun.map().on(function(data, key, at, ev){\n\t\t\t\tvar next = (cb||noop).call(this, data, key, at, ev);\n\t\t\t\tif(u === next){ return }\n\t\t\t\tif(data === next){ return chain._.on('in', at) }\n\t\t\t\tif(Gun.is(next)){ return chain._.on('in', next._) }\n\t\t\t\tchain._.on('in', {get: key, put: next});\n\t\t\t});\n\t\t\treturn chain;\n\t\t}\n\t\tfunction map(msg){\n\t\t\tif(!msg.put || Gun.val.is(msg.put)){ return this.to.next(msg) }\n\t\t\tif(this.as.nix){ this.off() } // TODO: Ugly hack!\n\t\t\tobj_map(msg.put, each, {at: this.as, msg: msg});\n\t\t\tthis.to.next(msg);\n\t\t}\n\t\tfunction each(v,k){\n\t\t\tif(n_ === k){ return }\n\t\t\tvar msg = this.msg, gun = msg.$, at = gun._, cat = this.at, tmp = at.lex;\n\t\t\tif(tmp && !Gun.text.match(k, tmp['.'] || tmp['#'] || tmp)){ return } // review?\n\t\t\t((tmp = gun.get(k)._).echo || (tmp.echo = {}))[cat.id] = tmp.echo[cat.id] || cat;\n\t\t}\n\t\tvar obj_map = Gun.obj.map, noop = function(){}, event = {stun: noop, off: noop}, n_ = Gun.node._, u;\n\t})(USE, './map');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.set = function(item, cb, opt){\n\t\t\tvar gun = this, soul;\n\t\t\tcb = cb || function(){};\n\t\t\topt = opt || {}; opt.item = opt.item || item;\n\t\t\tif(soul = Gun.node.soul(item)){ item = Gun.obj.put({}, soul, Gun.val.link.ify(soul)) }\n\t\t\tif(!Gun.is(item)){\n\t\t\t\tif(Gun.obj.is(item)){\n\t\t\t\t\t//item = gun.back(-1).get(soul = soul || Gun.node.soul(item) || (gun.back('opt.uuid') || uuid)()).put(item);\n\t\t\t\t\tsoul = soul || Gun.node.soul(item) || uuid(); // this just key now, not a soul.\n\t\t\t\t}\n\t\t\t\treturn gun.get(soul || uuid()).put(item, cb, opt);\n\t\t\t}\n\t\t\titem.get(function(soul, o, msg){\n\t\t\t\tif(!soul && item._.stun){ item._.on('res', function(){ this.off(); gun.set(item, cb, opt) }); return }\n\t\t\t\tif(!soul){ return cb.call(gun, {err: Gun.log('Only a node can be linked! Not \"' + msg.put + '\"!')}) }\n\t\t\t\tgun.put(Gun.obj.put({}, soul, Gun.val.link.ify(soul)), cb, opt);\n\t\t\t},true);\n\t\t\treturn item;\n\t\t}\n\t\tfunction uuid(){ return Gun.state.lex() + Gun.text.random(7) }\n\t})(USE, './set');\n\n\t;USE(function(module){\n\t\tif(typeof Gun === 'undefined'){ return } // TODO: localStorage is Browser only. But it would be nice if it could somehow plugin into NodeJS compatible localStorage APIs?\n\n\t\tvar root, noop = function(){}, store, u;\n\t\ttry{store = (Gun.window||noop).localStorage}catch(e){}\n\t\tif(!store){\n\t\t\tGun.log(\"Warning: No localStorage exists to persist data to!\");\n\t\t\tstore = {setItem: function(k,v){this[k]=v}, removeItem: function(k){delete this[k]}, getItem: function(k){return this[k]}};\n\t\t}\n\t\t/*\n\t\t\tNOTE: Both `lib/file.js` and `lib/memdisk.js` are based on this design!\n\t\t\tIf you update anything here, consider updating the other adapters as well.\n\t\t*/\n\n\t\tGun.on('create', function(root){\n\t\t\t// This code is used to queue offline writes for resync.\n\t\t\t// See the next 'opt' code below for actual saving of data.\n\t\t\tvar ev = this.to, opt = root.opt;\n\t\t\tif(root.once){ return ev.next(root) }\n\t\t\tif(false === opt.localStorage){ return ev.next(root) } // we want offline resynce queue regardless! // actually, this doesn't help, per @go1dfish 's observation. Disabling for now, will need better solution later.\n\t\t\topt.prefix = opt.file || 'gun/';\n\t\t\tvar gap = Gun.obj.ify(store.getItem('gap/'+opt.prefix)) || {};\n\t\t\tvar empty = Gun.obj.empty, id, to, go;\n\t\t\t// add re-sync command.\n\t\t\tif(!empty(gap)){\n\t\t\t\tvar disk = Gun.obj.ify(store.getItem(opt.prefix)) || {}, send = {};\n\t\t\t\tGun.obj.map(gap, function(node, soul){\n\t\t\t\t\tGun.obj.map(node, function(val, key){\n\t\t\t\t\t\tsend[soul] = Gun.state.to(disk[soul], key, send[soul]);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t// TODO: Holy Grail dangling by this thread! If gap / offline resync doesn't trigger, it doesn't work. Ouch, and this is a localStorage specific adapter. :(\n\t\t\t\t\troot.on('out', {put: send, '#': root.ask(ack)});\n\t\t\t\t},1);\n\t\t\t}\n\n\t\t\troot.on('out', function(msg){\n\t\t\t\tif(msg.lS){ return } // TODO: for IndexedDB and others, shouldn't send to peers ACKs to our own GETs. // THIS IS BLOCKING BROWSERS REPLYING TO REQUESTS, NO??? CHANGE THIS SOON!! UNDER CONTROLLED CIRCUMSTANCES!! Or maybe in-memory already doe sit?\n\t\t\t\tif(Gun.is(msg.$) && msg.put && !msg['@']){\n\t\t\t\t\tid = msg['#'];\n\t\t\t\t\tGun.graph.is(msg.put, null, map);\n\t\t\t\t\tif(!to){ to = setTimeout(flush, opt.wait || 1) }\n\t\t\t\t}\n\t\t\t\tthis.to.next(msg);\n\t\t\t});\n\t\t\troot.on('ack', ack);\n\n\t\t\tfunction ack(ack){ // TODO: This is experimental, not sure if we should keep this type of event hook.\n\t\t\t\tif(ack.err || !ack.ok){ return }\n\t\t\t\tvar id = ack['@'];\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tGun.obj.map(gap, function(node, soul){\n\t\t\t\t\t\tGun.obj.map(node, function(val, key){\n\t\t\t\t\t\t\tif(id !== val){ return }\n\t\t\t\t\t\t\tdelete node[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(empty(node)){\n\t\t\t\t\t\t\tdelete gap[soul];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tflush();\n\t\t\t\t}, opt.wait || 1);\n\t\t\t};\n\t\t\tev.next(root);\n\n\t\t\tvar map = function(val, key, node, soul){\n\t\t\t\t(gap[soul] || (gap[soul] = {}))[key] = id;\n\t\t\t}\n\t\t\tvar flush = function(){\n\t\t\t\tclearTimeout(to);\n\t\t\t\tto = false;\n\t\t\t\ttry{store.setItem('gap/'+opt.prefix, JSON.stringify(gap));\n\t\t\t\t}catch(e){ Gun.log(err = e || \"localStorage failure\") }\n\t\t\t}\n\t\t});\n\n\t\tGun.on('create', function(root){\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt;\n\t\t\tif(root.once){ return }\n\t\t\tif(false === opt.localStorage){ return }\n\t\t\topt.prefix = opt.file || 'gun/';\n\t\t\tvar graph = root.graph, acks = {}, count = 0, to;\n\t\t\tvar disk = Gun.obj.ify(store.getItem(opt.prefix)) || {};\n\t\t\tvar lS = function(){}, u;\n\t\t\troot.on('localStorage', disk); // NON-STANDARD EVENT!\n\n\t\t\troot.on('put', function(msg){\n\t\t\t\tthis.to.next(msg);\n\t\t\t\tvar put = msg.put, soul = put['#'], key = put['.'], val = put[':'], state = put['>'], tmp;\n\t\t\t\tdisk[soul] = Gun.state.ify(disk[soul], key, state, val, soul);\n\t\t\t\tif(!msg['@']){ (acks[msg['#']] = (tmp = (msg._||'').lot || {})).lS = (tmp.lS||0)+1; } // only ack non-acks.\n\t\t\t\tcount += 1;\n\t\t\t\tif(count >= (opt.batch || 1000)){\n\t\t\t\t\treturn flush();\n\t\t\t\t}\n\t\t\t\tif(to){ return }\n\t\t\t\tto = setTimeout(flush, opt.wait || 1);\n\t\t\t});\n\n\t\t\troot.on('get', function(msg){\n\t\t\t\tthis.to.next(msg);\n\t\t\t\tvar lex = msg.get, soul, data, u;\n\t\t\t\tfunction to(){\n\t\t\t\tif(!lex || !(soul = lex['#'])){ return }\n\t\t\t\t//if(0 >= msg.cap){ return }\n\t\t\t\tvar has = lex['.'];\n\t\t\t\tdata = disk[soul] || u;\n\t\t\t\tif(data && has){\n\t\t\t\t\tdata = Gun.state.to(data, has);\n\t\t\t\t}\n\t\t\t\t//if(!data && !Gun.obj.empty(opt.peers)){ return } // if data not found, don't ack if there are peers. // Hmm, what if we have peers but we are disconnected?\n\t\t\t\troot.on('in', {'@': msg['#'], put: Gun.graph.node(data), lS:1});// || root.$});\n\t\t\t\t};\n\t\t\t\tGun.debug? setTimeout(to,1) : to();\n\t\t\t});\n\n\t\t\tvar map = function(val, key, node, soul){\n\t\t\t\tdisk[soul] = Gun.state.to(node, key, disk[soul]);\n\t\t\t}\n\n\t\t\tvar flush = function(data){\n\t\t\t\tvar err;\n\t\t\t\tcount = 0;\n\t\t\t\tclearTimeout(to);\n\t\t\t\tto = false;\n\t\t\t\tvar ack = acks;\n\t\t\t\tacks = {};\n\t\t\t\tif(data){ disk = data }\n\t\t\t\ttry{store.setItem(opt.prefix, JSON.stringify(disk));\n\t\t\t\t}catch(e){\n\t\t\t\t\tGun.log(err = (e || \"localStorage failure\") + \" Consider using GUN's IndexedDB plugin for RAD for more storage space, https://gun.eco/docs/RAD#install\");\n\t\t\t\t\troot.on('localStorage:error', {err: err, file: opt.prefix, flush: disk, retry: flush});\n\t\t\t\t}\n\t\t\t\tif(!err && !Gun.obj.empty(opt.peers)){ return } // only ack if there are no peers.\n\t\t\t\tGun.obj.map(ack, function(yes, id){\n\t\t\t\t\tif(yes){\n\t\t\t\t\t\tif(yes.more){ acks[id] = yes; return }\n\t\t\t\t\t\tif(yes.s !== yes.lS){ err = \"localStorage batch not same.\" }\n\t\t\t\t\t}\n\t\t\t\t\troot.on('in', {\n\t\t\t\t\t\t'@': id,\n\t\t\t\t\t\terr: err,\n\t\t\t\t\t\tok: 0 // localStorage isn't reliable, so make its `ok` code be a low number.\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})(USE, './adapters/localStorage');\n\n\t;USE(function(module){\n\t\tvar Type = USE('../type');\n\n\t\tfunction Mesh(root){\n\t\t\tvar mesh = function(){};\n\t\t\tvar opt = root.opt || {};\n\t\t\topt.log = opt.log || console.log;\n\t\t\topt.gap = opt.gap || opt.wait || 0;\n\t\t\topt.pack = opt.pack || (opt.memory? (opt.memory * 1000 * 1000) : 1399000000) * 0.3; // max_old_space_size defaults to 1400 MB.\n\t\t\topt.puff = opt.puff || 9; // IDEA: do a start/end benchmark, divide ops/result.\n\t\t\tvar puff = setTimeout.puff || setTimeout;\n\n\t\t\tvar dup = root.dup, dup_check = dup.check, dup_track = dup.track;\n\n\t\t\tvar hear = mesh.hear = function(raw, peer){\n\t\t\t\tif(!raw){ return }\n\t\t\t\tif(opt.pack <= raw.length){ return mesh.say({dam: '!', err: \"Message too big!\"}, peer) }\n\t\t\t\tvar msg, id, hash, tmp = raw[0], DBG;\n\t\t\t\tif(mesh === this){ hear.d += raw.length||0 ; ++hear.c } // STATS!\n\t\t\t\tif('[' === tmp){\n\t\t\t\t\ttry{msg = JSON.parse(raw)}catch(e){opt.log('DAM JSON parse error', e)}\n\t\t\t\t\traw = '';\n\t\t\t\t\tif(!msg){ return }\n\t\t\t\t\tconsole.STAT && console.STAT(+new Date, msg.length, '# on hear batch');\n\t\t\t\t\tvar P = opt.puff;\n\t\t\t\t\t(function go(){\n\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t//var P = peer.puff || opt.puff, s = +new Date; // TODO: For future, but in mix?\n\t\t\t\t\t\tvar i = 0, m; while(i < P && (m = msg[i++])){ hear(m, peer) }\n\t\t\t\t\t\t//peer.puff = Math.ceil((+new Date - s)? P * 1.1 : P * 0.9);\n\t\t\t\t\t\tmsg = msg.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'hear loop');\n\t\t\t\t\t\tflush(peer); // force send all synchronously batched acks.\n\t\t\t\t\t\tif(!msg.length){ return }\n\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t}());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif('{' === tmp || ((raw['#'] || obj_is(raw)) && (msg = raw))){\n\t\t\t\t\ttry{msg = msg || JSON.parse(raw);\n\t\t\t\t\t}catch(e){return opt.log('DAM JSON parse error', e)}\n\t\t\t\t\tif(!msg){ return }\n\t\t\t\t\tif(msg.DBG){ msg.DBG = DBG = {DBG: msg.DBG} }\n\t\t\t\t\tDBG && (DBG.hp = +new Date);\n\t\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = Type.text.random(9) }\n\t\t\t\t\tif(tmp = dup_check(id)){ return }\n\t\t\t\t\t/*if(!(hash = msg['##']) && u !== msg.put){ hash = msg['##'] = Type.obj.hash(msg.put) }\n\t\t\t\t\tif(hash && (tmp = msg['@'] || (msg.get && id))){ // Reduces backward daisy in case varying hashes at different daisy depths are the same.\n\t\t\t\t\t\tif(dup.check(tmp+hash)){ return }\n\t\t\t\t\t\tdup.track(tmp+hash, true).it = it(msg); // GUN core also dedups, so `true` is needed. // Does GUN core need to dedup anymore?\n\t\t\t\t\t}\n\t\t\t\t\tif(tmp = msg['><']){ (msg._).to = Type.obj.map(tmp.split(','), tomap) }\n\t\t\t\t\t*/ // TOOD: COME BACK TO THIS LATER!!! IMPORTANT MESH STUFF!!\n\t\t\t\t\t(msg._ = function(){}).via = mesh.leap = peer;\n\t\t\t\t\tif(tmp = msg.dam){\n\t\t\t\t\t\tif(tmp = mesh.hear[tmp]){\n\t\t\t\t\t\t\ttmp(msg, peer, root);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdup_track(id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar S = +new Date, ST;\n\t\t\t\t\tDBG && (DBG.is = S);\n\t\t\t\t\troot.on('in', msg);\n\t\t\t\t\t//ECHO = msg.put || ECHO; !(msg.ok !== -3740) && mesh.say({ok: -3740, put: ECHO, '@': msg['#']}, peer);\n\t\t\t\t\tDBG && (DBG.hd = +new Date);\n\t\t\t\t\tconsole.STAT && (ST = +new Date - S) > 9 && console.STAT(S, ST, 'msg'); // TODO: PERF: caught one > 1.5s on tgif\n\t\t\t\t\tdup_track(id).via = peer;\n\t\t\t\t\tmesh.leap = null; // warning! mesh.leap could be buggy.\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar tomap = function(k,i,m){m(k,true)};\n\t\t\tvar noop = function(){};\n\t\t\thear.c = hear.d = 0;\n\n\t\t\t;(function(){\n\t\t\t\tvar SMIA = 0;\n\t\t\t\tvar message, loop;\n\t\t\t\tfunction each(peer){ mesh.say(message, peer) }\n\t\t\t\tvar say = mesh.say = function(msg, peer){ var tmp;\n\t\t\t\t\tif((tmp = this) && (tmp = tmp.to) && tmp.next){ tmp.next(msg) } // compatible with middleware adapters.\n\t\t\t\t\tif(!msg){ return false }\n\t\t\t\t\tvar id, hash, raw;\n\t\t\t\t\tvar DBG = msg.DBG, S; if(!peer){ S = +new Date ; DBG && (DBG.y = S) }\n\t\t\t\t\tvar meta = msg._||(msg._=function(){});\n\t\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = Type.text.random(9) }\n\t\t\t\t\t//if(!(hash = msg['##']) && u !== msg.put){ hash = msg['##'] = Type.obj.hash(msg.put) }\n\t\t\t\t\tif(!(raw = meta.raw)){\n\t\t\t\t\t\traw = mesh.raw(msg);\n\t\t\t\t\t\t/*if(hash && (tmp = msg['@'])){\n\t\t\t\t\t\t\tdup.track(tmp+hash).it = it(msg);\n\t\t\t\t\t\t\tif(tmp = (dup.s[tmp]||ok).it){\n\t\t\t\t\t\t\t\tif(hash === tmp['##']){ return false }\n\t\t\t\t\t\t\t\ttmp['##'] = hash;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}*/\n\t\t\t\t\t}\n\t\t\t\t\tS && console.STAT && console.STAT(S, +new Date - S, 'say prep');\n\t\t\t\t\t!loop && dup_track(id);//.it = it(msg); // track for 9 seconds, default. Earth<->Mars would need more! // always track, maybe move this to the 'after' logic if we split function.\n\t\t\t\t\t//console.log(\"SEND!\", JSON.parse(JSON.stringify(msg)));\n\t\t\t\t\tif(!peer && (tmp = msg['@'])){ peer = ((tmp = dup.s[tmp]) && (tmp.via || ((tmp = tmp.it) && (tmp = tmp._) && tmp.via))) || mesh.leap } // warning! mesh.leap could be buggy!\n\t\t\t\t\tif(!peer && msg['@']){\n\t\t\t\t\t\tconsole.STAT && console.STAT(+new Date, ++SMIA, 'total no peer to ack to');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} // TODO: Temporary? If ack via trace has been lost, acks will go to all peers, which trashes browser bandwidth. Not relaying the ack will force sender to ask for ack again. Note, this is technically wrong for mesh behavior.\n\t\t\t\t\tif(!peer && mesh.way){ return mesh.way(msg) }\n\t\t\t\t\tif(!peer || !peer.id){ message = msg;\n\t\t\t\t\t\tif(!Type.obj.is(peer || opt.peers)){ return false }\n\t\t\t\t\t\tvar P = opt.puff, ps = opt.peers, pl = Object.keys(peer || opt.peers || {}); // TODO: BETTER PERF? No object.keys? It is polyfilled by Type.js tho.\n\t\t\t\t\t\t;(function go(){\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\t//Type.obj.map(peer || opt.peers, each); // in case peer is a peer list.\n\t\t\t\t\t\t\tloop = 1; var wr = meta.raw; meta.raw = raw; // quick perf hack\n\t\t\t\t\t\t\tvar i = 0, p; while(i < 9 && (p = (pl||'')[i++])){\n\t\t\t\t\t\t\t\tif(!(p = ps[p])){ continue }\n\t\t\t\t\t\t\t\tsay(msg, p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmeta.raw = wr; loop = 0;\n\t\t\t\t\t\t\tpl = pl.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say loop');\n\t\t\t\t\t\t\tif(!pl.length){ return }\n\t\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t\t\tdup_track(msg['@']); // keep for later\n\t\t\t\t\t\t}());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: PERF: consider splitting function here, so say loops do less work.\n\t\t\t\t\tif(!peer.wire && mesh.wire){ mesh.wire(peer) }\n\t\t\t\t\tif(id === peer.last){ return } peer.last = id;  // was it just sent?\n\t\t\t\t\tif(peer === meta.via){ return false } // don't send back to self.\n\t\t\t\t\tif((tmp = meta.to) && (tmp[peer.url] || tmp[peer.pid] || tmp[peer.id]) /*&& !o*/){ return false }\n\t\t\t\t\tif(peer.batch){\n\t\t\t\t\t\tpeer.tail = (tmp = peer.tail || 0) + raw.length;\n\t\t\t\t\t\tif(peer.tail <= opt.pack){\n\t\t\t\t\t\t\t//peer.batch.push(raw);\n\t\t\t\t\t\t\tpeer.batch += (tmp?',':'')+raw; // TODO: Prevent double JSON! // FOR v1.0 !?\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}\n\t\t\t\t\t//peer.batch = [];\n\t\t\t\t\tpeer.batch = '['; // TODO: Prevent double JSON!\n\t\t\t\t\tvar S = +new Date, ST;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tconsole.STAT && (ST = +new Date - S) > 9 && console.STAT(S, ST, '0ms TO', id, peer.id);\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}, opt.gap);\n\t\t\t\t\tsend(raw, peer);\n\t\t\t\t}\n\t\t\t\tmesh.say.c = mesh.say.d = 0;\n\t\t\t}());\n\n\t\t\tfunction flush(peer){\n\t\t\t\tvar tmp = peer.batch, t = 'string' == typeof tmp, l;\n\t\t\t\tif(t){ tmp += ']' }// TODO: Prevent double JSON!\n\t\t\t\tpeer.batch = peer.tail = null;\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tif(t? 3 > tmp.length : !tmp.length){ return } // TODO: ^\n\t\t\t\tif(!t){try{tmp = (1 === tmp.length? tmp[0] : JSON.stringify(tmp));\n\t\t\t\t}catch(e){return opt.log('DAM JSON stringify error', e)}}\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tsend(tmp, peer);\n\t\t\t}\n\t\t\t// for now - find better place later.\n\t\t\tfunction send(raw, peer){ try{\n\t\t\t\tvar wire = peer.wire;\n\t\t\t\tif(peer.say){\n\t\t\t\t\tpeer.say(raw);\n\t\t\t\t} else\n\t\t\t\tif(wire.send){\n\t\t\t\t\twire.send(raw);\n\t\t\t\t}\n\t\t\t\tmesh.say.d += raw.length||0; ++mesh.say.c; // STATS!\n\t\t\t}catch(e){\n\t\t\t\t(peer.queue = peer.queue || []).push(raw);\n\t\t\t}}\n\n\t\t\t;(function(){\n\t\t\t\t// TODO: this caused a out-of-memory crash!\n\t\t\t\tmesh.raw = function(msg){ // TODO: Clean this up / delete it / move logic out!\n\t\t\t\t\tif(!msg){ return '' }\n\t\t\t\t\tvar meta = (msg._) || {}, put, hash, tmp;\n\t\t\t\t\tif(tmp = meta.raw){ return tmp }\n\t\t\t\t\tif('string' == typeof msg){ return msg }\n\t\t\t\t\t/*if(!msg.dam){ // TOOD: COME BACK TO THIS LATER!!! IMPORTANT MESH STUFF!!\n\t\t\t\t\t\tvar i = 0, to = []; Type.obj.map(opt.peers, function(p){\n\t\t\t\t\t\t\tto.push(p.url || p.pid || p.id); if(++i > 3){ return true } // limit server, fast fix, improve later! // For \"tower\" peer, MUST include 6 surrounding ids. // REDUCED THIS TO 3 for temporary relay peer performance, towers still should list neighbors.\n\t\t\t\t\t\t}); if(i > 1){ msg['><'] = to.join() }\n\t\t\t\t\t}*/  // TOOD: COME BACK TO THIS LATER!!! IMPORTANT MESH STUFF!!\n\t\t\t\t\tvar raw = $(msg); // optimize by reusing put = the JSON.stringify from .hash?\n\t\t\t\t\t/*if(u !== put){\n\t\t\t\t\t\ttmp = raw.indexOf(_, raw.indexOf('put'));\n\t\t\t\t\t\traw = raw.slice(0, tmp-1) + put + raw.slice(tmp + _.length + 1);\n\t\t\t\t\t\t//raw = raw.replace('\"'+ _ +'\"', put); // NEVER USE THIS! ALSO NEVER DELETE IT TO NOT MAKE SAME MISTAKE! https://github.com/amark/gun/wiki/@$$ Heisenbug\n\t\t\t\t\t}*/\n\t\t\t\t\t// TODO: PERF: tgif, CPU way too much on re-JSONifying ^ it.\n\t\t\t\t\t/*\n\t\t\t\t\t\t// NOTE TO SELF: Switch NTS to DAM now.\n\t\t\t\t\t*/\n\t\t\t\t\tif(meta && (raw||'').length < (1000 * 100)){ meta.raw = raw } // HNPERF: If string too big, don't keep in memory.\n\t\t\t\t\treturn raw;\n\t\t\t\t}\n\t\t\t\tvar $ = JSON.stringify, _ = ':])([:';\n\n\t\t\t}());\n\n\t\t\tmesh.hi = function(peer){\n\t\t\t\tvar tmp = peer.wire || {};\n\t\t\t\tif(peer.id){\n\t\t\t\t\topt.peers[peer.url || peer.id] = peer;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = peer.id = peer.id || Type.text.random(9);\n\t\t\t\t\tmesh.say({dam: '?', pid: root.opt.pid}, opt.peers[tmp] = peer);\n\t\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t\t}\n\t\t\t\tpeer.met = peer.met || +(new Date);\n\t\t\t\tif(!tmp.hied){ root.on(tmp.hied = 'hi', peer) }\n\t\t\t\t// @rogowski I need this here by default for now to fix go1dfish's bug\n\t\t\t\ttmp = peer.queue; peer.queue = [];\n\t\t\t\tType.obj.map(tmp, function(msg){\n\t\t\t\t\tsend(msg, peer);\n\t\t\t\t});\n\t\t\t\tType.obj.native && Type.obj.native(); // dirty place to check if other JS polluted.\n\t\t\t}\n\t\t\tmesh.bye = function(peer){\n\t\t\t\troot.on('bye', peer);\n\t\t\t\tvar tmp = +(new Date); tmp = (tmp - (peer.met||tmp));\n\t\t\t\tmesh.bye.time = ((mesh.bye.time || tmp) + tmp) / 2;\n\t\t\t}\n\t\t\tmesh.hear['!'] = function(msg, peer){ opt.log('Error:', msg.err) }\n\t\t\tmesh.hear['?'] = function(msg, peer){\n\t\t\t\tif(msg.pid){\n\t\t\t\t\tif(!peer.pid){ peer.pid = msg.pid }\n\t\t\t\t\tif(msg['@']){ return }\n\t\t\t\t}\n\t\t\t\tmesh.say({dam: '?', pid: opt.pid, '@': msg['#']}, peer);\n\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t}\n\n\t\t\troot.on('create', function(root){\n\t\t\t\troot.opt.pid = root.opt.pid || Type.text.random(9);\n\t\t\t\tthis.to.next(root);\n\t\t\t\troot.on('out', mesh.say);\n\t\t\t});\n\n\t\t\troot.on('bye', function(peer, tmp){\n\t\t\t\tpeer = opt.peers[peer.id || peer] || peer;\n\t\t\t\tthis.to.next(peer);\n\t\t\t\tpeer.bye? peer.bye() : (tmp = peer.wire) && tmp.close && tmp.close();\n\t\t\t\tType.obj.del(opt.peers, peer.id);\n\t\t\t\tpeer.wire = null;\n\t\t\t});\n\n\t\t\tvar gets = {};\n\t\t\troot.on('bye', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(!(tmp = peer.url)){ return } gets[tmp] = true;\n\t\t\t\tsetTimeout(function(){ delete gets[tmp] },opt.lack || 9000);\n\t\t\t});\n\t\t\troot.on('hi', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(!(tmp = peer.url) || !gets[tmp]){ return } delete gets[tmp];\n\t\t\t\tif(opt.super){ return } // temporary (?) until we have better fix/solution?\n\t\t\t\tType.obj.map(root.next, function(node, soul){\n\t\t\t\t\ttmp = {}; tmp[soul] = root.graph[soul];\n\t\t\t\t\tmesh.say({'##': Type.obj.hash(tmp), get: {'#': soul}}, peer);\n\t\t\t\t})\n\t\t\t});\n\n\t\t\treturn mesh;\n\t\t}\n\n\t\t;(function(){\n\t\t\tvar $ = JSON.stringify, u;\n\n\t\t\tType.obj.hash = function(obj, hash){\n\t\t\t\tif(!hash && u === (obj = $(obj, sort))){ return }\n\t\t\t\treturn Type.text.hash(hash || obj || '');\n\t\t\t}\n\n\t\t\tfunction sort(k, v){ var tmp;\n\t\t\t\tif(!(v instanceof Object)){ return v }\n\t\t\t\tvar S = +new Date;\n\t\t\t\tType.obj.map(Object.keys(v).sort(), map, {to: tmp = {}, on: v});\n\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'sort');\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tType.obj.hash.sort = sort;\n\n\t\t\tfunction map(k){\n\t\t\t\tthis.to[k] = this.on[k];\n\t\t\t}\n\t\t}());\n\n\t\tfunction it(msg){ return msg || {_: msg._, '##': msg['##']} } // HNPERF: Only need some meta data, not full reference (took up too much memory). // HNPERF: Garrrgh! We add meta data to msg over time, copying the object happens to early.\n\n\t  var empty = {}, ok = true, u;\n\t\tvar obj_is = Type.obj.is, obj_map = Type.obj.map;\n\n\t  try{ module.exports = Mesh }catch(e){}\n\n\t})(USE, './adapters/mesh');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('../index');\n\t\tGun.Mesh = USE('./mesh');\n\n\t\tGun.on('opt', function(root){\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt;\n\t\t\tif(root.once){ return }\n\t\t\tif(false === opt.WebSocket){ return }\n\n\t\t\tvar env;\n\t\t\tif(typeof window !== \"undefined\"){ env = window }\n\t\t\tif(typeof global !== \"undefined\"){ env = global }\n\t\t\tenv = env || {};\n\n\t\t\tvar websocket = opt.WebSocket || env.WebSocket || env.webkitWebSocket || env.mozWebSocket;\n\t\t\tif(!websocket){ return }\n\t\t\topt.WebSocket = websocket;\n\n\t\t\tvar mesh = opt.mesh = opt.mesh || Gun.Mesh(root);\n\n\t\t\tvar wire = mesh.wire || opt.wire;\n\t\t\tmesh.wire = opt.wire = open;\n\t\t\tfunction open(peer){ try{\n\t\t\t\tif(!peer || !peer.url){ return wire && wire(peer) }\n\t\t\t\tvar url = peer.url.replace(/^http/, 'ws');\n\t\t\t\tvar wire = peer.wire = new opt.WebSocket(url);\n\t\t\t\twire.onclose = function(){\n\t\t\t\t\topt.mesh.bye(peer);\n\t\t\t\t\treconnect(peer);\n\t\t\t\t};\n\t\t\t\twire.onerror = function(error){\n\t\t\t\t\treconnect(peer);\n\t\t\t\t};\n\t\t\t\twire.onopen = function(){\n\t\t\t\t\topt.mesh.hi(peer);\n\t\t\t\t}\n\t\t\t\twire.onmessage = function(msg){\n\t\t\t\t\tif(!msg){ return }\n\t\t\t\t\topt.mesh.hear(msg.data || msg, peer);\n\t\t\t\t};\n\t\t\t\treturn wire;\n\t\t\t}catch(e){}}\n\n\t\t\tsetTimeout(function(){ root.on('out', {dam:'hi'}) },1); // it can take a while to open a socket, so maybe no longer lazy load for perf reasons?\n\n\t\t\tvar wait = 2 * 1000;\n\t\t\tfunction reconnect(peer){\n\t\t\t\tclearTimeout(peer.defer);\n\t\t\t\tif(doc && peer.retry <= 0){ return } peer.retry = (peer.retry || opt.retry || 60) - 1;\n\t\t\t\tpeer.defer = setTimeout(function to(){\n\t\t\t\t\tif(doc && doc.hidden){ return setTimeout(to,wait) }\n\t\t\t\t\topen(peer);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t\tvar doc = 'undefined' !== typeof document && document;\n\t\t});\n\t\tvar noop = function(){};\n\t})(USE, './adapters/websocket');\n\n}());\n","import { Injectable } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunStaticSEA } from 'gun/types/static/sea';\nimport { from } from 'rxjs';\nimport { Certificants, CertificatePolicy } from './classes/Certificate';\nimport { mergeAll, mergeMap } from 'rxjs/operators';\n\nexport interface CertificateOptions {\n  epiry?: number;\n  blacklist?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSeaService {\n  SEA: IGunStaticSEA & {\n    certify: (\n      certificants: any,\n      policies: any,\n      authority: any,\n      cb?: any,\n      opt?: any\n    ) => Promise<any>;\n  } = Gun.SEA as any;\n  constructor() {}\n\n  certify(\n    certificants: Certificants,\n    policies: CertificatePolicy | CertificatePolicy[],\n    authority: any,\n    options?: CertificateOptions\n  ) {\n    return from(\n      this.SEA.certify(certificants, policies, authority, null, options)\n    );\n  }\n\n  certifySelf(pair: any) {\n    return from(this.SEA.certify(pair, '*', pair));\n  }\n\n  pair() {\n    return from(this.SEA.pair(() => {}));\n  }\n\n  async getCertStore(\n    certificant: any,\n    paths: string[],\n    auth: any,\n    isProtected = false,\n    opts: any = null\n  ) {\n    console.log('certifying', certificant);\n    if (Array.isArray(certificant)) {\n      const certificantsPromises: any = certificant.map(\n        async (c) => await this.getCertStore(c, paths, auth, isProtected, opts)\n      );\n      const certificants: any[] = await Promise.all(certificantsPromises);\n      console.log('certificants', certificants);\n      return certificants;\n    }\n    if (typeof certificant !== 'string') {\n      if (typeof certificant !== 'object') {\n        throw new Error('cannot certify provided certificant');\n      } else if (!certificant.pub) {\n        throw new Error('cannot certify provided certificant');\n      }\n    }\n    const store = {} as any;\n    const certPromises = paths.map(async (path: string) => {\n      const policy = { '*': path } as any;\n      if (isProtected) {\n        policy['+'] = '*';\n      }\n      const cert = await this.certify(\n        certificant,\n        policy,\n        auth,\n        opts\n      ).toPromise();\n      store[path] = {} as any;\n      store[path][certificant.pub || certificant] = cert;\n    });\n    await Promise.all(certPromises);\n    // console.log('certified', store);\n    return store;\n  }\n}\n","<a *ngIf=\"!user.is\" routerLink=\"/login\">Log In</a>\n<ng-container *ngIf=\"user.is\">\n  {{ data?.alias }}\n  <a mat-button (click)=\"user.logout()\">Log Out</a>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { User } from '../user/model';\n\n@Component({\n  selector: 'app-session-info',\n  templateUrl: './session-info.component.html',\n  styleUrls: ['./session-info.component.scss'],\n})\nexport class SessionInfoComponent implements OnInit {\n  user = this.ngGun.auth();\n  data: any;\n  constructor(private ngGun: NgGunService<User>) {\n    this.user.once().subscribe((u) => {\n      console.log('user', u);\n      this.data = u;\n    });\n    this.user.auth$.subscribe((event) => this.onAuthEvent(event));\n    // this.user\n    //   .get('alias' as never)\n    //   .once()\n    //   .subscribe((alias) => console.log('alias', alias));\n  }\n\n  ngOnInit(): void {}\n\n  onAuthEvent(event: any) {\n    console.log('auth event', event);\n    this.data = event.put;\n  }\n}\n","<div *ngFor=\"let peer of ngGun.peers|keyvalue\">\n  <!-- {{peer.key}}: {{peer.value?.wire.readyState}} -->\n</div>","import { Component, Input } from '@angular/core';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-gun-peers',\n  templateUrl: './gun-peers.component.html',\n  styleUrls: ['./gun-peers.component.scss'],\n})\nexport class GunPeersComponent {\n  @Input() ngGun!: NgGunService;\n  constructor() {}\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// console.clear();\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Inject, Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunStaticSEA } from 'gun/types/static/sea';\nimport {\n  AlwaysDisallowedType,\n  ArrayAsRecord,\n  ArrayOf,\n  DisallowArray,\n  DisallowPrimitives,\n} from 'gun/types/types';\nimport {\n  from,\n  fromEventPattern,\n  Observable,\n  of,\n  Subject,\n  throwError,\n} from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  filter,\n  map,\n  mergeAll,\n  mergeMap,\n  retryWhen,\n  scan,\n  shareReplay,\n  switchMap,\n  take,\n  timeout,\n} from 'rxjs/operators';\nimport { LexicalQuery } from './LexicalQuery';\nimport { tap } from 'rxjs/operators';\nimport { IGunPeer } from './IGunPeer';\nimport { SEA } from 'gun';\nimport { ICertStore } from './ICertStore';\nimport {\n  gunPath,\n  gunChainArray,\n  parseCertificate,\n} from '../functions/gun-utils';\n\nexport const GUN_NODE = Symbol('GUN_NODE');\n\nexport interface GunChainCallbackOptions {\n  includeKeys?: boolean;\n  includeNulls?: boolean;\n  changes?: boolean;\n  bypassZone?: boolean;\n}\n\nexport interface GunChainFunctions {\n  secret: (value: any) => IGunChainReference;\n  grant: (value: any) => IGunChainReference;\n}\n\ninterface IGunPeers {\n  [key: string]: IGunPeer;\n}\n\ninterface IGunRootOpt {\n  peers: IGunPeers;\n}\n\nexport interface GunChainMeta {\n  _: {\n    root: {\n      opt: IGunRootOpt;\n    };\n  } & any;\n}\n\n@Injectable()\nexport class GunChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop extends 'pre_root' | 'root' | false = false\n> {\n  path!: string[];\n  isNested = false;\n  recordPub!: any;\n  record?: any;\n  certificate!: string;\n\n  certificate$ = new Subject<string>();\n\n  private _gun!: IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta;\n  public get gun(): IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta {\n    return this._gun;\n  }\n  public set gun(\n    value: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta\n  ) {\n    this._gun = value;\n    const myKey = (value as any)._.get;\n\n    const path = gunPath(value as any);\n    const chainArray = gunChainArray(value as any);\n    this.path = path;\n\n    const userPair = (this.gun.user() as any).is;\n    if (!userPair) {\n      // TODO figure out how to handle this case\n      console.warn('NO PAIR');\n      return;\n    }\n    const myPub = `~${(this.gun.user() as any).is?.pub}`;\n    const pubs = path.filter((key) => key.startsWith('~'));\n    if (pubs.length === 0 || pubs[0] !== myPub) {\n      pubs.push(myPub);\n    }\n    if (pubs.length > 1) {\n      this.isNested = true;\n      this.recordPub = pubs[0];\n      const firstPub = path.findIndex((key) => key.startsWith('~'));\n      const pathFromRecord = [...path];\n      const recordPath = pathFromRecord.splice(firstPub).reverse();\n      pathFromRecord.reverse();\n\n      if (myKey === this.recordPub) {\n        console.log('sub root', myKey);\n      } else {\n        const keyInRecord = pathFromRecord[0];\n        const record = chainArray[firstPub];\n        const recordCerts = record.get('certs');\n        const pathCerts = recordCerts.get(keyInRecord);\n        const myCert = pathCerts.get(userPair.pub);\n        // console.log('  %s', keyInRecord);\n        myCert.on(async (cert: any) => {\n          if (cert === null || cert === undefined) {\n            return;\n          }\n          // console.log('cert', cert);\n          // TODO verify cert later, the await causes chained put() calls to fail\n          // const verified = await SEA.verify(\n          //   cert,\n          //   this.recordPub.replace('~', '')\n          // );\n          this.certificate = cert;\n          this.certificate$.next(cert);\n          // console.log(\n          //   'verified cert for %s.%s',\n          //   this.recordPub,\n          //   keyInRecord,\n          //   pathFromRecord.join('.')\n          // );\n        });\n\n        this.record = record;\n      }\n    }\n  }\n\n  constructor(\n    protected ngZone: NgZone,\n    @Optional()\n    @Inject(GUN_NODE)\n    gun: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta\n  ) {\n    if (!gun) {\n      this.gun = new Gun() as any;\n    } else {\n      this.gun = gun;\n    }\n  }\n  certificates: ICertStore = {};\n  private sources = new Map<string, Observable<any>>();\n  private _auth: GunAuthChain<DataType, ReferenceKey> | null = null;\n\n  from<T>(gun: IGunChainReference<T>) {\n    return new GunChain<T>(this.ngZone, gun as any);\n  }\n\n  get<K extends keyof DataType>(\n    key: ArrayOf<DataType> extends never ? K : ArrayOf<DataType>\n  ) {\n    const soul: ArrayOf<DataType> extends never\n      ? K\n      : ArrayOf<DataType> = this.getSoul(key);\n    return this.from(this.gun.get(soul));\n  }\n\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate: string = this.certificate\n  ) {\n    // FIXME \"unverified data\" - certified put values must be signed?\n\n    if (this.isNested && !certificate) {\n      console.warn('NO CERTIFICATE FOUND FOR FOREIGN RECORD!');\n    }\n    const result = this.from(\n      (this.gun.put as any)(\n        data,\n        null,\n        certificate ? { opt: { cert: certificate } } : undefined\n      )\n    );\n    // this.once().subscribe((me) => {\n    //   console.log('me', me);\n    // });\n    return result;\n  }\n\n  set(\n    data: AlwaysDisallowedType<\n      DataType extends Array<infer U>\n        ? U extends {\n            [key: string]: any;\n            [key: number]: any;\n          }\n          ? ArrayOf<DataType>\n          : never\n        : never\n    >\n  ) {\n    // TODO get certificate for set()\n    return this.from(this.gun.set(data));\n  }\n\n  unset(data: ArrayOf<DataType>) {\n    if (this.gun.unset) {\n      return this.from(this.gun.unset(data));\n    } else {\n      throw new Error('CANNOT FIND Gun.chain.unset!');\n    }\n  }\n\n  query(query: LexicalQuery): GunChain<DataType, ReferenceKey, IsTop> {\n    return this.from(this.gun.get(query as any)) as any;\n  }\n\n  load() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).load((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n  open() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).open((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(debounceTime(25));\n  }\n\n  map(options?: GunChainCallbackOptions) {\n    return this.from(this.gun.map());\n  }\n\n  reduce(options?: GunChainCallbackOptions) {\n    const base = this.from(this.gun.map());\n\n    return base.on({ includeKeys: true }).pipe(\n      scan((acc: any, val: any) => {\n        if (val[0] === null || undefined === val[0]) {\n          delete acc[val[1]];\n        } else {\n          acc[val[1]] = val[0];\n        }\n        return acc;\n      }, {} as DataType[]),\n      map((v) =>\n        options?.includeNulls\n          ? v\n          : Object.values(v).filter((ov) => ov !== undefined)\n      ),\n      debounceTime(100)\n    );\n  }\n\n  not() {\n    return fromEventPattern((handler) => {\n      const signal = { stopped: false };\n      if (this.gun.not) {\n        this.gun.not((key: ReferenceKey) => {\n          handler(key);\n        });\n      }\n    });\n  }\n\n  on(\n    options?: GunChainCallbackOptions\n  ): Observable<AlwaysDisallowedType<ArrayAsRecord<DataType>>> {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.on(\n          (\n            data: AlwaysDisallowedType<ArrayAsRecord<DataType>>,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (signal.stopped) {\n              return ev.off();\n            }\n            const dispatchHandler = () => {\n              if (options?.includeKeys) {\n                handler(data, key);\n              } else {\n                handler(data);\n              }\n            };\n            // FIXME: ngZone.run() causes infinite recursion\n            if (options?.bypassZone) {\n              dispatchHandler();\n            } else {\n              this.ngZone.run(dispatchHandler);\n            }\n          },\n          options as any\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    );\n  }\n\n  once() {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.once(\n          (\n            data:\n              | AlwaysDisallowedType<ArrayAsRecord<DataType>>\n              | DisallowPrimitives<\n                  IsTop,\n                  AlwaysDisallowedType<ArrayAsRecord<DataType>>\n                >\n              | undefined,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (ev && signal.stopped) {\n              return ev.off();\n            }\n            this.ngZone.run(() => {\n              handler(data);\n            });\n          }\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n\n  auth() {\n    if (!this._auth) {\n      this._auth = new GunAuthChain<DataType, ReferenceKey>(\n        this.ngZone,\n        //// no fix for this... gun.user.is is static! can't have multiple logins on a single gun instance\n        // TODO allow option to create a new gun instance for this auth call\n        this.gun.user().recall({ sessionStorage: true }) as any,\n        this as any\n      );\n    }\n    return this._auth;\n  }\n\n  user(pubKey?: string) {\n    return this.from(this.gun.user(pubKey?.replace(/^~/, '')));\n  }\n\n  onEvent(event: string, node = this.gun): Observable<any> {\n    if (!this.sources.has(event)) {\n      const source = fromEventPattern((handler) => {\n        // console.log('add handler');\n        (node as any).on(event, (...args: any) => {\n          this.ngZone.run(() => {\n            handler(...args);\n          });\n        });\n      }).pipe(shareReplay(1));\n      this.sources.set(event, source);\n    }\n    return this.sources.get(event) as Observable<any>;\n  }\n\n  protected getSoul(key: any) {\n    return typeof key === 'object' && Gun.node.is(key)\n      ? (Gun.node.soul(key) as any)\n      : key;\n  }\n}\n\n/** Represents a top-level authenticated node (user or key pair) */\nexport class GunAuthChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop = false\n> extends GunChain<DataType, ReferenceKey, false> {\n  is: any;\n  auth$ = this.root.onEvent('auth').pipe(\n    tap((ack) => {\n      if (!ack.err) {\n        this.is = ack.put;\n      }\n    }),\n    shareReplay(1)\n  );\n\n  constructor(\n    ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    gun: IGunChainReference<DataType, ReferenceKey, false> &\n      Partial<GunChainFunctions> &\n      Partial<GunChainMeta>,\n    @Optional() @SkipSelf() public root: GunChain\n  ) {\n    super(ngZone, gun as any);\n    this.is = (gun as any).is;\n  }\n\n  login(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => !ack.err),\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n\n    const login$ = fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.auth(alias, pass, (ack: any) => {\n          this.ngZone.run(() => {\n            handler(ack);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(\n      mergeMap((ack: any) => (ack.wait ? throwError(new Error(ack)) : of(ack))),\n      retryWhen((errors) => errors.pipe(delay(1000), take(10)))\n    );\n    const loginOrAuth$ = from([auth$, login$]).pipe(mergeAll(), take(1));\n    return loginOrAuth$;\n  }\n\n  create(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n    this.gun.create(alias, pass);\n    return auth$;\n  }\n\n  secret(value: any) {\n    if (this.gun.secret) {\n      return this.from(this.gun.secret(value));\n    }\n    throw new Error('GUN.chain.secret NOT FOUND');\n  }\n\n  from<T>(gun: IGunChainReference<T>) {\n    return new GunAuthChain<T>(this.ngZone, gun, this.root);\n  }\n\n  recall() {\n    this.gun.recall({ sessionStorage: true });\n    return this.auth$.pipe(timeout(5000));\n  }\n\n  logout() {\n    this.gun.leave();\n  }\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate: string = this.certificate\n  ) {\n    return super.put(data, certificate);\n  }\n}\n\n/** Represents a node nested under a user/pair\n * gun.user() : AuthChain\n * gun.user(pub) : UserChain\n * gun.get('~@alias') : GunChain<{pub: string}>\n */\nexport class GunCertChain extends GunChain {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class FormsUiModule { }\n","import { NgModule } from '@angular/core';\nimport { NgGunComponent } from './ng-gun.component';\nimport { GunOptions } from './ng-gun.service';\nimport { SoulPipe } from './soul.pipe';\nimport { UpdatedPipe } from './updated.pipe';\nimport { ChainDirective } from './chain.directive';\nimport { AliasPipe } from './alias.pipe';\nimport { VerifyPipe } from './verify.pipe';\n\n@NgModule({\n  declarations: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n  ],\n  imports: [],\n  exports: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n  ],\n})\nexport class NgGunModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'updated',\n})\nexport class UpdatedPipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): unknown {\n    const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n    if (!updates) {\n      return null;\n    }\n    return Object.values(updates).reduce(\n      (latest: any, time: any) => (time > latest ? time : latest),\n      0\n    );\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CertificateFormComponent } from '../certificate-form/certificate-form.component';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss'],\n})\nexport class CertificatesComponent implements OnInit {\n  constructor(\n    private dialog: MatDialog,\n    private chainDirective: ChainDirective,\n    ngGun: NgGunService\n  ) {\n    // super(ngGun);\n  }\n\n  ngOnInit(): void {}\n\n  createCertificate() {\n    this.dialog.open(CertificateFormComponent, { height: '90%', width: '90%' });\n  }\n}\n","<p>certificates works!</p>\n<button mat-button (click)=\"createCertificate()\">Create</button>\n"],"sourceRoot":"webpack:///"}