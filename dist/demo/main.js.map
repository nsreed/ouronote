{"version":3,"sources":["./projects/demo/src/app/system.service.ts","./projects/demo/src/app/components/about/about.component.ts","./projects/demo/src/app/components/about/about.component.html","./projects/demo/src/app/login/login.component.ts","./projects/demo/src/app/login/login.component.html","./projects/demo/src/app/components/components.module.ts","./projects/ng-gun/src/lib/gun-map.directive.ts","./node_modules/gun sync","./projects/demo/src/app/components/certificate-form/certificate-form.component.ts","./projects/demo/src/app/components/certificate-form/certificate-form.component.html","./projects/demo/src/app/welcome/welcome.component.ts","./projects/demo/src/app/welcome/welcome.component.html","./projects/demo/src/app/user/user.service.ts","./projects/ng-gun/src/lib/soul.pipe.ts","./projects/ng-gun/src/lib/functions/gun-utils.ts","./projects/demo/src/app/app.module.ts","./projects/demo/src/app/certificates/certificates/certificates.component.ts","./projects/demo/src/app/certificates/certificates/certificates.component.html","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/app.component.html","./projects/log/src/lib/log.service.ts","./projects/ng-gun/src/lib/chain.directive.ts","./projects/demo/src/app/certificates/certificates.module.ts","./projects/demo/src/app/components/bug-report/bug-report.component.ts","./projects/demo/src/app/components/bug-report/bug-report.component.html","./projects/ng-gun/src/lib/verify.pipe.ts","./projects/ng-gun/src/lib/dam.service.ts","./projects/demo/src/app/certificates/create-certificate/create-certificate.component.ts","./projects/demo/src/app/certificates/create-certificate/create-certificate.component.html","./projects/demo/src/app/components/confirm/confirm.component.ts","./projects/demo/src/app/components/confirm/confirm.component.html","./projects/demo/src/app/app-routing.module.ts","./projects/demo/src/app/components/gun-peers/gun-peers.component.ts","./projects/demo/src/app/components/gun-peers/gun-peers.component.html","./projects/ng-gun/src/lib/ng-gun.service.ts","./projects/ng-gun/src/lib/gun-auth.guard.ts","./projects/demo/src/app/components/alias-autocomplete/alias-autocomplete.component.ts","./projects/demo/src/app/components/alias-autocomplete/alias-autocomplete.component.html","./projects/log/src/lib/log.module.ts","./projects/ng-gun/src/lib/alias.pipe.ts","./projects/demo/src/environments/version.ts","./projects/ng-gun/src/lib/ng-gun.component.ts","./projects/ng-gun/src/lib/ng-sea.service.ts","./projects/demo/src/app/session-info/session-info.component.html","./projects/demo/src/app/session-info/session-info.component.ts","./projects/demo/src/app/diagnostics.service.ts","./projects/demo/src/main.ts","./projects/ng-gun/src/lib/classes/GunChain.ts","./projects/ng-gun/src/lib/route-chain.directive.ts","./projects/demo/src/app/forms-ui/forms-ui.module.ts","./projects/ng-gun/src/lib/ng-gun.module.ts","./projects/ng-gun/src/lib/updated.pipe.ts","./$_lazy_route_resource lazy namespace object","./projects/demo/src/app/components/certificates/certificates.component.ts","./projects/demo/src/app/components/certificates/certificates.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nconst POINTER = window.PointerEvent && navigator.maxTouchPoints > 0;\nconst TOUCH =\n  window.TouchEvent &&\n  window.ontouchstart !== undefined &&\n  document.ontouchend !== undefined;\nexport const CAPABILITIES = {\n  POINTER,\n  TOUCH,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SystemService {\n  constructor() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService, CAPABILITIES } from '../../system.service';\nimport { VERSION } from '../../../environments/version';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit {\n  version = VERSION;\n  capabilities = CAPABILITIES;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div fxLayout=\"column\">\n  <h1>Ouronote</h1>\n  <blockquote>version {{version.version}}</blockquote>\n  <a href=\"https://www.github.com/nsreed/ouronote\">github</a>\n  <a href=\"https://www.github.com/nsreed/ouronote/issues\">issues</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form = this.fb.group({\n    alias: [null, Validators.required],\n    password: [null, Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private ngGun: NgGunService,\n    router: Router\n  ) {\n    ngGun.auth().auth$.subscribe((data) => {\n      // console.log('auth data', data);\n      router.navigateByUrl('/user');\n    });\n  }\n\n  ngOnInit(): void {\n    this.form.updateValueAndValidity();\n  }\n\n  create() {\n    if (this.form.invalid) {\n      return;\n    }\n    // console.log('create', this.form.value);\n    this.ngGun\n      .auth()\n      .create(this.form.value.alias, this.form.value.password)\n      .subscribe((data) => {\n        // console.log('create result', data)\n      });\n  }\n\n  login() {\n    if (!this.form.valid) {\n      return;\n    }\n    // console.log('login', this.form.value);\n    this.ngGun\n      .auth()\n      .login(this.form.value.alias, this.form.value.password)\n      .subscribe((data) => {\n        // console.log('login result', data);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <mat-form-field>\n    <input matInput formControlName=\"alias\">\n    <mat-label>alias</mat-label>\n  </mat-form-field>\n  <mat-form-field>\n    <input type=\"password\" matInput formControlName=\"password\">\n    <mat-label>password</mat-label>\n  </mat-form-field>\n  <button mat-button color=\"primary\" (click)=\"login()\" [disabled]=\"form.invalid\">Log In</button>\n  <button mat-button color=\"primary\" (click)=\"create()\" [disabled]=\"form.invalid\">Create</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CertificatesComponent } from './certificates/certificates.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatListModule } from '@angular/material/list';\nimport { NgGunModule } from '../../../../ng-gun/src/lib/ng-gun.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { BugReportComponent } from './bug-report/bug-report.component';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { GunPeersComponent } from './gun-peers/gun-peers.component';\nimport { AliasAutocompleteComponent } from './alias-autocomplete/alias-autocomplete.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  declarations: [\n    BugReportComponent,\n    GunPeersComponent,\n    AliasAutocompleteComponent,\n    AboutComponent,\n  ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatListModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatTooltipModule,\n    NgGunModule,\n    ReactiveFormsModule,\n  ],\n  exports: [BugReportComponent, GunPeersComponent, AliasAutocompleteComponent],\n})\nexport class ComponentsModule {}\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { GunChain } from './classes/GunChain';\nimport * as Gun from 'gun';\n\nexport class GunMapContext<T, U extends GunChain> {\n  constructor(public $implicit: T, public chain: U) {}\n}\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[gunMap][gunMapOf]',\n})\nexport class GunMapDirective {\n  soulViews = new Map<string, EmbeddedViewRef<any>>();\n  @Input() set gunMapOf(value: GunChain) {\n    value\n      .map()\n      .on()\n      .subscribe((data: any) => {\n        if (!this.soulViews.get(Gun.node.soul(data))) {\n          const embed = this.viewContainer.createEmbeddedView(\n            this.templateRef,\n            new GunMapContext(data, value)\n          );\n          this.soulViews.set(Gun.node.soul(data), embed);\n        }\n      });\n  }\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef\n  ) {}\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"7JE1\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-certificate-form',\n  templateUrl: './certificate-form.component.html',\n  styleUrls: ['./certificate-form.component.scss'],\n})\nexport class CertificateFormComponent implements OnInit {\n  form = this.fb.group({\n    multi: false,\n    people: this.fb.array([]),\n    policies: this.fb.array([]),\n    expires: [null, Validators.min(new Date().getTime())],\n  });\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Certificate</h1>\n<form mat-dialog-content [formGroup]=\"form\">\n  <mat-radio-group formControlName=\"multi\">\n    <mat-radio-button [value]=\"true\">Everyone</mat-radio-button>\n    <mat-radio-button [value]=\"false\">Specific People:</mat-radio-button>\n  </mat-radio-group>\n\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Search</mat-label>\n  </mat-form-field>\n\n  <h2>Policies</h2>\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Path</mat-label>\n  </mat-form-field>\n  <mat-checkbox>Require Public Key in path</mat-checkbox>\n\n  <h2>Expires</h2>\n  <mat-form-field>\n    <input matInput [matDatepicker]=\"expire\">\n    <mat-label>Select an expiration date</mat-label>\n    <mat-datepicker #expire></mat-datepicker>\n    <mat-datepicker-toggle [for]=\"expire\" matSuffix></mat-datepicker-toggle>\n  </mat-form-field>\n\n  <h2>Blacklist</h2>\n  <mat-form-field>\n    <input matInput>\n    <mat-label>Specify a blacklist path</mat-label>\n  </mat-form-field>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a mat-button routerLink=\"/login\">Log In</a>\n","import { Injectable } from '@angular/core';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { User } from './model';\nimport { mergeMap, map, mapTo, shareReplay, mergeAll } from 'rxjs/operators';\nimport { from, of } from 'rxjs';\n// import { User } from ;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  user = this.ngGun.auth();\n  alias$ = from([\n    of(this.user.alias),\n    this.user.auth$.pipe(map((a) => this.user.alias)),\n  ]).pipe(mergeAll());\n  constructor(private ngGun: NgGunService<User>) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'soul',\n})\nexport class SoulPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return Gun.node.is(value) ? Gun.node.soul(value) : undefined;\n  }\n}\n","import * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunCertificate } from '../classes/Certificate';\nexport const gunUpdateTime = (value: any) => {\n  const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n  if (!updates) {\n    return 0;\n  }\n  return Object.values(updates).reduce((latest: any, time: any) =>\n    time > latest ? time : latest\n  ) as number;\n};\nexport const gunChainArray = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  do {\n    if (c._.get) {\n      path.push(c);\n    } else {\n      break;\n    }\n    c = c.back();\n  } while (c.back() !== c);\n\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport const gunCertificateChain = (value: IGunChainReference) =>\n  gunChainArray(value).map((c) => c.get('certs'));\n\n/**\n * Returns an array of keys representing the path of the given chain\n * @param value the chain to pathify\n */\nexport const gunPath = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport function parseCertificate(cert: string) {\n  const RE_SEA_CERT = /^SEA/;\n  if (!RE_SEA_CERT.test(cert)) {\n    throw new Error('could not parse certificate, incorrect prefix');\n  }\n  const scrubbed = cert.replace(RE_SEA_CERT, '');\n  return JSON.parse(scrubbed) as IGunCertificate;\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LogModule } from '../../../log/src/lib/log.module';\nimport { LogService } from '../../../log/src/lib/log.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CertificatesModule } from './certificates/certificates.module';\nimport { CertificateFormComponent } from './components/certificate-form/certificate-form.component';\nimport { CertificatesComponent } from './components/certificates/certificates.component';\nimport { ComponentsModule } from './components/components.module';\nimport { ConfirmComponent } from './components/confirm/confirm.component';\nimport { FormsUiModule } from './forms-ui/forms-ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { SessionInfoComponent } from './session-info/session-info.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SessionInfoComponent,\n    ConfirmComponent,\n    CertificatesComponent,\n    CertificateFormComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    CertificatesModule,\n    ComponentsModule,\n    FlexLayoutModule,\n    FormsUiModule,\n    LogModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n  ],\n  providers: [\n    {\n      provide: 'gun-options',\n      useValue: {\n        localStorage: false,\n        peers: [\n          location.origin.match(/localhost/)\n            ? 'http://localhost:8765/gun'\n            : location.origin + '/gun',\n        ],\n      },\n    },\n    {\n      provide: LogService,\n      useClass: LogService,\n    },\n  ],\n  exports: [CertificatesComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { filter, map, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport { UserService } from '../../user/user.service';\nimport * as Gun from 'gun';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss'],\n})\nexport class CertificatesComponent implements OnInit {\n  pub$ = this.chainDirective.chain$.pipe(\n    map((chain) => chain.recordPub.replace('~', ''))\n  );\n  certs$ = this.chainDirective.chain$.pipe(\n    switchMap((chain) => chain.get('certs').open())\n  );\n  owners$ = this.chainDirective.chain$.pipe(\n    switchMap((chain) => chain.get('owner').open())\n  );\n  owner$ = this.chainDirective.chain$.pipe(\n    mergeMap((node) =>\n      node.get('owner').map({ includeKeys: true }).on({ includeKeys: true })\n    ),\n    filter(\n      (ownerTuple: any) =>\n        ownerTuple[0] &&\n        ownerTuple[1] === this.userService.user.is.pub.replace('~', '')\n    ),\n    map((ownerTuple) => ownerTuple[0])\n  );\n  constructor(\n    private chainDirective: ChainDirective,\n    private userService: UserService,\n    private ngGun: NgGunService\n  ) {\n    this.certs$.subscribe((c) => {});\n    this.owners$.subscribe();\n    // this.ngGun\n    //   .findAlias(userService.user.is.pub)\n    //   .subscribe((v) => console.log('alias', v));\n  }\n\n  ngOnInit(): void {}\n}\n","<h1>\n  <mat-icon>security</mat-icon>\n  Certificates\n</h1>\n<p>Showing certificates for {{pub$|async}}</p>\n<div gdColumns=\"max-content repeat(3, max-content)\" gdGap=\"1em\">\n  <span></span>\n  <span>Path</span>\n  <span>User</span>\n  <span>Permissions</span>\n  <ng-container *ngFor=\"let certPath of (certs$|async)|keyvalue\">\n    <ng-container *ngFor=\"let certUser of certPath.value|keyvalue\">\n      <mat-checkbox></mat-checkbox>\n      <code>{{certPath.key}}</code>\n      <span>{{certUser.key|alias|async}}</span>\n      <code>{{(certUser.value|verify|async)?.w | json}}</code>\n    </ng-container>\n  </ng-container>\n</div>\n\n<app-create-certificate *ngIf=\"owner$|async\"></app-create-certificate>\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  ActivatedRoute,\n  ChildActivationEnd,\n  NavigationEnd,\n  Router,\n} from '@angular/router';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { filter } from 'rxjs/operators';\nimport { LogMessage, LogService } from '../../../log/src/lib/log.service';\nimport { NgGunService } from '../../../ng-gun/src/lib/ng-gun.service';\nimport { VERSION } from '../environments/version';\nimport { GunPeersComponent } from './components/gun-peers/gun-peers.component';\nimport { DiagnosticsService } from './diagnostics.service';\nimport { User } from './user/model';\nimport { AboutComponent } from './components/about/about.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  user: any;\n  messages: LogMessage[] = [];\n  constructor(\n    public ngGun: NgGunService<User>,\n    private router: Router,\n    private route: ActivatedRoute,\n    private cb: ClipboardService,\n    private logger: LogService,\n    private dialog: MatDialog,\n    public diagnosticsService: DiagnosticsService\n  ) {\n    // logger.out$.subscribe(console.log);\n    logger.log('app started');\n    this.user = this.ngGun.auth();\n    window.document.title = `ouronote version ${VERSION.version}`;\n\n    let lastActivated: ChildActivationEnd;\n    router.events\n      .pipe(filter((e) => e instanceof ChildActivationEnd))\n      .subscribe((e) => (lastActivated = e as any));\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((e) => {\n        // console.log('last activated at navigation end', lastActivated);\n        // this.logger.log(\n        //   'last activated',\n        //   // tslint:disable-next-line: only-arrow-functions\n        //   JSON.stringify(lastActivated.snapshot, ['children', 'data'])\n        // );\n      });\n  }\n\n  logout() {\n    this.ngGun.auth().logout();\n    this.router.navigateByUrl('/login');\n  }\n\n  peers() {\n    this.dialog.open(GunPeersComponent, {\n      data: {\n        ngGun: this.ngGun,\n      },\n      width: '80%',\n      height: '80%',\n    });\n  }\n\n  bugReport() {\n    this.logger.log('generating bug report...');\n    this.diagnosticsService.bugReport();\n  }\n\n  about() {\n    this.dialog.open(AboutComponent);\n  }\n}\n","<mat-sidenav-container fxFlexFill>\n  <mat-sidenav #nav [mode]=\"'side'\" [opened]=\"user.is\">\n    <!-- <mat-toolbar>\n      <button mat-icon-button (click)=\"nav.toggle()\">\n        <mat-icon>chevron_left</mat-icon>\n      </button>\n    </mat-toolbar> -->\n    <mat-action-list>\n      <mat-list-item routerLinkActive=\"active\" routerLink=\"/user/vectors\" matTooltip=\"Vectors\">\n        <mat-icon mat-list-icon>note</mat-icon>\n      </mat-list-item>\n      <mat-list-item routerLinkActive=\"active\" routerLink=\"/user/messages\" matTooltip=\"Messages\">\n        <mat-icon mat-list-icon>message</mat-icon>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item (click)=\"bugReport()\" matTooltip=\"Open bug report dialog\">\n        <mat-icon mat-list-icon>bug_report</mat-icon>\n      </mat-list-item>\n      <mat-list-item (click)=\"peers()\" matTooltip=\"Open peer statistics\">\n        <mat-icon mat-list-icon [matBadge]=\"(diagnosticsService.disconnectedPeers$|async)?.length||null\"\n          matBadgeColor=\"warn\" matBadgeSize=\"small\">\n          signal_wifi_4_bar\n        </mat-icon>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item [matMenuTriggerFor]=\" sessionMenu\" [matTooltip]=\"'@'+ngGun.auth().alias\">\n        <mat-icon mat-list-icon color=\"primary\">account_circle</mat-icon>\n      </mat-list-item>\n      <mat-menu #sessionMenu>\n        <button mat-menu-item (click)=\"about()\">About Ouronote</button>\n        <button mat-menu-item routerLink=\"/user/settings\">Settings</button>\n        <button mat-menu-item (click)=\"logout()\">Log Out</button>\n      </mat-menu>\n    </mat-action-list>\n    <!-- <ng-template #pubMenu>\n      <mat-action-list>\n        <mat-list-item routerLink=\"/login\">Log In</mat-list-item>\n      </mat-action-list>\n    </ng-template> -->\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import {\n  Inject,\n  Injectable,\n  Optional,\n  EventEmitter,\n  SkipSelf,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { scan, shareReplay, take } from 'rxjs/operators';\nexport enum LogLevel {\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport interface LogMessage {\n  name: string;\n  timestamp: number;\n  level: LogLevel;\n  message: string;\n  args: any[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  constructor(\n    @Optional()\n    @Inject('log-name')\n    public name: string = 'app',\n    @Optional()\n    @SkipSelf()\n    public parent?: LogService\n  ) {\n    this.name = this.name || 'app';\n    if (this.name !== 'root' && !parent) {\n      this.parent = LogService.root;\n    }\n  }\n\n  public static readonly root = new LogService('root');\n\n  static readonly buffer$ = LogService.root.out$.pipe(\n    scan((acc, val) => {\n      acc.push(val as never);\n      if (acc.length > 1000) {\n        acc.shift();\n      }\n      return acc;\n    }, []),\n    shareReplay(1)\n  );\n\n  protected _out$ = new EventEmitter<LogMessage>();\n  out$ = this._out$;\n  outSub = this.out$.subscribe((m) => {\n    if (this.parent) {\n      this.parent._out$.emit(m);\n    } else {\n      console.log(\n        `%s %s ${m.message}`,\n        m.name,\n        new Date(m.timestamp).toISOString(),\n        ...m.args\n      );\n    }\n  });\n\n  level: LogLevel = LogLevel.INFO;\n\n  private supplementals = new Map<string, LogService>();\n\n  static getLogger(name: string) {\n    return new LogService(name, LogService.root);\n  }\n\n  verbose(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.VERBOSE, message, args);\n    this._out$.emit(packed);\n  }\n\n  log(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.INFO, message, args);\n    this._out$.emit(packed);\n  }\n\n  warn(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.WARN, message, args);\n    this._out$.emit(packed);\n  }\n\n  error(message: string, ...args: any[]) {\n    const packed = this.buildMessage(LogLevel.ERROR, message, args);\n    this._out$.emit(packed);\n  }\n\n  supplemental(name: string): LogService {\n    if (!this.supplementals.has(name)) {\n      const supplementalLog = new LogService(name, this);\n      // supplementalLog.out$.subscribe((msg) => {\n      //   console.log('supplemental message', msg);\n      //   this._out$.emit(msg);\n      // });\n      this.supplementals.set(name, supplementalLog);\n    }\n    return this.supplementals.get(name) as LogService;\n  }\n\n  private buildMessage(\n    level: LogLevel,\n    message: string,\n    args: any[]\n  ): LogMessage {\n    return {\n      level,\n      message,\n      args,\n      timestamp: Date.now(),\n      name: this.name,\n    };\n  }\n}\n","import { Directive, Input, EventEmitter } from '@angular/core';\nimport { GunChain } from './classes/GunChain';\nimport { NgGunService } from './ng-gun.service';\nimport { shareReplay } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[gunChain]',\n  exportAs: 'gunChain',\n})\nexport class ChainDirective<T = any> {\n  private _chain?: GunChain<T> | undefined;\n  public get chain(): GunChain<T> | undefined {\n    return this._chain;\n  }\n  @Input('gunChain')\n  public set chain(value: GunChain<T> | undefined) {\n    if (value !== this._chain) {\n      this._chain = value;\n      this._chain$.emit(value);\n    }\n  }\n\n  private _chain$ = new EventEmitter<GunChain<T>>();\n  chain$ = this._chain$.pipe(shareReplay(1));\n\n  constructor(protected ngGun: NgGunService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CertificatesComponent } from './certificates/certificates.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { CreateCertificateComponent } from './create-certificate/create-certificate.component';\nimport { MatListModule } from '@angular/material/list';\nimport { NgGunModule } from '../../../../ng-gun/src/lib/ng-gun.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  declarations: [CertificatesComponent, CreateCertificateComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatInputModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatStepperModule,\n\n    MatListModule,\n    NgGunModule,\n  ],\n  exports: [CertificatesComponent],\n})\nexport class CertificatesModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport host from '@jsdevtools/host-environment';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { VERSION } from 'projects/demo/src/environments/version';\nimport { debounceTime } from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\nimport { NgGunService } from 'projects/ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-bug-report',\n  templateUrl: './bug-report.component.html',\n  styleUrls: ['./bug-report.component.scss'],\n})\nexport class BugReportComponent implements OnInit {\n  report: any = null;\n  reportStr = '';\n  descriptionCtl = this.fb.control(null);\n\n  constructor(\n    public ngGun: NgGunService,\n    private router: Router,\n    private cb: ClipboardService,\n    private dialogRef: MatDialogRef<BugReportComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    private data: any,\n    private toaster: MatSnackBar,\n    private fb: FormBuilder\n  ) {\n    this.generate();\n    this.descriptionCtl.valueChanges.pipe(debounceTime(200)).subscribe(() => {\n      // if (this.descriptionCtl.value?.length > 0) {\n      this.report = {\n        ...this.report,\n        description: this.descriptionCtl.value,\n      };\n      // }\n      this.updatePreview();\n    });\n  }\n\n  ngOnInit() {}\n\n  generate() {\n    // LogService.buffer$.pipe(take(1)).subscribe((messages) => {\n    //   console.table(messages);\n    const graph = this.data.gun._.graph;\n    const gunConstructorOptions = this.ngGun.gunOptions;\n    const report = {\n      host: window.location.host,\n      route: this.router.url,\n      is: this.ngGun.auth().is?.pub,\n      gunConstructorOptions,\n      peers: this.data.peers,\n      graph,\n      timestamp: Date.now(),\n      version: VERSION,\n      system: host.browser,\n      // log: this.data.messages,\n      // log: messages,\n    };\n    this.report = report;\n    // });\n    this.updatePreview();\n  }\n\n  updatePreview() {\n    // FIXME crashing with circular references in messages\n    this.reportStr = JSON.stringify(this.report, null, 2);\n  }\n\n  copy() {\n    this.cb.copy(this.reportStr);\n    this.toaster.open('copied to clipboard!');\n  }\n\n  download() {\n    const reportStr = JSON.stringify(this.report, null, 2);\n    const graphBlob = new Blob([reportStr], {\n      type: 'text/plain;charset=utf-8',\n    });\n    saveAs(graphBlob, `ouronote-bugreport-${Date.now()}.json`);\n  }\n}\n","<h1 matDialogTitle>Bug Report</h1>\n<div matDialogContent>\n  <mat-accordion [multi]=\"true\">\n    <mat-expansion-panel [expanded]=\"true\">\n      <mat-expansion-panel-header>Description</mat-expansion-panel-header>\n      <mat-form-field fxFlexFill>\n        <textarea matInput\n          placeholder=\"Please provide a description of the problem and what you were doing/what you expected when you encountered it.\"\n          [formControl]=\"descriptionCtl\"></textarea>\n      </mat-form-field>\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>Preview</mat-expansion-panel-header>\n      <pre>{{reportStr}}</pre>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n<div matDialogActions>\n\n  <!-- <button mat-button (click)=\"generate()\">Generate</button> -->\n  <button mat-icon-button (click)=\"copy()\" matTooltip=\"Copy to clipboard\">\n    <mat-icon>content_copy</mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"download()\" matTooltip=\"Download .json\">\n    <mat-icon>file_download</mat-icon>\n  </button>\n  <a mat-button target=\"_blank\" href=\"https://www.github.com/nsreed/ouronote/issues\">Create a github issue</a>\n\n</div>","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Optional,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { map, take, pluck, tap } from 'rxjs/operators';\nimport { NgSeaService } from './ng-sea.service';\nimport { ChainDirective } from './chain.directive';\nimport { SEA } from 'gun';\nimport { of, from } from 'rxjs';\nimport { NgGunService } from './ng-gun.service';\n\n@Pipe({\n  name: 'verify',\n})\nexport class VerifyPipe extends AsyncPipe implements PipeTransform {\n  constructor(\n    private ngGun: NgGunService,\n    private sea: NgSeaService,\n    private ref: ChangeDetectorRef,\n    @Optional()\n    private chain: ChainDirective\n  ) {\n    super(ref);\n  }\n  transform(value: any, ...args: any[]) {\n    if (!this.chain.chain) {\n      return null;\n    }\n    return from(\n      SEA.verify(value, this.chain.chain?.recordPub.replace('~', ''))\n    ).pipe(\n      // tap((v) => console.log('verified', v)),\n      tap((v) => this.ref.detectChanges())\n    ) as any;\n    // ) as any;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgGunService } from './ng-gun.service';\nimport { IGunMesh } from './types/gun-mesh';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DamService {\n  mesh: IGunMesh = this.ngGun.gun.back('opt.mesh' as any) as any;\n  constructor(private ngGun: NgGunService) {}\n  disconnect(id: string) {\n    this.mesh.bye(id);\n  }\n  connect(endpoint: string) {\n    this.mesh.say({ dam: 'opt', opt: { peers: endpoint } });\n  }\n}\n","import { Component, OnInit, NgZone, Inject } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { NgSeaService } from '../../../../../ng-gun/src/lib/ng-sea.service';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { from } from 'rxjs';\nimport { SEA } from 'gun';\n\n@Component({\n  selector: 'app-create-certificate',\n  templateUrl: './create-certificate.component.html',\n  styleUrls: ['./create-certificate.component.scss'],\n})\nexport class CreateCertificateComponent implements OnInit {\n  form = this.fb.group({\n    paths: this.fb.array(['layers']),\n    public: true,\n    people: this.fb.array([]),\n    protected: false,\n    options: this.fb.group({\n      blacklist: ['blacklist', Validators.required],\n      expires: null,\n    }),\n  });\n\n  userCtl = this.fb.control(null);\n\n  userResults: any[] = [];\n\n  pathCtl = this.fb.control(null);\n  constructor(\n    private fb: FormBuilder,\n    private ngGun: NgGunService,\n    private sea: NgSeaService,\n    private chain: ChainDirective,\n    private ngZone: NgZone,\n    @Inject('gun-options')\n    private gunOpts: any\n  ) {\n    console.log(this.form.value);\n    this.form.statusChanges.subscribe((sc) => console.log('status', sc));\n    this.userCtl.valueChanges\n      .pipe(filter((alias) => alias !== null))\n      .subscribe((alias: string) => {\n        if (alias.startsWith('~')) {\n          return;\n        }\n        console.log('searching', alias);\n        this.ngGun.findAlias(alias).subscribe((found: any) => {\n          console.log('found', found);\n          if (found === undefined || found === null) {\n            this.userResults = [];\n            return;\n          }\n          // FIXME aliases are not guaranteed to be unique, and this may give a false match to the user\n          // FIXME warn the user that they should verify that the public key matches the expected public key for whomever they're inviting\n          const foundPub = Object.keys(found).find((k) => k !== '_');\n          this.userResults = [\n            {\n              alias,\n              pub: foundPub,\n            },\n          ];\n        });\n      });\n  }\n\n  ngOnInit(): void {}\n\n  addPath(path: any) {\n    const n = this.form.controls.paths.value;\n    n.push(path);\n    this.pathCtl.patchValue(null);\n  }\n  removePath(path: any) {\n    const p = this.form.controls.paths.value as string[];\n    const idx = p.indexOf(path);\n    if (idx >= 0) {\n      p.splice(idx, 1);\n    }\n  }\n\n  onSelectUser(event: MatAutocompleteSelectedEvent) {\n    const selectedValue = event.option.value;\n    console.log('selected', selectedValue);\n    this.userCtl.reset();\n    this.form.controls.people.value.push(selectedValue.replace('~', ''));\n  }\n\n  addUser() {}\n\n  removeUser(user: any) {\n    const p = this.form.controls.people.value as string[];\n    const idx = p.indexOf(user);\n    if (idx >= 0) {\n      p.splice(idx, 1);\n    }\n  }\n\n  create() {\n    console.log('creating certificate store');\n    const value = this.form.value;\n    const certificants = value.public ? ['*'] : value.people;\n    const isProtected = value.protected;\n    const blacklist = value.options.blacklist;\n    const expires = value.options.expires;\n    const opts = {\n      blacklist,\n      expires,\n    };\n    const r = this.chain.chain;\n    if (!r) {\n      return;\n    }\n    // FIXME if we aren't the owner, fail gracefully\n    r.get('owner')\n      .get(this.ngGun.auth().is.pub)\n      .once()\n      .pipe(\n        mergeMap((encPair) => from(SEA.decrypt(encPair, this.ngGun.auth().is)))\n      )\n      .subscribe((recordPair: any) => {\n        console.log('owns', recordPair.pub);\n        from(\n          // FIXME options not accounted for\n          // TODO improve this process\n          this.sea.getCertStore(\n            certificants,\n            value.paths,\n            recordPair,\n            isProtected,\n            opts\n          )\n        ).subscribe((certStores: any) => {\n          const detachedGun = new NgGunService(this.gunOpts, this.ngZone);\n          (detachedGun.gun.user() as any).auth(recordPair, async () => {\n            const v = detachedGun.gun.user();\n            const certs = v.get('certs');\n            certStores.forEach((store: any) => {\n              console.log('create store', store);\n              Object.keys(store).forEach((k) => {\n                const certPath = certs.get(k);\n                const certNew = store[k];\n                Object.keys(certNew).forEach((pub) => {\n                  console.log('insert cert at', k, pub, certNew[pub]);\n                  certPath.get(pub).put(certNew[pub] as never);\n                });\n                // console.log('create store key', k);\n                // certs.get(k).put(store[k] as never);\n              });\n              // certs.put(store as never);\n            });\n            // v.put(vector);\n            // this.vectorService.vectors.set(v as never);\n          });\n        });\n      });\n  }\n}\n","<mat-vertical-stepper>\n  <mat-step [label]=\"'Paths - ' + form.controls.paths.value.join(', ')\" [stepControl]=\"form.controls.paths\">\n    <mat-list>\n      <mat-list-item *ngFor=\"let path of form.controls.paths.value\">\n        <code>{{path}}</code>\n        <button mat-icon-button color=\"warn\" (click)=\"removePath(path)\">\n          <mat-icon>remove</mat-icon>\n        </button>\n      </mat-list-item>\n    </mat-list>\n    <div>\n      <mat-form-field>\n        <input matInput #pathName [formControl]=\"pathCtl\">\n        <mat-label>Path</mat-label>\n      </mat-form-field>\n      <button mat-icon-button matTooltip=\"Add a path\" (click)=\"addPath(pathName.value)\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n  </mat-step>\n\n  <mat-step label=\"People\" [stepControl]=\"form\" [formGroup]=\"form\">\n    <mat-radio-group [formControl]=\"form.controls.public\">\n      <mat-radio-button [value]=\"true\" matTooltip=\"Apply this certificate to everyone\">Everyone</mat-radio-button>\n      <mat-radio-button [value]=\"false\" matTooltip=\"Apply this certificate to specific people\">\n        Specific People\n      </mat-radio-button>\n    </mat-radio-group>\n    <ng-container *ngIf=\"!form.controls.public.value\">\n\n      <mat-list>\n        <mat-list-item *ngFor=\"let pub of form.controls.people.value\">\n          {{pub|alias|async}}\n          <!-- <code>{{pub}}</code> -->\n\n          <button mat-icon-button matTooltip=\"Add a path\" (click)=\"removeUser(pub)\">\n            <mat-icon>remove</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n      <div>\n        <mat-form-field>\n          <input [formControl]=\"userCtl\" matInput [matAutocomplete]=\"userAutocomplete\">\n          <mat-label>User</mat-label>\n        </mat-form-field>\n        <mat-autocomplete #userAutocomplete (optionSelected)=\"onSelectUser($event)\">\n          <mat-option *ngFor=\"let result of userResults\" [value]=\"result.pub\">\n            Add {{result.alias}} ({{result.pub}})\n          </mat-option>\n        </mat-autocomplete>\n        <button mat-icon-button matTooltip=\"Add a path\" (click)=\"addUser()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </ng-container>\n  </mat-step>\n\n  <mat-step label=\"Permissions\">\n    <mat-radio-group [formControl]='form.controls.protected'>\n      <mat-radio-button [value]=\"false\" matTooltip=\"Users have full control over this path\">Full</mat-radio-button>\n      <mat-radio-button [value]=\"true\" matTooltip=\"Users may add/remove records containing their public key\">Protected\n      </mat-radio-button>\n    </mat-radio-group>\n  </mat-step>\n\n  <mat-step label=\"Options\" [formGroup]=\"form.controls.options\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"expire\" formControlName=\"expires\">\n      <mat-label>Certificate expires</mat-label>\n      <mat-datepicker #expire></mat-datepicker>\n      <mat-datepicker-toggle [for]=\"expire\" matSuffix></mat-datepicker-toggle>\n    </mat-form-field>\n\n    <div></div>\n    <mat-form-field>\n      <input matInput formControlName=\"blacklist\">\n      <mat-label>Blacklist path</mat-label>\n    </mat-form-field>\n  </mat-step>\n\n  <mat-step label=\"Confirm\">\n    <div class=\"mat-error\">\n      <b>WARNING: Verify all choices before creating the certificate.</b>\n      While certificates may be <i>removed</i> after creation, any user who has obtained a copy of the certificate may\n      still use it to modify data.<br>\n      If this is a PUBLIC certificate this can be dangerous!\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"create()\">Create Certificate</button>\n  </mat-step>\n</mat-vertical-stepper>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss'],\n})\nexport class ConfirmComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmComponent>,\n\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {}\n\n  select(value: any) {\n    this.dialogRef.close(value);\n  }\n}\n","<h1 mat-dialog-title>Confirm</h1>\n<div mat-dialog-content>\n  Are you sure you want to?\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"select(false)\">No</button>\n  <button mat-button (click)=\"select(true)\">Yes</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GunAuthGuard } from '../../../ng-gun/src/lib/gun-auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AboutComponent } from './components/about/about.component';\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    loadChildren: () => import('./user/user.module').then((m) => m.UserModule),\n    canActivateChild: [GunAuthGuard],\n  },\n  {\n    path: 'posts',\n    loadChildren: () =>\n      import('./user/posts/posts.module').then((m) => m.PostsModule),\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n  },\n  {\n    path: '',\n    component: WelcomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, Inject, Input } from '@angular/core';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GunPeers } from '../../../../../ng-gun/src/lib/GunPeers';\nimport { distinct } from 'rxjs/operators';\nimport { DamService } from '../../../../../ng-gun/src/lib/dam.service';\n\n@Component({\n  selector: 'app-gun-peers',\n  templateUrl: './gun-peers.component.html',\n  styleUrls: ['./gun-peers.component.scss'],\n})\nexport class GunPeersComponent {\n  peers = this.data.ngGun.peers as GunPeers;\n  constructor(\n    public ngGun: NgGunService,\n    public dialogRef: MatDialogRef<GunPeersComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public damService: DamService\n  ) {}\n\n  logGun() {\n    console.log(this.data.ngGun);\n  }\n\n  disconnect(id: string) {\n    this.damService.disconnect(id);\n  }\n}\n","<h1>Peers</h1>\n<div gdColumns=\"max-content max-content auto repeat(3, max-content)\" gdGap=\"1em\" gdAlignRows=\"stretch\">\n  <h2>id</h2>\n  <h2>state</h2>\n  <h2>last</h2>\n  <h2>queue</h2>\n  <h2>tail</h2>\n  <h2>disconnect</h2>\n  <ng-container *ngFor=\"let peer of peers|keyvalue\">\n    <div>{{peer.key}}</div>\n    <div>{{peer.value.wire?.readyState}}</div>\n    <div>{{peer.value.last}}</div>\n    <div>{{peer.value.queue?.length}}</div>\n    <div>{{peer.value.tail}}</div>\n    <button (click)=\"disconnect(peer.key)\">disconnect</button>\n  </ng-container>\n</div>\n<button mat-button (click)=\"logGun()\">console.log gun</button>\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunConstructorOptions } from 'gun/types/options';\nimport { GunChain } from './classes/GunChain';\nimport { GunPeers } from './GunPeers';\nexport const GunOptions = 'gun-options';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgGunService<\n  DataType = Record<string, any>,\n  ReferenceKey = any\n> extends GunChain<DataType, ReferenceKey, 'pre_root'> {\n  get peers(): GunPeers {\n    return this.gun._.root.opt.peers;\n  }\n\n  constructor(\n    @Inject(GunOptions)\n    public readonly gunOptions: IGunConstructorOptions,\n    ngZone: NgZone\n  ) {\n    super(\n      ngZone,\n      new Gun(JSON.parse(JSON.stringify(gunOptions))) as any,\n      null as any\n    );\n  }\n\n  findAlias(alias: string) {\n    return this.get(`~@${alias}` as any).once();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, take, tap, timeout } from 'rxjs/operators';\nimport { NgGunService } from './ng-gun.service';\nimport { Router } from '@angular/router';\nimport { LogService } from '../../../log/src/lib/log.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GunAuthGuard implements CanActivateChild {\n  constructor(\n    private ngGun: NgGunService,\n    private router: Router,\n    private logger: LogService\n  ) {}\n  sessionOrRedirect() {}\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    // console.log('gunAuthGuard checking...');\n    if (this.ngGun.auth().is) {\n      // console.log('OK: auth().is');\n      // this.logger.log('gun-auth guard OK');\n      return true;\n    }\n    // this.ngGun.auth().recall();\n    return this.ngGun.auth().auth$.pipe(\n      timeout(5000),\n      catchError((err, caught) => {\n        this.router.navigateByUrl('/login');\n        return of({\n          err: 'Session Recall Timeout',\n        });\n      }),\n      // tap((ack) => console.log('gunAuthGuard auth$', ack)),\n      filter((ack) => !ack.err),\n      take(1)\n    );\n  }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-alias-autocomplete',\n  templateUrl: './alias-autocomplete.component.html',\n  styleUrls: ['./alias-autocomplete.component.scss'],\n})\nexport class AliasAutocompleteComponent implements OnInit {\n  userResults: any[] = [];\n  aliasCtl = this.fb.control(null);\n  @Output()\n  select$ = new EventEmitter<string>();\n\n  constructor(private fb: FormBuilder, private ngGun: NgGunService) {\n    this.aliasCtl.valueChanges\n      .pipe(filter((alias) => alias !== null))\n      .subscribe((alias) => {\n        if (alias.startsWith('~')) {\n          return;\n        }\n        console.log('searching', alias);\n        this.ngGun.findAlias(alias).subscribe((found: any) => {\n          console.log('found', found);\n          if (found === undefined || found === null) {\n            this.userResults = [];\n            return;\n          }\n          // FIXME aliases are not guaranteed to be unique, and this may give a false match to the user\n          // FIXME warn the user that they should verify that the public key matches the expected public key for whomever they're inviting\n          const foundPub = Object.keys(found).find((k) => k !== '_');\n          this.userResults = [\n            {\n              alias,\n              pub: foundPub,\n            },\n          ];\n        });\n      });\n  }\n\n  ngOnInit(): void {}\n\n  onSelectUser(event: any) {\n    const selectedValue = event.option.value;\n    console.log('selected', selectedValue);\n    // this.form.controls.people.value.push(selectedValue.replace('~', ''));\n    this.select$.emit(selectedValue.replace(/~/g, ''));\n    this.aliasCtl.reset();\n    this.userResults = [];\n  }\n}\n","<mat-form-field>\n  <input matInput [matAutocomplete]=\"userAutocomplete\" [formControl]=\"aliasCtl\">\n  <mat-label>Enter an alias:</mat-label>\n</mat-form-field>\n\n<mat-autocomplete #userAutocomplete (optionSelected)=\"onSelectUser($event)\">\n  <mat-option *ngFor=\"let result of userResults\" [value]=\"result.pub\" [matTooltip]=\"result.pub\">\n    {{result.alias}} ({{result.pub}})\n  </mat-option>\n</mat-autocomplete>\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n})\nexport class LogModule {}\n","import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { NgGunService } from './ng-gun.service';\nimport { map, take, shareReplay } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Pipe({\n  name: 'alias',\n})\nexport class AliasPipe extends AsyncPipe implements PipeTransform {\n  constructor(private ngGun: NgGunService, _ref: ChangeDetectorRef) {\n    super(_ref);\n  }\n  transform(value: any, ...args: any[]): any {\n    if (value === '*') {\n      return of(value);\n    }\n    return this.ngGun\n      .get(`~${value.replace('~', '')}`)\n      .on()\n      .pipe(\n        map((v: any) => v.alias || value),\n        shareReplay(1)\n      );\n  }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"version\": \"0.0.1\"\n};\n/* tslint:enable */\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-gun',\n  template: `\n    <p>\n      ng-gun works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgGunComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunStaticSEA } from 'gun/types/static/sea';\nimport { from } from 'rxjs';\nimport { Certificants, CertificatePolicy } from './classes/Certificate';\nimport { mergeAll, mergeMap } from 'rxjs/operators';\n\nexport interface CertificateOptions {\n  epiry?: number;\n  blacklist?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSeaService {\n  SEA: IGunStaticSEA & {\n    certify: (\n      certificants: any,\n      policies: any,\n      authority: any,\n      cb?: any,\n      opt?: any\n    ) => Promise<any>;\n  } = Gun.SEA as any;\n  constructor() {}\n\n  certify(\n    certificants: Certificants,\n    policies: CertificatePolicy | CertificatePolicy[],\n    authority: any,\n    options?: CertificateOptions\n  ) {\n    return from(\n      this.SEA.certify(certificants, policies, authority, null, options)\n    );\n  }\n\n  certifySelf(pair: any) {\n    return from(this.SEA.certify(pair, '*', pair));\n  }\n\n  pair() {\n    return from(this.SEA.pair(() => {}));\n  }\n\n  async getCertStore(\n    certificant: any,\n    paths: string[],\n    auth: any,\n    isProtected = false,\n    opts: any = null\n  ) {\n    console.log('certifying', certificant);\n    if (Array.isArray(certificant)) {\n      const certificantsPromises: any = certificant.map(\n        async (c) => await this.getCertStore(c, paths, auth, isProtected, opts)\n      );\n      const certificants: any[] = await Promise.all(certificantsPromises);\n      console.log('certificants', certificants);\n      return certificants;\n    }\n    if (typeof certificant !== 'string') {\n      if (typeof certificant !== 'object') {\n        throw new Error('cannot certify provided certificant');\n      } else if (!certificant.pub) {\n        throw new Error('cannot certify provided certificant');\n      }\n    }\n    const store = {} as any;\n    const certPromises = paths.map(async (path: string) => {\n      const policy = { '*': path } as any;\n      if (isProtected) {\n        policy['+'] = '*';\n      }\n      const cert = await this.certify(\n        certificant,\n        policy,\n        auth,\n        opts\n      ).toPromise();\n      store[path] = {} as any;\n      store[path][certificant.pub || certificant] = cert;\n    });\n    await Promise.all(certPromises);\n    // console.log('certified', store);\n    return store;\n  }\n}\n","<a *ngIf=\"!user.is\" routerLink=\"/login\">Log In</a>\n<ng-container *ngIf=\"user.is\">\n  {{ data?.alias }}\n  <a mat-button (click)=\"user.logout()\">Log Out</a>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { NgGunService } from '../../../../ng-gun/src/lib/ng-gun.service';\nimport { User } from '../user/model';\n\n@Component({\n  selector: 'app-session-info',\n  templateUrl: './session-info.component.html',\n  styleUrls: ['./session-info.component.scss'],\n})\nexport class SessionInfoComponent implements OnInit {\n  user = this.ngGun.auth();\n  data: any;\n  constructor(private ngGun: NgGunService<User>) {\n    this.user.once().subscribe((u) => {\n      console.log('user', u);\n      this.data = u;\n    });\n    this.user.auth$.subscribe((event) => this.onAuthEvent(event));\n    // this.user\n    //   .get('alias' as never)\n    //   .once()\n    //   .subscribe((alias) => console.log('alias', alias));\n  }\n\n  ngOnInit(): void {}\n\n  onAuthEvent(event: any) {\n    console.log('auth event', event);\n    this.data = event.put;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgGunService } from '../../../ng-gun/src/lib/ng-gun.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GunPeer } from 'projects/ng-gun/src/public-api';\nimport { take, shareReplay, map, mapTo, filter } from 'rxjs/operators';\nimport { BugReportComponent } from './components/bug-report/bug-report.component';\nimport { LogMessage, LogService } from '../../../log/src/lib/log.service';\nimport { timer } from 'rxjs';\nimport { CAPABILITIES } from './system.service';\nimport { DamService } from '../../../ng-gun/src/lib/dam.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DiagnosticsService {\n  messages: LogMessage[] = [];\n  constructor(\n    private ngGun: NgGunService,\n    private dialog: MatDialog,\n    private logger: LogService,\n    private dam: DamService\n  ) {\n    LogService.buffer$.subscribe((buff: LogMessage[]) => {\n      // console.log('got message', buff);\n      this.messages = buff;\n    });\n    this.disconnectedPeers$\n      .pipe(filter((peers) => peers.length > 0))\n      .subscribe((peers) => {\n        this.logger.log('attempting to reconnect peers', peers);\n        peers.forEach((peer) => this.dam.connect(peer));\n        this.ngGun.auth().get('inbox').once().subscribe();\n      });\n    this.logger.log('capabilities', CAPABILITIES);\n  }\n\n  configuredPeers = Array.isArray(this.ngGun.gunOptions.peers)\n    ? ((this.ngGun.gunOptions.peers as unknown) as string[])\n    : Object.keys(this.ngGun.gunOptions.peers as any);\n\n  get peers() {\n    const peers = Object.keys(this.ngGun.peers).map((k) => {\n      const rawPeer = this.ngGun.peers[k] as GunPeer;\n\n      const x = {\n        ...rawPeer,\n        wire:\n          rawPeer.wire === undefined\n            ? undefined\n            : {\n                readyState: rawPeer.wire.readyState,\n                protocol: rawPeer.wire.protocol,\n                extensions: rawPeer.wire.extensions,\n                bufferedAmount: rawPeer.wire.bufferedAmount,\n              },\n      };\n      return x;\n    });\n    return peers;\n  }\n\n  disconnectedPeers$ = timer(1000 * 5, 1000 * 5).pipe(\n    map(() => this.disconnectedPeers),\n    shareReplay(1)\n  );\n\n  get missingPeers() {\n    return this.configuredPeers.filter(\n      (url) => !this.peers.find((p) => p.url === url)\n    );\n  }\n\n  get disconnectedPeers() {\n    const errorPeers = this.peers\n      .filter((peer) => peer.wire?.readyState === 0)\n      .map((p) => p.url);\n    return [...errorPeers, ...this.missingPeers];\n  }\n\n  bugReport() {\n    // LogService.buffer$.pipe(take(1)).subscribe((messages) => {\n    this.dialog.open(BugReportComponent, {\n      data: {\n        messages: this.messages,\n        gun: this.ngGun.gun,\n        peers: this.peers,\n      },\n      width: '80%',\n      height: '80%',\n    });\n    // });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// console.clear();\n\n// if (environment.production) {\nenableProdMode();\n// }\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Inject, Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport {\n  AlwaysDisallowedType,\n  ArrayAsRecord,\n  ArrayOf,\n  DisallowArray,\n  DisallowPrimitives,\n} from 'gun/types/types';\nimport {\n  from,\n  fromEventPattern,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n  throwError,\n} from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  filter,\n  map,\n  mergeAll,\n  mergeMap,\n  retryWhen,\n  scan,\n  shareReplay,\n  take,\n  tap,\n  timeout,\n} from 'rxjs/operators';\nimport { gunChainArray, gunPath } from '../functions/gun-utils';\nimport { GunRuntimeOpts } from '../GunRuntimeOpts';\nimport { ICertStore } from './ICertStore';\nimport { LexicalQuery } from './LexicalQuery';\nimport { SEA } from 'gun';\nimport { LogService } from '../../../../log/src/lib/log.service';\nimport { pluck } from 'rxjs/operators';\n\nexport const GUN_NODE = Symbol('GUN_NODE');\n\nexport interface GunChainCallbackOptions {\n  includeKeys?: boolean;\n  includeNulls?: boolean;\n  changes?: boolean;\n  bypassZone?: boolean;\n}\n\nexport interface GunChainFunctions {\n  secret: (value: any) => IGunChainReference;\n  grant: (value: any) => IGunChainReference;\n}\n\nexport interface GunChainMeta {\n  _: {\n    root: {\n      opt: GunRuntimeOpts;\n    };\n  } & any;\n}\n\n@Injectable()\nexport class GunChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop extends 'pre_root' | 'root' | false = false\n> {\n  path!: string[];\n  isNested = false;\n  isSubRoot = false;\n  logger = LogService.getLogger('gun-chain');\n  recordPub!: any;\n  record?: any;\n\n  private _gun!: IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta;\n  public get gun(): IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta {\n    return this._gun;\n  }\n  public set gun(\n    value: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta\n  ) {\n    this._gun = value;\n    const myKey = (value as any)._.get;\n\n    const path = gunPath(value as any);\n    const chainArray = gunChainArray(value as any);\n    this.path = path;\n\n    const userPair = (this.gun.user() as any).is;\n    if (!userPair) {\n      // TODO figure out how to handle this case\n\n      return;\n    }\n    const userPub = `~${(this.gun.user() as any).is?.pub}`;\n    const pubs = path.filter((key) => key.startsWith('~'));\n    if (pubs.length > 0) {\n      this.recordPub = pubs[0];\n      const firstPub = path.findIndex((k) => k.startsWith('~'));\n      this.record = chainArray[firstPub];\n\n      if (this.recordPub.indexOf(userPub) < 0) {\n        this.isNested = true;\n        const pathFromRecord = [...path];\n        const keyInRecord = pathFromRecord[0];\n        // this.logger.log(myKey, 'foreign key', keyInRecord, path.join(' > '));\n        const recordPath = pathFromRecord.splice(firstPub).reverse();\n        pathFromRecord.reverse();\n\n        if (myKey === this.recordPub) {\n          this.isSubRoot = true;\n          this.record?.get('certs').open((certs: any) => {\n            this.certificates = certs;\n          });\n        } else {\n          const pathCerts$ = this.closestRoot.certificates$.pipe(\n            pluck(keyInRecord),\n            filter((pathStore) => pathStore !== null && pathStore !== undefined)\n          );\n          pathCerts$\n            .pipe(\n              pluck(userPair.pub),\n              filter((c) => c !== null && c !== undefined),\n              take(1)\n            )\n            .subscribe((store: any) => {\n              // this.logger.log('user certificate', store);\n              this.certificate = store;\n            });\n          pathCerts$\n            .pipe(\n              pluck('*'),\n              filter((c) => c !== null && c !== undefined),\n              take(1)\n            )\n            .subscribe((store: any) => {\n              // this.logger.log('public certificate', store);\n              this.certificate = this.certificate || store;\n            });\n        }\n      }\n    }\n  }\n\n  public get canEdit(): boolean {\n    return this.certificate !== null && this.certificate !== undefined;\n  }\n\n  private _closestRoot: any;\n  get closestRoot(): GunChain {\n    if (this._closestRoot) {\n      return this._closestRoot;\n    }\n    let c: any = this;\n    do {\n      if (c.isSubRoot) {\n        break;\n      }\n      c = c.back;\n    } while (c !== null);\n    this._closestRoot = c;\n    return c;\n  }\n\n  constructor(\n    protected ngZone: NgZone,\n    @Optional()\n    @Inject(GUN_NODE)\n    gun: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta,\n    @Optional()\n    @SkipSelf()\n    protected back: GunChain<any>\n  ) {\n    if (!gun) {\n      this.gun = new Gun() as any;\n    } else {\n      this.gun = gun;\n    }\n  }\n\n  certificate?: string = this.back?.certificate;\n  certificate$ = new ReplaySubject<string>(1);\n\n  certificates$ = new ReplaySubject<ICertStore>(1);\n  private _certificates: ICertStore = {};\n  public get certificates(): ICertStore {\n    if (!this.isSubRoot && this.closestRoot?.certificates) {\n      return this.closestRoot.certificates;\n    }\n    return this._certificates;\n  }\n  public set certificates(value: ICertStore) {\n    if (value !== this._certificates) {\n      this._certificates = value;\n      this.certificates$.next(value);\n    }\n  }\n  private sources = new Map<string, Observable<any>>();\n  private _auth: GunAuthChain<DataType, ReferenceKey> | null = null;\n\n  from<T>(gun: IGunChainReference<T>): GunChain<T> {\n    return new GunChain<T>(this.ngZone, gun as any, this);\n  }\n\n  get<K extends keyof DataType>(\n    key: ArrayOf<DataType> extends never ? K : ArrayOf<DataType>\n  ) {\n    const soul: ArrayOf<DataType> extends never\n      ? K\n      : ArrayOf<DataType> = this.getSoul(key);\n    return this.from(this.gun.get(soul));\n  }\n\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate = this.certificate\n  ) {\n    // FIXME \"unverified data\" - certified put values must be signed?\n\n    if (this.isNested && !certificate) {\n      this.logger.warn('NO CERTIFICATE FOUND FOR FOREIGN RECORD!');\n    }\n    (this.gun.put as any)(\n      data,\n      (...putAck: any[]) => {\n        if (putAck[0].err) {\n          this.logger.error('putAck', putAck);\n        }\n      },\n      certificate ? { opt: { cert: certificate } } : undefined\n    );\n    return this;\n  }\n\n  set(\n    data: AlwaysDisallowedType<\n      DataType extends Array<infer U>\n        ? U extends {\n            [key: string]: any;\n            [key: number]: any;\n          }\n          ? ArrayOf<DataType>\n          : never\n        : never\n    >,\n    certificate = this.certificate\n  ) {\n    return this.from(\n      this.gun.set(\n        data,\n        null,\n        certificate\n          ? {\n              opt: {\n                cert: certificate,\n              },\n            }\n          : undefined\n      )\n    );\n  }\n\n  unset(data: ArrayOf<DataType>) {\n    if (this.gun.unset) {\n      return this.from(this.gun.unset(data));\n    } else {\n      throw new Error('CANNOT FIND Gun.chain.unset!');\n    }\n  }\n\n  query(query: LexicalQuery): GunChain<DataType, ReferenceKey, IsTop> {\n    return this.from(this.gun.get(query as any)) as any;\n  }\n\n  load() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).load((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n  open() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).open((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(debounceTime(25));\n  }\n\n  map(options?: GunChainCallbackOptions) {\n    return this.from(this.gun.map());\n  }\n\n  reduce(options?: GunChainCallbackOptions) {\n    const base = this.from(this.gun.map());\n\n    return base.on({ includeKeys: true }).pipe(\n      scan((acc: any, val: any) => {\n        if (val[0] === null || undefined === val[0]) {\n          delete acc[val[1]];\n        } else {\n          acc[val[1]] = val[0];\n        }\n        return acc;\n      }, {} as DataType[]),\n      map((v) =>\n        options?.includeNulls\n          ? v\n          : Object.values(v).filter((ov) => ov !== undefined)\n      ),\n      debounceTime(100)\n    );\n  }\n\n  not() {\n    return fromEventPattern((handler) => {\n      const signal = { stopped: false };\n      if (this.gun.not) {\n        this.gun.not((key: ReferenceKey) => {\n          handler(key);\n        });\n      }\n    });\n  }\n\n  on(\n    options?: GunChainCallbackOptions\n  ): Observable<AlwaysDisallowedType<ArrayAsRecord<DataType>>> {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.on(\n          (\n            data: AlwaysDisallowedType<ArrayAsRecord<DataType>>,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (signal.stopped) {\n              return ev.off();\n            }\n            const dispatchHandler = () => {\n              if (options?.includeKeys) {\n                handler(data, key);\n              } else {\n                handler(data);\n              }\n            };\n            // FIXME: ngZone.run() causes infinite recursion\n            if (options?.bypassZone) {\n              dispatchHandler();\n            } else {\n              this.ngZone.run(dispatchHandler);\n            }\n          },\n          options as any\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    );\n  }\n\n  once() {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.once(\n          (\n            data:\n              | AlwaysDisallowedType<ArrayAsRecord<DataType>>\n              | DisallowPrimitives<\n                  IsTop,\n                  AlwaysDisallowedType<ArrayAsRecord<DataType>>\n                >\n              | undefined,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (ev && signal.stopped) {\n              return ev.off();\n            }\n            this.ngZone.run(() => {\n              handler(data);\n            });\n          }\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n\n  auth() {\n    if (!this._auth) {\n      this._auth = new GunAuthChain<DataType, ReferenceKey>(\n        this.ngZone,\n        //// no fix for this... gun.user.is is static! can't have multiple logins on a single gun instance\n        // TODO allow option to create a new gun instance for this auth call\n        this.gun.user().recall({ sessionStorage: true }) as any,\n        this as any,\n        this as any\n      );\n    }\n    return this._auth;\n  }\n\n  user(pubKey?: string) {\n    return this.from(this.gun.user(pubKey?.replace(/^~/, '')));\n  }\n\n  onEvent(event: string, node = this.gun): Observable<any> {\n    if (!this.sources.has(event)) {\n      const source = fromEventPattern((handler) => {\n        // this.logger.log('add handler');\n        (node as any).on(event, (...args: any) => {\n          this.ngZone.run(() => {\n            handler(...args);\n          });\n        });\n      }).pipe(shareReplay(1));\n      this.sources.set(event, source);\n    }\n    return this.sources.get(event) as Observable<any>;\n  }\n\n  protected getSoul(key: any) {\n    return typeof key === 'object' && Gun.node.is(key)\n      ? (Gun.node.soul(key) as any)\n      : key;\n  }\n}\n\n/** Represents a top-level authenticated node (user or key pair) */\nexport class GunAuthChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop = false\n> extends GunChain<DataType, ReferenceKey, false> {\n  logger = LogService.getLogger('gun-auth-chain');\n  private _is: any;\n  set is(value: any) {\n    this._is = value;\n\n    if (value) {\n      this.root\n        .get(`~${value.pub}`)\n        .get('alias')\n        .once()\n        .subscribe((alias: any) => {\n          this.alias = this.gun._.root.user?._?.put?.alias;\n        });\n    }\n  }\n  get is() {\n    return this._is;\n  }\n  alias!: string;\n  auth$ = this.root.onEvent('auth').pipe(\n    tap((ack) => {\n      if (!ack.err) {\n        this.is = ack.put;\n      }\n    }),\n    shareReplay(1)\n  );\n\n  constructor(\n    ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    gun: IGunChainReference<DataType, ReferenceKey, false> &\n      Partial<GunChainFunctions> &\n      Partial<GunChainMeta>,\n    @Optional() @SkipSelf() public root: GunChain,\n    @Optional() @SkipSelf() back: GunChain\n  ) {\n    super(ngZone, gun as any, back);\n    this.is = (gun as any).is;\n  }\n\n  login(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => !ack.err),\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n\n    const login$ = fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.auth(alias, pass, (ack: any) => {\n          this.ngZone.run(() => {\n            handler(ack);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(\n      mergeMap((ack: any) => (ack.wait ? throwError(new Error(ack)) : of(ack))),\n      retryWhen((errors) => errors.pipe(delay(1000), take(10)))\n    );\n    const loginOrAuth$ = from([auth$, login$]).pipe(mergeAll(), take(1));\n    return loginOrAuth$;\n  }\n\n  create(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n    this.gun.create(alias, pass);\n    return auth$;\n  }\n\n  secret(value: any) {\n    if (this.gun.secret) {\n      return this.from(this.gun.secret(value));\n    }\n    throw new Error('GUN.chain.secret NOT FOUND');\n  }\n\n  from<T>(gun: IGunChainReference<T>) {\n    return new GunAuthChain<T>(this.ngZone, gun, this.root, this as any);\n  }\n\n  recall() {\n    this.gun.recall({ sessionStorage: true });\n    return this.auth$.pipe(timeout(5000));\n  }\n\n  logout() {\n    this.gun.leave();\n  }\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate = this.certificate\n  ) {\n    // SEA.sign(data, this.is.alias);\n    super.put(data, certificate);\n    return this;\n  }\n}\n\n/** Represents a node nested under a user/pair\n * gun.user() : AuthChain\n * gun.user(pub) : UserChain\n * gun.get('~@alias') : GunChain<{pub: string}>\n */\nexport class GunCertChain extends GunChain {}\n","import { Directive, Inject, Optional, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgGunService } from './ng-gun.service';\nimport { map, switchMap, shareReplay } from 'rxjs/operators';\nimport * as Gun from 'gun';\nimport { Observable } from 'rxjs';\nimport { ChainDirective } from './chain.directive';\n\n@Directive({\n  selector: '[libRouteGun]',\n})\nexport class RouteChainDirective<T = any> extends ChainDirective<T> {\n  @Output()\n  chain$ = this.route.data.pipe(\n    map((data) => {\n      const d = data[this.dataKey];\n      const soul = Gun.node.soul(d);\n      // console.log('route data', this.dataKey);\n      return this.ngGun.auth().root.get(soul);\n    }),\n    shareReplay(1)\n  );\n  @Output()\n  data$: Observable<T> = this.chain$.pipe(\n    switchMap((chain) => chain.once() as Observable<T>)\n  );\n  constructor(\n    private route: ActivatedRoute,\n    ngGun: NgGunService,\n    @Optional()\n    @Inject('gun-route-data-key')\n    private dataKey: string = 'chain'\n  ) {\n    super(ngGun);\n    this.data$.subscribe((data) => console.log({ data }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class FormsUiModule { }\n","import { NgModule } from '@angular/core';\nimport { AliasPipe } from './alias.pipe';\nimport { ChainDirective } from './chain.directive';\nimport { NgGunComponent } from './ng-gun.component';\nimport { SoulPipe } from './soul.pipe';\nimport { UpdatedPipe } from './updated.pipe';\nimport { VerifyPipe } from './verify.pipe';\nimport { RouteChainDirective } from './route-chain.directive';\nimport { GunMapDirective } from './gun-map.directive';\nimport { LogModule } from '../../../log/src/lib/log.module';\n\n@NgModule({\n  imports: [LogModule],\n  declarations: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n    RouteChainDirective,\n    GunMapDirective,\n  ],\n  exports: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n    RouteChainDirective,\n    GunMapDirective,\n  ],\n  providers: [{ provide: 'gun-route-data-key', useValue: 'chain' }],\n})\nexport class NgGunModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'updated',\n})\nexport class UpdatedPipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): unknown {\n    const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n    if (!updates) {\n      return null;\n    }\n    return Object.values(updates).reduce(\n      (latest: any, time: any) => (time > latest ? time : latest),\n      0\n    );\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CertificateFormComponent } from '../certificate-form/certificate-form.component';\nimport { ChainDirective } from '../../../../../ng-gun/src/lib/chain.directive';\nimport { NgGunService } from '../../../../../ng-gun/src/lib/ng-gun.service';\n\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss'],\n})\nexport class CertificatesComponent implements OnInit {\n  constructor(\n    private dialog: MatDialog,\n    private chainDirective: ChainDirective,\n    ngGun: NgGunService\n  ) {\n    // super(ngGun);\n  }\n\n  ngOnInit(): void {}\n\n  createCertificate() {\n    this.dialog.open(CertificateFormComponent, { height: '90%', width: '90%' });\n  }\n}\n","<p>certificates works!</p>\n<button mat-button (click)=\"createCertificate()\">Create</button>\n"],"sourceRoot":"webpack:///"}