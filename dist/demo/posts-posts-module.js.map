{"version":3,"sources":["./projects/demo/src/app/user/posts/posts-routing.module.ts","./projects/demo/src/app/user/posts/edit-post/edit-post.component.ts","./projects/demo/src/app/user/posts/edit-post/edit-post.component.html","./projects/demo/src/app/user/posts/route-post.directive.ts","./projects/demo/src/app/user/posts/posts.component.ts","./projects/demo/src/app/user/posts/posts.component.html","./projects/demo/src/app/user/posts/view-post/view-post.component.ts","./projects/demo/src/app/user/posts/view-post/view-post.component.html","./projects/demo/src/app/user/posts/post.service.ts","./projects/demo/src/app/user/posts/posts.module.ts","./projects/demo/src/app/user/posts/post.resolver.ts","./projects/demo/src/app/user/posts/post/post.component.ts","./projects/demo/src/app/user/posts/post/post.component.html"],"names":[],"mappings":"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","file":"posts-posts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostsComponent } from './posts.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostResolver } from './post.resolver';\nimport { ViewPostComponent } from './view-post/view-post.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostsComponent,\n    // children: [\n    //   {\n    //     path: ':soul',\n    //     component: ViewPostComponent,\n    //     resolve: {\n    //       soul: PostResolver,\n    //     },\n    //   },\n    //   {\n    //     path: ':soul/edit',\n    //     component: EditPostComponent,\n    //     resolve: {\n    //       soul: PostResolver,\n    //     },\n    //   },\n    // ],\n  },\n  {\n    path: ':soul',\n    component: ViewPostComponent,\n    resolve: {\n      soul: PostResolver,\n    },\n  },\n  {\n    path: ':soul/edit',\n    component: EditPostComponent,\n    resolve: {\n      soul: PostResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { RoutePostDirective } from '../route-post.directive';\nimport { PostService } from '../post.service';\n\n@Component({\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss'],\n})\nexport class EditPostComponent extends RoutePostDirective implements OnInit {\n  postForm = this.fb.group({\n    title: [null, Validators.required],\n    body: [null, Validators.required],\n  });\n\n  constructor(\n    postService: PostService,\n    route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n    super(postService, route);\n    this.post$.subscribe((m) => {\n      this.postForm.patchValue(m, { onlySelf: true, emitEvent: false });\n    });\n    this.postForm.valueChanges.subscribe((vc) => {\n      this.post$.pipe(take(1)).subscribe((m) => {\n        this.postService.posts.get(m).put(vc);\n      });\n    });\n  }\n  ngOnInit(): void {}\n}\n","<form [formGroup]=\"postForm\">\n  <input name=\"Title\" type=\"text\" formControlName=\"title\">\n  <textarea formControlName=\"body\"></textarea>\n</form>\n","import { Directive } from '@angular/core';\nimport { PostService } from './post.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Directive({\n  selector: '[appRoutePost]',\n})\nexport class RoutePostDirective {\n  post$: Observable<any> = this.route.data.pipe(\n    switchMap((data) => this.postService.posts.get(data.soul).on())\n  );\n  constructor(\n    protected postService: PostService,\n    private route: ActivatedRoute\n  ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostService } from './post.service';\nimport * as Gun from 'gun';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss'],\n})\nexport class PostsComponent implements OnInit {\n  posts = this.postService.posts\n    .reduce()\n    .pipe(\n      map((posts: any) =>\n        posts.sort((a: any, b: any) => a._['>'].title - b._['>'].title)\n      )\n    );\n  constructor(private postService: PostService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  create() {\n    this.postService.posts\n      .set({\n        title: 'untitled',\n        body: '# Untitled\\n',\n      })\n      .once()\n      .subscribe((post: any) => {\n        console.log('added post', post);\n        this.router.navigate([\n          '/user/posts',\n          Gun.node.soul(post as any),\n          'edit',\n        ]);\n      });\n  }\n}\n","<nav>\n  <h3>Posts</h3>\n  <button (click)=\"create()\">New Post</button>\n</nav>\n<div id=\"Posts\" class=\"list\">\n  <ng-container *ngFor=\"let post of posts|async\">\n    <input type=\"checkbox\">\n    <a [routerLink]=\"['/user/posts', post._['#']]\">{{post.title}}</a>\n    <div>{{post._['>'].title | date:\"YYYY-MM-dd HH:mm:ss\"}}</div>\n    <div>\n      <button [routerLink]=\"['/user/posts', post._['#'], 'edit']\">Edit</button>\n      <button>Remove</button>\n    </div>\n  </ng-container>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { RoutePostDirective } from '../route-post.directive';\n\n@Component({\n  templateUrl: './view-post.component.html',\n  styleUrls: ['./view-post.component.scss'],\n})\nexport class ViewPostComponent extends RoutePostDirective implements OnInit {\n  ngOnInit(): void {}\n}\n","<p>view-post works!</p>\n<div>\n  {{post$|async|json}}\n</div>\n","import { Injectable } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  posts = this.userService.user.get('posts');\n  constructor(private userService: UserService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PostsRoutingModule } from './posts-routing.module';\nimport { PostsComponent } from './posts.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { PostComponent } from './post/post.component';\nimport { ViewPostComponent } from './view-post/view-post.component';\nimport { RoutePostDirective } from './route-post.directive';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    EditPostComponent,\n    PostComponent,\n    ViewPostComponent,\n    RoutePostDirective,\n  ],\n  imports: [CommonModule, PostsRoutingModule, ReactiveFormsModule],\n})\nexport class PostsModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { UserService } from '../user.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostResolver implements Resolve<boolean> {\n  constructor(private userService: UserService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.userService.user\n      .get('posts')\n      .get(route.params.soul)\n      .once()\n      .pipe(map((post: any) => post._));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>post works!</p>\n"],"sourceRoot":"webpack:///"}