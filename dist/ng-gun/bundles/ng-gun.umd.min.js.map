{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-gun/src/lib/functions/gun-utils.ts","../../../projects/ng-gun/src/lib/classes/GunChain.ts","../../../projects/ng-gun/src/lib/ng-gun.service.ts","../../../projects/ng-gun/src/lib/ng-gun.component.ts","../../../projects/ng-gun/src/lib/alias.pipe.ts","../../../projects/ng-gun/src/lib/chain.directive.ts","../../../projects/ng-gun/src/lib/soul.pipe.ts","../../../projects/ng-gun/src/lib/updated.pipe.ts","../../../projects/ng-gun/src/lib/ng-sea.service.ts","../../../projects/ng-gun/src/lib/verify.pipe.ts","../../../projects/ng-gun/src/lib/route-chain.directive.ts","../../../projects/ng-gun/src/lib/ng-gun.module.ts","../../../projects/ng-gun/src/lib/gun-resolver.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__param","paramIndex","decorator","target","key","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","gunChainArray","c","path","get","back","GUN_NODE","GunChain","ngZone","gun","isNested","certificate$","Subject","certificates","sources","Map","_auth","Gun","defineProperty","_gun","_this","myKey","gunPath","chainArray","userPair","user","is","userPub","_a","pub","pubs","filter","startsWith","recordPub","firstPub","findIndex","k","record","indexOf","pathFromRecord","splice","reverse","keyInRecord","pathCerts_1","myCert","not","once","pubCert","certificate","cert","console","log","undefined","from","soul","getSoul","put","data","warn","putAck","_i","opt","set","load","certs","unset","Error","query","fromEventPattern","handler","converted","run","stopped","signal","pipe","take","open","debounceTime","map","options","reduce","on","includeKeys","scan","acc","val","includeNulls","values","ov","at","ev","off","dispatchHandler","bypassZone","auth","GunAuthChain","recall","sessionStorage","pubKey","replace","onEvent","event","node","has","source","args","shareReplay","i0__namespace","ɵɵinject","NgZone","factory","ɵfac","Injectable","Optional","Inject","_super","root","auth$","tap","ack","err","_is","subscribe","alias","_c","_b","login","pass","login$","mergeMap","wait","throwError","of","retryWhen","errors","delay","mergeAll","secret","timeout","logout","leave","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__decorate","SkipSelf","GunCertChain","GunOptions","NgGunService","gunOptions","JSON","parse","stringify","peers","findAlias","providedIn","NgGunComponent","ngOnInit","selectors","decls","vars","template","rf","ctx","i0","Component","selector","styles","AliasPipe","ngGun","_ref","transform","AsyncPipe","ɵɵdirectiveInject","ɵɵinjectPipeChangeDetectorRef","pure","Pipe","name","ChainDirective","_chain$","EventEmitter","chain$","_chain","emit","inputs","chain","exportAs","Directive","Input","SoulPipe","UpdatedPipe","updates","latest","time","NgSeaService","SEA","certify","certificants","policies","authority","certifySelf","pair","getCertStore","certificant","paths","isProtected","opts","isArray","certificantsPromises","all","store","certPromises","policy","*","toPromise","VerifyPipe","sea","ref","verify","detectChanges","route","dataKey","data$","switchMap","RouteChainDirective","i1__namespace","ActivatedRoute","outputs","Output","NgGunModule","providers","provide","useValue","declarations","exports","NgModule","GunResolverService","state","params"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunCertificate } from '../classes/Certificate';\nexport const gunUpdateTime = (value: any) => {\n  const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n  if (!updates) {\n    return 0;\n  }\n  return Object.values(updates).reduce((latest: any, time: any) =>\n    time > latest ? time : latest\n  ) as number;\n};\nexport const gunChainArray = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  do {\n    if (c._.get) {\n      path.push(c);\n    } else {\n      break;\n    }\n    c = c.back();\n  } while (c.back() !== c);\n\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport const gunCertificateChain = (value: IGunChainReference) =>\n  gunChainArray(value).map((c) => c.get('certs'));\n\n/**\n * Returns an array of keys representing the path of the given chain\n * @param value the chain to pathify\n */\nexport const gunPath = (value: IGunChainReference) => {\n  let c = value as any;\n  const path = [];\n  while (c.back) {\n    const back = c.back();\n    if (back !== c && (c as any)._.get) {\n      const key = (c as any)._.get;\n      path.push(key);\n      c = c.back();\n    } else {\n      break;\n    }\n  }\n  return path;\n};\n\nexport function parseCertificate(cert: string) {\n  const RE_SEA_CERT = /^SEA/;\n  if (!RE_SEA_CERT.test(cert)) {\n    throw new Error('could not parse certificate, incorrect prefix');\n  }\n  const scrubbed = cert.replace(RE_SEA_CERT, '');\n  return JSON.parse(scrubbed) as IGunCertificate;\n}\n","import { Inject, Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport {\n  AlwaysDisallowedType,\n  ArrayAsRecord,\n  ArrayOf,\n  DisallowArray,\n  DisallowPrimitives,\n} from 'gun/types/types';\nimport {\n  from,\n  fromEventPattern,\n  Observable,\n  of,\n  Subject,\n  throwError,\n} from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  filter,\n  map,\n  mergeAll,\n  mergeMap,\n  retryWhen,\n  scan,\n  shareReplay,\n  take,\n  tap,\n  timeout,\n} from 'rxjs/operators';\nimport { gunChainArray, gunPath } from '../functions/gun-utils';\nimport { GunRuntimeOpts } from '../GunRuntimeOpts';\nimport { ICertStore } from './ICertStore';\nimport { LexicalQuery } from './LexicalQuery';\nimport { SEA } from 'gun';\n\nexport const GUN_NODE = Symbol('GUN_NODE');\n\nexport interface GunChainCallbackOptions {\n  includeKeys?: boolean;\n  includeNulls?: boolean;\n  changes?: boolean;\n  bypassZone?: boolean;\n}\n\nexport interface GunChainFunctions {\n  secret: (value: any) => IGunChainReference;\n  grant: (value: any) => IGunChainReference;\n}\n\nexport interface GunChainMeta {\n  _: {\n    root: {\n      opt: GunRuntimeOpts;\n    };\n  } & any;\n}\n\n@Injectable()\nexport class GunChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop extends 'pre_root' | 'root' | false = false\n> {\n  path!: string[];\n  isNested = false;\n  recordPub!: any;\n  record?: any;\n  certificate!: string;\n  certificate$ = new Subject<string>();\n\n  private _gun!: IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta;\n  public get gun(): IGunChainReference<DataType, ReferenceKey, IsTop> &\n    GunChainFunctions &\n    GunChainMeta {\n    return this._gun;\n  }\n  public set gun(\n    value: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta\n  ) {\n    this._gun = value;\n    const myKey = (value as any)._.get;\n\n    const path = gunPath(value as any);\n    const chainArray = gunChainArray(value as any);\n    this.path = path;\n\n    const userPair = (this.gun.user() as any).is;\n    if (!userPair) {\n      // TODO figure out how to handle this case\n\n      return;\n    }\n    const userPub = `~${(this.gun.user() as any).is?.pub}`;\n    const pubs = path.filter((key) => key.startsWith('~'));\n    if (pubs.length > 0) {\n      this.recordPub = pubs[0];\n      const firstPub = path.findIndex((k) => k.startsWith('~'));\n      this.record = chainArray[firstPub];\n\n      if (this.recordPub.indexOf(userPub) < 0) {\n        this.isNested = true;\n        const pathFromRecord = [...path];\n        const recordPath = pathFromRecord.splice(firstPub).reverse();\n        pathFromRecord.reverse();\n\n        if (myKey === this.recordPub) {\n          // console.log('sub root', myKey);\n        } else {\n          // console.log('foreign key', myKey);\n          const keyInRecord = pathFromRecord[0];\n          const record = chainArray[firstPub];\n          // console.log('record', record);\n\n          this.record = record;\n          const recordCerts = record.get('certs');\n          const pathCerts = recordCerts.get(keyInRecord);\n          const searchKeys = [userPair.pub, '*'];\n          const myCert = pathCerts.get(userPair.pub);\n          myCert.not(() => {\n            // console.log('no cert found');\n            pathCerts.get('*').once((pubCert: any) => {\n              if (!pubCert) {\n                // console.warn('no public cert found either');\n              }\n              this.certificate = pubCert;\n              this.certificate$.next(pubCert);\n            });\n          });\n          // console.log('  %s', keyInRecord);\n          myCert.once(async (cert: any) => {\n            if (cert === null || cert === undefined) {\n              console.log('no user cert found, checking for public cert');\n              return;\n            }\n            // console.log('cert', cert);\n            // TODO verify cert later, the await causes chained put() calls to fail\n            // const verified = await SEA.verify(\n            //   cert,\n            //   this.recordPub.replace('~', '')\n            // );\n            this.certificate = cert;\n            this.certificate$.next(cert);\n            // console.log(\n            //   'verified cert for %s.%s',\n            //   this.recordPub,\n            //   keyInRecord,\n            //   pathFromRecord.join('.')\n            // );\n          });\n        }\n      }\n    }\n  }\n\n  public get canEdit(): boolean {\n    return this.certificate !== null && this.certificate !== undefined;\n  }\n\n  constructor(\n    protected ngZone: NgZone,\n    @Optional()\n    @Inject(GUN_NODE)\n    gun: IGunChainReference<DataType, ReferenceKey, IsTop> &\n      GunChainFunctions &\n      GunChainMeta\n  ) {\n    if (!gun) {\n      this.gun = new Gun() as any;\n    } else {\n      this.gun = gun;\n    }\n  }\n  certificates: ICertStore = {};\n  private sources = new Map<string, Observable<any>>();\n  private _auth: GunAuthChain<DataType, ReferenceKey> | null = null;\n\n  from<T>(gun: IGunChainReference<T>) {\n    return new GunChain<T>(this.ngZone, gun as any);\n  }\n\n  get<K extends keyof DataType>(\n    key: ArrayOf<DataType> extends never ? K : ArrayOf<DataType>\n  ) {\n    const soul: ArrayOf<DataType> extends never\n      ? K\n      : ArrayOf<DataType> = this.getSoul(key);\n    return this.from(this.gun.get(soul));\n  }\n\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate: string = this.certificate\n  ) {\n    // FIXME \"unverified data\" - certified put values must be signed?\n\n    if (this.isNested && !certificate) {\n      console.warn('NO CERTIFICATE FOUND FOR FOREIGN RECORD!');\n    }\n    (this.gun.put as any)(\n      data,\n      (...putAck: any[]) => {\n        console.log('putAck', putAck);\n      },\n      certificate ? { opt: { cert: certificate } } : undefined\n    );\n    return this;\n  }\n\n  set(\n    data: AlwaysDisallowedType<\n      DataType extends Array<infer U>\n        ? U extends {\n            [key: string]: any;\n            [key: number]: any;\n          }\n          ? ArrayOf<DataType>\n          : never\n        : never\n    >,\n    certificate: string = this.certificate\n  ) {\n    if (this.isNested && !certificate) {\n      console.warn('NO CERTIFICATE FOUND FOR FOREIGN RECORD!');\n      this.record?.get('certs').load((certs: any) => {\n        console.log('all certs:', certs);\n      });\n    }\n    return this.from(\n      this.gun.set(\n        data,\n        null,\n        certificate\n          ? {\n              opt: {\n                cert: certificate,\n              },\n            }\n          : undefined\n      )\n    );\n  }\n\n  unset(data: ArrayOf<DataType>) {\n    if (this.gun.unset) {\n      return this.from(this.gun.unset(data));\n    } else {\n      throw new Error('CANNOT FIND Gun.chain.unset!');\n    }\n  }\n\n  query(query: LexicalQuery): GunChain<DataType, ReferenceKey, IsTop> {\n    return this.from(this.gun.get(query as any)) as any;\n  }\n\n  load() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).load((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n  open() {\n    // return this.from((this.gun as any).load((d: any) => d) as any);\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        (this.gun as any).open((data: any) => {\n          const converted = data;\n          this.ngZone.run(() => {\n            handler(converted);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(debounceTime(25));\n  }\n\n  map(options?: GunChainCallbackOptions) {\n    return this.from(this.gun.map());\n  }\n\n  reduce(options?: GunChainCallbackOptions) {\n    const base = this.from(this.gun.map());\n\n    return base.on({ includeKeys: true }).pipe(\n      scan((acc: any, val: any) => {\n        if (val[0] === null || undefined === val[0]) {\n          delete acc[val[1]];\n        } else {\n          acc[val[1]] = val[0];\n        }\n        return acc;\n      }, {} as DataType[]),\n      map((v) =>\n        options?.includeNulls\n          ? v\n          : Object.values(v).filter((ov) => ov !== undefined)\n      ),\n      debounceTime(100)\n    );\n  }\n\n  not() {\n    return fromEventPattern((handler) => {\n      const signal = { stopped: false };\n      if (this.gun.not) {\n        this.gun.not((key: ReferenceKey) => {\n          handler(key);\n        });\n      }\n    });\n  }\n\n  on(\n    options?: GunChainCallbackOptions\n  ): Observable<AlwaysDisallowedType<ArrayAsRecord<DataType>>> {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.on(\n          (\n            data: AlwaysDisallowedType<ArrayAsRecord<DataType>>,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (signal.stopped) {\n              return ev.off();\n            }\n            const dispatchHandler = () => {\n              if (options?.includeKeys) {\n                handler(data, key);\n              } else {\n                handler(data);\n              }\n            };\n            // FIXME: ngZone.run() causes infinite recursion\n            if (options?.bypassZone) {\n              dispatchHandler();\n            } else {\n              this.ngZone.run(dispatchHandler);\n            }\n          },\n          options as any\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    );\n  }\n\n  once() {\n    return fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.once(\n          (\n            data:\n              | AlwaysDisallowedType<ArrayAsRecord<DataType>>\n              | DisallowPrimitives<\n                  IsTop,\n                  AlwaysDisallowedType<ArrayAsRecord<DataType>>\n                >\n              | undefined,\n            key,\n            at?: any,\n            ev?: any\n          ) => {\n            if (ev && signal.stopped) {\n              return ev.off();\n            }\n            this.ngZone.run(() => {\n              handler(data);\n            });\n          }\n        );\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(take(1));\n  }\n\n  auth() {\n    if (!this._auth) {\n      this._auth = new GunAuthChain<DataType, ReferenceKey>(\n        this.ngZone,\n        //// no fix for this... gun.user.is is static! can't have multiple logins on a single gun instance\n        // TODO allow option to create a new gun instance for this auth call\n        this.gun.user().recall({ sessionStorage: true }) as any,\n        this as any\n      );\n    }\n    return this._auth;\n  }\n\n  user(pubKey?: string) {\n    return this.from(this.gun.user(pubKey?.replace(/^~/, '')));\n  }\n\n  onEvent(event: string, node = this.gun): Observable<any> {\n    if (!this.sources.has(event)) {\n      const source = fromEventPattern((handler) => {\n        // console.log('add handler');\n        (node as any).on(event, (...args: any) => {\n          this.ngZone.run(() => {\n            handler(...args);\n          });\n        });\n      }).pipe(shareReplay(1));\n      this.sources.set(event, source);\n    }\n    return this.sources.get(event) as Observable<any>;\n  }\n\n  protected getSoul(key: any) {\n    return typeof key === 'object' && Gun.node.is(key)\n      ? (Gun.node.soul(key) as any)\n      : key;\n  }\n}\n\n/** Represents a top-level authenticated node (user or key pair) */\nexport class GunAuthChain<\n  DataType = Record<string, any>,\n  ReferenceKey = any,\n  IsTop = false\n> extends GunChain<DataType, ReferenceKey, false> {\n  private _is: any;\n  set is(value: any) {\n    this._is = value;\n\n    if (value) {\n      this.root\n        .get(`~${value.pub}`)\n        .get('alias')\n        .once()\n        .subscribe((alias: any) => {\n          this.alias = this.gun._.root.user?._?.put?.alias;\n        });\n    }\n  }\n  get is() {\n    return this._is;\n  }\n  alias!: string;\n  auth$ = this.root.onEvent('auth').pipe(\n    tap((ack) => {\n      if (!ack.err) {\n        this.is = ack.put;\n      }\n    }),\n    shareReplay(1)\n  );\n\n  constructor(\n    ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    gun: IGunChainReference<DataType, ReferenceKey, false> &\n      Partial<GunChainFunctions> &\n      Partial<GunChainMeta>,\n    @Optional() @SkipSelf() public root: GunChain\n  ) {\n    super(ngZone, gun as any);\n    this.is = (gun as any).is;\n  }\n\n  login(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => !ack.err),\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n\n    const login$ = fromEventPattern(\n      (handler) => {\n        const signal = { stopped: false };\n        this.gun.auth(alias, pass, (ack: any) => {\n          this.ngZone.run(() => {\n            handler(ack);\n          });\n        });\n        return signal;\n      },\n      (handler, signal) => {\n        signal.stopped = true;\n      }\n    ).pipe(\n      mergeMap((ack: any) => (ack.wait ? throwError(new Error(ack)) : of(ack))),\n      retryWhen((errors) => errors.pipe(delay(1000), take(10)))\n    );\n    const loginOrAuth$ = from([auth$, login$]).pipe(mergeAll(), take(1));\n    return loginOrAuth$;\n  }\n\n  create(alias: string, pass: string) {\n    const auth$ = this.root.onEvent('auth').pipe(\n      filter((ack) => {\n        return ack.put.alias === alias;\n      }),\n      take(1)\n    );\n    this.gun.create(alias, pass);\n    return auth$;\n  }\n\n  secret(value: any) {\n    if (this.gun.secret) {\n      return this.from(this.gun.secret(value));\n    }\n    throw new Error('GUN.chain.secret NOT FOUND');\n  }\n\n  from<T>(gun: IGunChainReference<T>) {\n    return new GunAuthChain<T>(this.ngZone, gun, this.root);\n  }\n\n  recall() {\n    this.gun.recall({ sessionStorage: true });\n    return this.auth$.pipe(timeout(5000));\n  }\n\n  logout() {\n    this.gun.leave();\n  }\n  put(\n    data: Partial<\n      AlwaysDisallowedType<DisallowPrimitives<IsTop, DisallowArray<DataType>>>\n    >,\n    certificate: string = this.certificate\n  ) {\n    // SEA.sign(data, this.is.alias);\n    super.put(data, certificate);\n    return this;\n  }\n}\n\n/** Represents a node nested under a user/pair\n * gun.user() : AuthChain\n * gun.user(pub) : UserChain\n * gun.get('~@alias') : GunChain<{pub: string}>\n */\nexport class GunCertChain extends GunChain {}\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport * as Gun from 'gun';\nimport { IGunChainReference } from 'gun/types/chain';\nimport { IGunConstructorOptions } from 'gun/types/options';\nimport { GunChain } from './classes/GunChain';\nimport { GunPeers } from './GunPeers';\nexport const GunOptions = 'gun-options';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgGunService<\n  DataType = Record<string, any>,\n  ReferenceKey = any\n> extends GunChain<DataType, ReferenceKey, 'pre_root'> {\n  get peers(): GunPeers {\n    return this.gun._.root.opt.peers;\n  }\n\n  constructor(\n    @Inject(GunOptions)\n    public readonly gunOptions: IGunConstructorOptions,\n    ngZone: NgZone\n  ) {\n    super(ngZone, new Gun(JSON.parse(JSON.stringify(gunOptions))) as any);\n  }\n\n  findAlias(alias: string) {\n    return this.get(`~@${alias}` as any).once();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-gun',\n  template: `\n    <p>\n      ng-gun works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgGunComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { NgGunService } from './ng-gun.service';\nimport { map, take, shareReplay } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Pipe({\n  name: 'alias',\n})\nexport class AliasPipe extends AsyncPipe implements PipeTransform {\n  constructor(private ngGun: NgGunService, _ref: ChangeDetectorRef) {\n    super(_ref);\n  }\n  transform(value: any, ...args: any[]): any {\n    if (value === '*') {\n      return of(value);\n    }\n    return this.ngGun\n      .get(`~${value.replace('~', '')}`)\n      .on()\n      .pipe(\n        map((v: any) => v.alias || value),\n        shareReplay(1)\n      );\n  }\n}\n","import { Directive, Input, EventEmitter } from '@angular/core';\nimport { GunChain } from './classes/GunChain';\nimport { NgGunService } from './ng-gun.service';\nimport { shareReplay } from 'rxjs/operators';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[gunChain]',\n  exportAs: 'gunChain',\n})\nexport class ChainDirective {\n  private _chain?: GunChain | undefined;\n  public get chain(): GunChain | undefined {\n    return this._chain;\n  }\n  @Input('gunChain')\n  public set chain(value: GunChain | undefined) {\n    if (value !== this._chain) {\n      this._chain = value;\n      this._chain$.emit(value);\n    }\n  }\n\n  private _chain$ = new EventEmitter<GunChain>();\n  chain$ = this._chain$.pipe(shareReplay(1));\n\n  constructor(private ngGun: NgGunService) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'soul',\n})\nexport class SoulPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return Gun.node.is(value) ? Gun.node.soul(value) : undefined;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as Gun from 'gun';\n\n@Pipe({\n  name: 'updated',\n})\nexport class UpdatedPipe implements PipeTransform {\n  transform(value: any, ...args: unknown[]): unknown {\n    const updates = Gun.node.is(value) ? (value as any)._['>'] : null;\n    if (!updates) {\n      return null;\n    }\n    return Object.values(updates).reduce(\n      (latest: any, time: any) => (time > latest ? time : latest),\n      0\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as Gun from 'gun';\nimport { IGunStaticSEA } from 'gun/types/static/sea';\nimport { from } from 'rxjs';\nimport { Certificants, CertificatePolicy } from './classes/Certificate';\nimport { mergeAll, mergeMap } from 'rxjs/operators';\n\nexport interface CertificateOptions {\n  epiry?: number;\n  blacklist?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgSeaService {\n  SEA: IGunStaticSEA & {\n    certify: (\n      certificants: any,\n      policies: any,\n      authority: any,\n      cb?: any,\n      opt?: any\n    ) => Promise<any>;\n  } = Gun.SEA as any;\n  constructor() {}\n\n  certify(\n    certificants: Certificants,\n    policies: CertificatePolicy | CertificatePolicy[],\n    authority: any,\n    options?: CertificateOptions\n  ) {\n    return from(\n      this.SEA.certify(certificants, policies, authority, null, options)\n    );\n  }\n\n  certifySelf(pair: any) {\n    return from(this.SEA.certify(pair, '*', pair));\n  }\n\n  pair() {\n    return from(this.SEA.pair(() => {}));\n  }\n\n  async getCertStore(\n    certificant: any,\n    paths: string[],\n    auth: any,\n    isProtected = false,\n    opts: any = null\n  ) {\n    console.log('certifying', certificant);\n    if (Array.isArray(certificant)) {\n      const certificantsPromises: any = certificant.map(\n        async (c) => await this.getCertStore(c, paths, auth, isProtected, opts)\n      );\n      const certificants: any[] = await Promise.all(certificantsPromises);\n      console.log('certificants', certificants);\n      return certificants;\n    }\n    if (typeof certificant !== 'string') {\n      if (typeof certificant !== 'object') {\n        throw new Error('cannot certify provided certificant');\n      } else if (!certificant.pub) {\n        throw new Error('cannot certify provided certificant');\n      }\n    }\n    const store = {} as any;\n    const certPromises = paths.map(async (path: string) => {\n      const policy = { '*': path } as any;\n      if (isProtected) {\n        policy['+'] = '*';\n      }\n      const cert = await this.certify(\n        certificant,\n        policy,\n        auth,\n        opts\n      ).toPromise();\n      store[path] = {} as any;\n      store[path][certificant.pub || certificant] = cert;\n    });\n    await Promise.all(certPromises);\n    // console.log('certified', store);\n    return store;\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Optional,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { map, take, pluck, tap } from 'rxjs/operators';\nimport { NgSeaService } from './ng-sea.service';\nimport { ChainDirective } from './chain.directive';\nimport { SEA } from 'gun';\nimport { of, from } from 'rxjs';\nimport { NgGunService } from './ng-gun.service';\n\n@Pipe({\n  name: 'verify',\n})\nexport class VerifyPipe extends AsyncPipe implements PipeTransform {\n  constructor(\n    private ngGun: NgGunService,\n    private sea: NgSeaService,\n    private ref: ChangeDetectorRef,\n    @Optional()\n    private chain: ChainDirective\n  ) {\n    super(ref);\n  }\n  transform(value: any, ...args: any[]) {\n    if (!this.chain.chain) {\n      return null;\n    }\n    return from(\n      SEA.verify(value, this.chain.chain?.recordPub.replace('~', ''))\n    ).pipe(\n      // tap((v) => console.log('verified', v)),\n      tap((v) => this.ref.detectChanges())\n    ) as any;\n    // ) as any;\n  }\n}\n","import { Directive, Inject, Optional, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgGunService } from './ng-gun.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as Gun from 'gun';\nimport { Observable } from 'rxjs';\n\n@Directive({\n  selector: '[libRouteGun]',\n})\nexport class RouteChainDirective<T = any> {\n  @Output()\n  chain$ = this.route.data.pipe(\n    map((data) => {\n      const d = data[this.dataKey];\n      const soul = Gun.node.soul(d);\n      // console.log('route data', this.dataKey);\n      return this.ngGun.auth().root.get(soul);\n    })\n  );\n  @Output()\n  data$: Observable<T> = this.chain$.pipe(\n    switchMap((chain) => chain.once() as Observable<T>)\n  );\n  constructor(\n    private route: ActivatedRoute,\n    protected ngGun: NgGunService,\n    @Optional()\n    @Inject('gun-route-data-key')\n    private dataKey: string = 'chain'\n  ) {\n    this.data$.subscribe((data) => console.log({ data }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AliasPipe } from './alias.pipe';\nimport { ChainDirective } from './chain.directive';\nimport { NgGunComponent } from './ng-gun.component';\nimport { SoulPipe } from './soul.pipe';\nimport { UpdatedPipe } from './updated.pipe';\nimport { VerifyPipe } from './verify.pipe';\nimport { RouteChainDirective } from './route-chain.directive';\n\n@NgModule({\n  declarations: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n    RouteChainDirective,\n  ],\n  exports: [\n    NgGunComponent,\n    SoulPipe,\n    UpdatedPipe,\n    ChainDirective,\n    AliasPipe,\n    VerifyPipe,\n    RouteChainDirective,\n  ],\n  providers: [{ provide: 'gun-route-data-key', useValue: 'chain' }],\n})\nexport class NgGunModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { NgGunService } from './ng-gun.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GunResolverService<T> implements Resolve<T> {\n  constructor(private ngGun: NgGunService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    const soul = route.params.soul;\n    return this.ngGun.auth().root.get(soul).once();\n  }\n}\n"]}